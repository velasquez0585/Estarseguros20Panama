Imports System.Net
Imports System.Web.Http
Imports estarseguros20.capawebapi.modelo
Imports estarseguros20.capaobjetos.comun.modelo.dbestarseguros20.entidades.configuracion
Imports estarseguros20.capaobjetos.aipauto.modelo.dbestarseguros20.entidades.inspeccion
Imports estarseguros20.capaobjetos.aipauto.modelo.dbestarseguros20.entidades.log
Imports estarseguros20.capaobjetos.aipauto.modelo.dbestarseguros20.entidades.mantenimiento
Imports estarseguros20.capaobjetos.aipauto.modelo.dbestarseguros20.vistas.inspeccion
Imports estarseguros20.capaobjetos.aipauto.modelo.dbestarseguros20.vistas.mantenimiento
Imports estarseguros20.capawebapi.aipauto.entidades.controlador
Imports estarseguros20.capawebapi.comun.entidades.controlador
Imports estarseguros20.capawebapi.aipauto.vistas.controlador
Imports System.Data.SqlClient
Imports estarseguros20.capaobjetos.modelo.personalizados
Imports funciones.lib.matematica
Imports funciones.lib.archivos
Imports funciones.lib.cadenas
Imports System.IO

Imports estarseguros20.capaobjetos.seginsoft.modelo.dbestarseguros20.entidades.seguridad
Imports estarseguros20.capawebapi.seginsoft.entidades.controlador

Imports estarseguros20.capaobjetos.aipauto.modelo.dbestarseguros20.entidades.agenda

Imports System.Threading.Tasks
Imports System.Net.Http

Imports iTextSharp.text
Imports iTextSharp.text.pdf
Imports System.Transactions
Imports estarseguros20.capawebapi.seginsoft.vistas.controlador
Imports estarseguros20.capaobjetos.seginsoft.modelo.dbestarseguros20.vistas.seguridad
Imports Oracle.ManagedDataAccess
Imports EmitMapper
Imports estarseguros20.capaobjetos.seginsoft.modelo.dbestarseguros20.entidades.trazabilidad
Imports estarseguros20.capaobjetos

Namespace aipauto.modulos.controlador
    Public Class InspeccionController
        Inherits ApiController

        'Dim _db As New dbestarseguros20.config(funciones.obtener_cnxcadenaxpais(HttpContext.Current.Request.Headers.GetValues("xnombrepais").FirstOrDefault))
        Dim _db As New dbestarseguros20.config(funciones.obtener_cnxcadenaxpais("venezuela"))



        <HttpPost()> _
        Public Function CrearAipInsEncMovil(aipinsenc As aipinsenc) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "directo"
                param1.ParameterName = "p_illamada"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = aipinsenc.idaipinsenc
                param8.ParameterName = "p_idaipinsenc"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.VarChar
                param9.Size = 50
                If aipinsenc.itipoinsenc IsNot Nothing Then
                    param9.Value = aipinsenc.itipoinsenc
                Else
                    param9.Value = ""
                End If
                param9.ParameterName = "p_itipoinsenc"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = aipinsenc.idsegmanusuperit
                param10.ParameterName = "p_idsegmanusuperit"

                


                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.VarChar
                param11.Size = 20
                If aipinsenc.xcedpropinsenc IsNot Nothing Then
                    param11.Value = aipinsenc.xcedpropinsenc
                Else
                    param11.Value = ""
                End If
                param11.ParameterName = "p_xcedpropinsenc"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.VarChar
                param12.Size = 20
                If aipinsenc.xcedsidoinsenc IsNot Nothing Then
                    param12.Value = aipinsenc.xcedsidoinsenc
                Else
                    param12.Value = ""
                End If
                param12.ParameterName = "p_xcedsidoinsenc"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.VarChar
                param13.Size = 20
                If aipinsenc.xplacinsenc IsNot Nothing Then
                    param13.Value = aipinsenc.xplacinsenc
                Else
                    param13.Value = ""
                End If
                param13.ParameterName = "p_xplacinsenc"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 30
                If aipinsenc.xsermotinsenc IsNot Nothing Then
                    param14.Value = aipinsenc.xsermotinsenc
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_xsermotinsenc"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.VarChar
                param15.Size = 30
                If aipinsenc.xsercarrinsenc IsNot Nothing Then
                    param15.Value = aipinsenc.xsercarrinsenc
                Else
                    param15.Value = ""
                End If
                param15.ParameterName = "p_xsercarrinsenc"

                Dim param16 As New SqlClient.SqlParameter
                param16.SqlDbType = SqlDbType.VarChar
                param16.Size = 50
                If aipinsenc.xnumpolinsenc IsNot Nothing Then
                    param16.Value = aipinsenc.xnumpolinsenc
                Else
                    param16.Value = ""
                End If
                param16.ParameterName = "p_xnumpolinsenc"

                Dim param17 As New SqlClient.SqlParameter
                param17.SqlDbType = SqlDbType.VarChar
                param17.Size = 50
                If aipinsenc.xnumsininsenc IsNot Nothing Then
                    param17.Value = aipinsenc.xnumsininsenc
                Else
                    param17.Value = ""
                End If
                param17.ParameterName = "p_xnumsininsenc"

                Dim param18 As New SqlClient.SqlParameter
                param18.SqlDbType = SqlDbType.VarChar
                param18.Size = 200
                If aipinsenc.xllavinsenc IsNot Nothing Then
                    param18.Value = aipinsenc.xllavinsenc
                Else
                    param18.Value = ""
                End If
                param18.ParameterName = "p_xllavinsenc"

                Dim param19 As New SqlClient.SqlParameter
                param19.SqlDbType = SqlDbType.DateTime
                If aipinsenc.fcreainsenc > CDate("01-01-1900") Then
                    param19.Value = aipinsenc.fcreainsenc
                Else
                    param19.Value = CDate("01-01-1900")
                End If
                param19.ParameterName = "p_fcreainsenc"

                Dim param20 As New SqlClient.SqlParameter
                param20.SqlDbType = SqlDbType.DateTime
                If aipinsenc.fprocinsenc > CDate("01-01-1900") Then
                    param20.Value = aipinsenc.fprocinsenc
                Else
                    param20.Value = CDate("01-01-1900")
                End If
                param20.ParameterName = "p_fprocinsenc"

                Dim param21 As New SqlClient.SqlParameter
                param21.SqlDbType = SqlDbType.DateTime
                If aipinsenc.faudinsenc > CDate("01-01-1900") Then
                    param21.Value = aipinsenc.faudinsenc
                Else
                    param21.Value = CDate("01-01-1900")
                End If
                param21.ParameterName = "p_faudinsenc"

                Dim param22 As New SqlClient.SqlParameter
                param22.SqlDbType = SqlDbType.DateTime
                If aipinsenc.fultrechinsenc > CDate("01-01-1900") Then
                    param22.Value = aipinsenc.fultrechinsenc
                Else
                    param22.Value = CDate("01-01-1900")
                End If
                param22.ParameterName = "p_fultrechinsenc"

                Dim param23 As New SqlClient.SqlParameter
                param23.SqlDbType = SqlDbType.DateTime
                If aipinsenc.fcancinsenc > CDate("01-01-1900") Then
                    param23.Value = aipinsenc.fcancinsenc
                Else
                    param23.Value = CDate("01-01-1900")
                End If
                param23.ParameterName = "p_fcancinsenc"

                Dim param24 As New SqlClient.SqlParameter
                param24.SqlDbType = SqlDbType.DateTime
                If aipinsenc.facepinsenc > CDate("01-01-1900") Then
                    param24.Value = aipinsenc.facepinsenc
                Else
                    param24.Value = CDate("01-01-1900")
                End If
                param24.ParameterName = "p_facepinsenc"

                Dim param25 As New SqlClient.SqlParameter
                param25.SqlDbType = SqlDbType.VarChar
                param25.Size = 500
                If aipinsenc.xdescinsenc IsNot Nothing Then
                    param25.Value = aipinsenc.xdescinsenc
                Else
                    param25.Value = ""
                End If
                param25.ParameterName = "p_xdescinsenc"

                Dim param26 As New SqlClient.SqlParameter
                param26.SqlDbType = SqlDbType.VarChar
                param26.Size = 20
                If aipinsenc.iestatinsenc IsNot Nothing Then
                    param26.Value = aipinsenc.iestatinsenc
                Else
                    param26.Value = ""
                End If
                param26.ParameterName = "p_iestatinsenc"

                Dim param27 As New SqlClient.SqlParameter
                param27.SqlDbType = SqlDbType.Decimal
                param27.Precision = 18
                param27.Scale = 0
                param27.Value = aipinsenc.idseglogreg
                param27.ParameterName = "p_idseglogreg"
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_rncreaaipinsenc @p_illamada,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinsenc output,@p_itipoinsenc,@p_idsegmanusuperit,@p_xcedpropinsenc,@p_xcedsidoinsenc,@p_xplacinsenc,@p_xsermotinsenc,@p_xsercarrinsenc,@p_xnumpolinsenc,@p_xnumsininsenc,@p_xllavinsenc,@p_fcreainsenc,@p_fprocinsenc,@p_faudinsenc,@p_fultrechinsenc,@p_fcancinsenc,@p_facepinsenc,@p_xdescinsenc,@p_iestatinsenc,@p_idseglogreg", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20, param21, param22, param23, param24, param25, param26, param27)
                'Dim f As Integer = 0

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:CrearAipInsEncMovil ", ex)
                Return respopera
            End Try
        End Function


        <HttpPost()> _
        Public Function AgregarAipLogEve(xnomlogeve As String, idsegmanusu As Decimal, iamblogeve As String) As respopera
            Try

                Dim aiplogeveController As New aiplogeveController
                Dim aiplogeve As New aiplogeve
                Dim respopera As respopera
                With aiplogeve
                    .idaiplogeve = 0
                    .xnomlogeve = xnomlogeve
                    .idsegmanusu = idsegmanusu
                    .fcrealogeve = Date.Now
                    .iamblogeve = iamblogeve
                    .idseglogreg = 0
                End With
                respopera = aiplogeveController.insaiplogeve(aiplogeve)

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AgregarAipLogEve ", ex)
                Return respopera
            End Try
        End Function


        Public Sub log_errores(ByVal ex As String, xrutaraiz As String)
            CrearCarpeta(xrutaraiz)
            Dim txt_dir As String = xrutaraiz & "\errror_log.txt"
            Console.WriteLine("{0} already exists.", txt_dir)
            Using txt_Writer = New System.IO.StreamWriter(txt_dir)
                txt_Writer.WriteLine(ex)
                txt_Writer.Close() 'cierra txt
                System.GC.Collect()
            End Using
        End Sub

        Public Sub AgregarLogErrores(ByVal ex As String, e As Exception)
            Dim seglogerr As New seglogerr
            Dim seglogerrController As New seglogerrController
            With seglogerr
                .idseglogerr = 0
                .xdatoslogerr = ex
                .flogerr = Date.Now
                .xexhelplink = e.HelpLink
                If e.InnerException IsNot Nothing Then
                    .xexinnerexception = e.InnerException.ToString()
                End If
                .xexmessage = e.Message
                .xexsource = e.Source
                .xextargetsite = "" '//e.TargetSite
                .xexstacktrace = e.StackTrace
                .idseglogreg = 0
            End With
            seglogerrController.insseglogerr(seglogerr)
        End Sub

        <HttpGet()>
        Public Function Prueba()    'METODO DE PRUEBA PARA VERIFICAR EL ENVIO DE FECHA Y HORA
            'Dim nombreArchivo As String = "5585.555888..Fxvnj...Gvbb#355258057777000#080520142200#0-1.jpg"
            Dim nombreArchivo As String = "133134.1616464..Qdqxa.Sxscsh..#353922058239177#110720141457#0-1.jpg#10.4845302&-66.8046696"
            Dim valores_fotos1 As String() = Split(nombreArchivo, "#")
            Dim valores_fotos2 As String() = Split(valores_fotos1(0), ".")
            Dim valores_fotos3 As String() = Split(valores_fotos1(3), ".") 'tipo de foto y contador juntos
            Dim valores_fotos4 As String() = Split(valores_fotos3(0), "-") 'tipo de foto y contador separados              
            'Dim valores_fotos5 As String() = Split(valores_fotos1(4), "&") 'aqui guarda la longitud 
            'Dim lat = valores_fotos5(0)
            'Dim log = valores_fotos5(1)
            Dim lugar = "despues de la lista de valores saparados"
            Dim fecha As String
            fecha = valores_fotos1(2)
            Dim dia = fecha(0) + fecha(1)
            Dim mes = fecha(2) + fecha(3)
            Dim anio = fecha(4) + fecha(5) + fecha(6) + fecha(7)
            Dim hora = fecha(8) + fecha(9)
            Dim min = fecha(10) + fecha(11)
            Dim fcreaaipinsfoto As New Date(anio, mes, dia, hora, min, 0)

            Dim aipinsfoto As New aipinsfoto
            With aipinsfoto
                .idaipinsfoto = 0
                '.idaipinsenc = idaipinsenc
                .nsecinsfoto = valores_fotos4(1)
                '.xrutainsfoto = xrutadefinitiva
                .xurlinsfoto = ""
                .xtituinsfoto = "" 'verificar
                '.xnomarchinsfoto = xnomarchinsfoto
                '.xextinsfoto = xextinsfoto
                '.xlatcinsfoto = lat
                '.xlonginsfoto = log
                .xdescinsfoto = "Foto que se agrego en fecha " & FormatDateTime(Date.Now, DateFormat.ShortDate)
                .iestatinsfoto = "ACTIVA"
                .fcreaaipinsfoto = fcreaaipinsfoto
                .idseglogreg = 0
            End With
            Return True
        End Function

        Public Function SubirVideosMovilArray(Android As Android) As HttpResponseMessage

            Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
            Dim lugar As String = "inicio"
            log_errores(lugar, xrutaraiz)
            Dim sb As New StringBuilder()
            ''Dim fileName As String = ""
            Try

                If (Android Is Nothing) Then
                    Return New HttpResponseMessage() With { _
                     .Content = New StringContent(sb.ToString()) _
                    }
                End If

                lugar = "1 Archivo " & Android.Name
                log_errores(lugar, xrutaraiz)

                lugar = " 2 byte " & Android.ArchivoByteChar
                log_errores(lugar, xrutaraiz)

                ''lugar = "1 byte " &
                Android.ArchivoByteChar = Android.ArchivoByteChar.Replace("[", "")
                Android.ArchivoByteChar = Android.ArchivoByteChar.Replace("]", "")

                Dim bytess As Byte() = Android.ArchivoByteChar.Split(",").Select(AddressOf Byte.Parse).ToArray()

                Dim rutaVideos As String = HttpContext.Current.Server.MapPath("~/Videos")
                File.WriteAllBytes(rutaVideos & "\" & Android.Name, bytess)

                'log_errores(lugar, xrutaraiz)


                'lugar = "entro al try " & fileName
                'log_errores(lugar, xrutaraiz)


                'lugar = "Nombre archivo " & fileName
                'log_errores(lugar, xrutaraiz)

                Return New HttpResponseMessage() With { _
                     .Content = New StringContent(sb.ToString()) _
                }



                'Dim rutaVideos As String = HttpContext.Current.Server.MapPath("~/Videos")
                ' ''File.WriteAllBytes(rutaVideos & "\" + fileName, archivo)

                'If (File.Exists(rutaVideos & "\" + fileName)) Then
                '    lugar = "Archivo Guardado"
                '    log_errores(lugar, xrutaraiz)
                'Else
                '    lugar = "El archivo no se ha guardado"
                '    log_errores(lugar, xrutaraiz)
                'End If

                'Return New HttpResponseMessage() With { _
                '     .Content = New StringContent(sb.ToString()) _
                '}

            Catch e As Exception
                log_errores(e.Message & " - " & Android.Name & " " & lugar, xrutaraiz)
                Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e)
            End Try
        End Function

        Public Async Function SubirVideosMovil() As Task(Of HttpResponseMessage)

            Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
            Dim lugar As String = "inicio"
            log_errores(lugar, xrutaraiz)

            If Not Request.Content.IsMimeMultipartContent() Then
                lugar = "No es IsMimeMultipartContent"
                log_errores(lugar, xrutaraiz)
                Throw New HttpResponseException(HttpStatusCode.UnsupportedMediaType)
            End If

            xrutaraiz = ConfigurationManager.AppSettings("xruta") '
            lugar = "inicio 2"
            log_errores(lugar, xrutaraiz)

            Dim root As String = HttpContext.Current.Server.MapPath("~/App_Data")
            Dim provider = New CustomMultipartFormDataStreamProvider(root)
            Dim nombreArchivo As String = ""
            Dim nombreUsuario As String = ""
            Dim tipoArchivo As String = ""
            Dim Latitud As String = ""
            Dim Longitud As String = ""
            Dim itipoCierre As String = ""
            Dim imeiDisp As String = ""
            Dim fecha As String = ""
            Dim contador As String = ""
            Dim extension As String = ""
            Dim idaipinsenc As Decimal = 0
            Try
                lugar = "entro al try "
                log_errores(lugar, xrutaraiz)
                ''AgregarAipLogEve(lugar, 0, "VIDEOS")
                Dim sb As New StringBuilder()
                ' Holds the response body
                ' Read the form data and return an async task.

                Await Request.Content.ReadAsMultipartAsync(provider)
                lugar = "despues de guardar la foto local"
                log_errores(lugar, xrutaraiz)
                ''AgregarAipLogEve(lugar, 0, "VIDEOS")
                If provider.FormData.Get("fileName") IsNot Nothing Then
                    nombreArchivo = provider.FormData.Get("fileName")   'nombre foto 
                    'se crea log de evento
                    'AgregarAipLogEve("nombre de la  foto " & nombreArchivo, idsegmanusu, "MOVIL")
                End If

                If provider.FormData.Get("userName") IsNot Nothing Then
                    nombreUsuario = provider.FormData.Get("userName")   'Nombre de usuario                   
                End If
                Dim idsegmanusu As Decimal = 0

                Dim segmanusuController As New segmanusuController
                Dim segmanusu As segmanusu = segmanusuController.selsegmanusuxnombreusuario(nombreUsuario)
                If segmanusu IsNot Nothing Then
                    idsegmanusu = segmanusu.idsegmanusu
                End If


                If provider.FormData.Get("tipo") IsNot Nothing Then
                    tipoArchivo = provider.FormData.Get("tipo")   'Tipo de archivo: VIDEO, AUDIO                 
                End If

                ''************************************************************************
                ''Se extraen los datos del nombre de la imagen

                'Forma del nombre del archivo
                'idenc.tipoCierre.imei.date.contador.extension#latitud#longitud
                Dim delimiter As Char = "#"c
                Dim ValNombreArchivo() As String = nombreArchivo.Split(delimiter)
                Dim primeraParte1 As String = ValNombreArchivo(0)
                Latitud = ValNombreArchivo(1)
                Longitud = ValNombreArchivo(2)
                lugar = "Despues split4 " & Longitud
                log_errores(lugar, xrutaraiz)

                'restante
                'idenc.tipoCierre.imei.date.contador.extension
                delimiter = "."c
                Dim ValNombreArchivo2() As String = primeraParte1.Split(delimiter)
                idaipinsenc = ValNombreArchivo2(0) ''identificador de encabezado
                itipoCierre = ValNombreArchivo2(1) ''tipo de cierre -> "1" = Desea cerrar la inspección, "0"= mantenerla abierta
                imeiDisp = ValNombreArchivo2(2)     ''imei del dispositivo
                fecha = ValNombreArchivo2(3)        ''Fecha de la toma de la foto
                contador = ValNombreArchivo2(4)     ''contador de la imagen
                extension = "." & ValNombreArchivo2(5)  ''extension del archivo


                Dim dia = fecha(0) + fecha(1)
                Dim mes = fecha(2) + fecha(3)
                Dim anio = fecha(4) + fecha(5) + fecha(6) + fecha(7)
                Dim hora = fecha(8) + fecha(9)
                Dim min = fecha(10) + fecha(11)
                Dim fcreaaipinsarch As New Date(anio, mes, dia, hora, min, 0)   'FIN
                lugar = "Despues fecha " & fcreaaipinsarch.ToString("dd/MM/yyyy")
                log_errores(lugar, xrutaraiz)


                ''Fin extraen los datos del nombre de la imagen
                ''************************************************************************

                Dim aipinsenc As New aipinsenc
                Dim vi_aipusudispController As New vi_aipusudispController
                Dim xcodimmandisp As String = vi_aipusudispController.selxcodimmandispxidsegmanusu(idsegmanusu)



                ''Dim xnomlogeve As String = "Subiendo Peritaje Serial Motor : " &  & " desde el celular Imei: " & imeimovil

                Dim vi_aipinsenc As New vi_aipinsenc
                Dim vi_aipinsencController As New vi_aipinsencController
                ''se coloco la nueva adecuacion para que busque directamente por el id de encabezado se no encontrar busca por la placa o por la cotizacion
                vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(idaipinsenc)
                If (vi_aipinsenc Is Nothing) Then
                    lugar = "Encabezado nro: " & idaipinsenc.ToString() & " no existe."
                    AgregarAipLogEve("Ha ocurrido un error con el identificador de la inspección: " & nombreArchivo, 0, "VIDEOS")
                    log_errores("Error con el identificador de encabezado - lugar: " & lugar, xrutaraiz)
                    Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, "Ha ocurrido un error con el identificador de la inspección")
                End If

                ''ruta donde se almacenaran las imagenes
                Dim xrutatipoenc As String = ""
                Dim xrutaurl As String = ""
                Select Case vi_aipinsenc.itipoinsenc
                    Case "SUSCRIPCION"
                        xrutatipoenc = "videosmovil\suscripcion\"
                        xrutaurl = "suscripcion/"
                    Case "SINIESTRO"
                        xrutatipoenc = "videosmovil\siniestro\"
                        xrutaurl = "siniestro/"
                End Select


                Dim bytefoto As Byte() = System.IO.File.ReadAllBytes(Path.Combine(HttpContext.Current.Server.MapPath("~/App_Data"), Path.GetFileName(nombreArchivo)))
                lugar = "despues del leer bytes"
                log_errores(lugar, xrutaraiz)
                ''AgregarAipLogEve(lugar, 0, "VIDEOS")

                Dim aipinsarchController As New aipinsarchController
                Dim nsecuenAnterior As Decimal = aipinsarchController.ObtenerMaxContadorPorEncYTipo(vi_aipinsenc.idaipinsenc, "VIDEO")

                'ADAPTACION PARA OBTENER LA ULTIMA SECUENCIA DEL ARCHIVO POR INSPECCION y tipo
                Dim nsecuenciaarch As Integer = nsecuenAnterior + 1

                Dim xnomarch As String = "insvideo_" & vi_aipinsenc.idaipinsenc & "_" & nsecuenciaarch & extension


                Dim xrutadefinitiva As String = xrutaraiz & xrutatipoenc & "ok\"
                CrearCarpeta(xrutadefinitiva)
                File.WriteAllBytes(xrutadefinitiva & xnomarch, bytefoto)


                'Dim rutaVideos As String = HttpContext.Current.Server.MapPath("~/Videos")
                'File.WriteAllBytes(rutaVideos & "\" + nombreArchivo, bytefoto)

                If (Not File.Exists(xrutadefinitiva & xnomarch)) Then
                    lugar = "Error al escribir el archivo: " & nombreArchivo
                    AgregarAipLogEve("Error al escribir el archivo: " & nombreArchivo, idsegmanusu, "VIDEO")
                    log_errores(lugar, xrutaraiz)
                    Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, "Ha ocurrido un error al guardar el archivo.")
                End If

                Dim descripcion = ""
                If imeiDisp <> xcodimmandisp Then
                    descripcion = "Video que se agrego en fecha " & FormatDateTime(Date.Now, DateFormat.ShortDate) & " por el usuario " & nombreUsuario & " desde otro dispositivo diferente al asignado: " & imeiDisp
                Else
                    descripcion = "Video que se agrego en fecha " & FormatDateTime(Date.Now, DateFormat.ShortDate) & " por el usuario " & nombreUsuario & " desde el dispositivo: " & imeiDisp
                End If

                Dim xurlpublica As String = ConfigurationManager.AppSettings("xurlpublica") & "videos/"
                Dim xurlfinal = xurlpublica & xrutaurl & "ok/" & xnomarch


                Dim aipinsarch As New aipinsarch
                aipinsarch.idaipinsenc = idaipinsenc
                aipinsarch.nsecinsarch = nsecuenciaarch
                aipinsarch.itipoinsarch = tipoArchivo
                aipinsarch.xrutainsarch = xrutadefinitiva
                aipinsarch.xurlinsarch = xurlfinal
                aipinsarch.xtituinsarch = ""
                aipinsarch.xnominsarch = xnomarch
                aipinsarch.xextinsarch = extension
                aipinsarch.xlatcinsarch = Latitud
                aipinsarch.xlonginsarch = Longitud
                aipinsarch.mimetypeinsarch = "video/mp4"
                aipinsarch.ioriginsarch = "MOVIL"
                aipinsarch.xdescinsarch = descripcion
                aipinsarch.iestatinsarch = "ACTIVO"
                aipinsarch.fcreaaipinsarch = fcreaaipinsarch
                aipinsarch.idseglogreg = 0
                Dim respopera As New respopera
                respopera = GuardarAipInsArch(aipinsarch)

                ''si no puede guardar el archivo se dvuelve error
                If (respopera.irespuesta = "0") Then
                    lugar = "Error al guardar el registro: " & nombreArchivo & " - " & respopera.xmsjtecnico
                    AgregarAipLogEve(lugar, idsegmanusu, tipoArchivo)
                    log_errores(lugar, xrutaraiz)
                    Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, respopera.xmsjusuario)
                End If


                If (itipoCierre = "1") Then
                    Dim vi_aipinsenc2 As New vi_aipinsenc
                    'se busca la inspeccion por estatus en proceso, esto es para no volver a procesarlo en el caso que ya este se encuentre en auditoria
                    vi_aipinsenc2 = vi_aipinsencController.selvi_aipinsencxIdyEstatus(vi_aipinsenc.idaipinsenc, "POR PROCESAR")

                    If (vi_aipinsenc2 IsNot Nothing) Then
                        'se virifica si ya se dio un guardar desde la web y se puede cerrar la inspeccion
                        If (vi_aipinsenc2.icerrarinsenc) Then
                            ''procesa la inspeccion enc para asignar un auditor de forma automatica
                            respopera = ModificarInspeccionConDistribucionAutomaticaAuditores(idaipinsenc)
                            AgregarAipLogEve("Cerrar insp " & idaipinsenc, idsegmanusu, "SEGMOVIL")

                            If (respopera.irespuesta = "1") Then
                                AgregarAipLogEve("Se envío la inspección nro. " & idaipinsenc & " al auditor de forma automática ", idsegmanusu, "SEGMOVIL")
                            End If
                        End If
                    End If
                End If

                If (File.Exists(xrutadefinitiva & xnomarch)) Then
                    File.Delete(root & "\" + nombreArchivo)
                End If


                Return New HttpResponseMessage() With { _
                     .Content = New StringContent(sb.ToString()) _
                }

            Catch e As Exception
                AgregarLogErrores("Metodo:SubirVideoMovil " & lugar, e)
                log_errores(e.Message & " - " & nombreArchivo & " " & lugar, xrutaraiz)
                Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e)
            End Try
        End Function

        <HttpGet()>
        Public Function Prueba2()    'METODO DE PRUEBA PARA VERIFICAR EL ENVIO DE FECHA Y HORA

            Dim nombreUsuario As String = ""
            Dim tipoArchivo As String = ""
            Dim Latitud As String = ""
            Dim Longitud As String = ""
            Dim itipoCierre As String = ""
            Dim imeiDisp As String = ""
            Dim fecha As String = ""
            Dim contador As String = ""
            Dim extension As String = ""
            Dim idaipinsenc As Decimal = 0
            'Dim nombreArchivo As String = "5585.555888..Fxvnj...Gvbb#355258057777000#080520142200#0-1.jpg"
            Dim nombreArchivo As String = "21.0.354725050003957.111020161016.2.mp3#10.4964049#-66.8506839"
            Dim delimiter As Char = "#"c
            Dim ValNombreArchivo() As String = nombreArchivo.Split(delimiter)



            Dim primeraParte1 As String = ValNombreArchivo(0)


            Latitud = ValNombreArchivo(1)


            Longitud = ValNombreArchivo(2)


            'restante
            'idenc.tipoCierre.imei.date.contador.extension
            delimiter = "."c
            Dim ValNombreArchivo2() As String = primeraParte1.Split(delimiter)
            idaipinsenc = ValNombreArchivo2(0) ''identificador de encabezado
            itipoCierre = ValNombreArchivo2(1) ''tipo de cierre -> "1" = Desea cerrar la inspección, "0"= mantenerla abierta
            imeiDisp = ValNombreArchivo2(2)     ''imei del dispositivo
            fecha = ValNombreArchivo2(3)        ''Fecha de la toma de la foto
            contador = ValNombreArchivo2(4)     ''contador de la imagen
            extension = "." & ValNombreArchivo2(5)         ''extension del archivo


            Dim dia = fecha(0) + fecha(1)
            Dim mes = fecha(2) + fecha(3)
            Dim anio = fecha(4) + fecha(5) + fecha(6) + fecha(7)
            Dim hora = fecha(8) + fecha(9)
            Dim min = fecha(10) + fecha(11)
            Dim fcreaaipinsarch As New Date(anio, mes, dia, hora, min, 0)   'FIN

            Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
            Dim vi_aipinsenc As New vi_aipinsenc
            Dim vi_aipinsencController As New vi_aipinsencController
            ''se coloco la nueva adecuacion para que busque directamente por el id de encabezado se no encontrar busca por la placa o por la cotizacion
            vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(idaipinsenc)
            If (vi_aipinsenc Is Nothing) Then
                Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, "Ha ocurrido un error con el identificador de la inspección")
            End If

            Dim xrutatipoenc As String = ""
            Select Case vi_aipinsenc.itipoinsenc
                Case "SUSCRIPCION"
                    xrutatipoenc = "audiosmovil\suscripcion\"
                Case "SINIESTRO"
                    xrutatipoenc = "audiosmovil\siniestro\"
            End Select

            Dim xrutadefinitiva As String = xrutaraiz & xrutatipoenc & "ok\"
            Dim aipinsarchController As New aipinsarchController
            Dim nsecuenAnterior As Decimal = aipinsarchController.ObtenerMaxContadorPorEncYTipo(idaipinsenc, "AUDIO")

            'ADAPTACION PARA OBTENER LA ULTIMA SECUENCIA DEL ARCHIVO POR INSPECCION y tipo
            Dim nsecuenciaFoto As Integer = nsecuenAnterior + 1

            Dim xnomarch As String = "insvideo_" & idaipinsenc & "_" & nsecuenciaFoto & extension

            Dim aipinsarch As New aipinsarch
            aipinsarch.idaipinsenc = idaipinsenc
            aipinsarch.nsecinsarch = nsecuenciaFoto
            aipinsarch.itipoinsarch = "AUDIO"
            aipinsarch.xrutainsarch = xrutadefinitiva
            aipinsarch.xurlinsarch = ""
            aipinsarch.xtituinsarch = ""
            aipinsarch.xnominsarch = xnomarch
            aipinsarch.xextinsarch = extension
            aipinsarch.xlatcinsarch = Latitud
            aipinsarch.xlonginsarch = Longitud
            aipinsarch.mimetypeinsarch = "audio/mpeg3"
            aipinsarch.ioriginsarch = "MOVIL"
            aipinsarch.xdescinsarch = "Foto que se agrego en fecha " & Date.Now.ToString("dd/MM/yyyy") & " por el usuario " & "usuario" & " desde otro dispositivo diferente al asignado: " & imeiDisp
            aipinsarch.iestatinsarch = "ACTIVO"
            aipinsarch.fcreaaipinsarch = fcreaaipinsarch
            aipinsarch.idseglogreg = 0
            Dim resp As New respopera
            resp = GuardarAipInsArch(aipinsarch)

            Return resp
        End Function


        Public Async Function SubirNotaVozMovil() As Task(Of HttpResponseMessage)
            If Not Request.Content.IsMimeMultipartContent() Then
                Throw New HttpResponseException(HttpStatusCode.UnsupportedMediaType)
            End If

            Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
            Dim lugar As String = "inicio"
            log_errores(lugar, xrutaraiz)



            Dim root As String = HttpContext.Current.Server.MapPath("~/App_Data")
            Dim provider = New CustomMultipartFormDataStreamProvider(root)
            Dim nombreArchivo As String = ""
            Dim nombreUsuario As String = ""
            Dim tipoArchivo As String = ""
            Dim Latitud As String = ""
            Dim Longitud As String = ""
            Dim itipoCierre As String = ""
            Dim imeiDisp As String = ""
            Dim fecha As String = ""
            Dim contador As String = ""
            Dim extension As String = ""
            Dim idaipinsenc As Decimal = 0
            Try
                lugar = "entro al try "
                log_errores(lugar, xrutaraiz)
                ''AgregarAipLogEve(lugar, 0, "VIDEOS")
                Dim sb As New StringBuilder()
                ' Holds the response body
                ' Read the form data and return an async task.

                Await Request.Content.ReadAsMultipartAsync(provider)
                lugar = "despues de guardar el archivo local"
                log_errores(lugar, xrutaraiz)
                ''AgregarAipLogEve(lugar, 0, "VIDEOS")
                If provider.FormData.Get("fileName") IsNot Nothing Then
                    nombreArchivo = provider.FormData.Get("fileName")   'nombre foto 
                    'se crea log de evento
                    'AgregarAipLogEve("nombre de la  foto " & nombreArchivo, idsegmanusu, "MOVIL")
                End If
                lugar = "Se obtiene el nombre del archivo"
                log_errores(lugar, xrutaraiz)


                If provider.FormData.Get("userName") IsNot Nothing Then
                    nombreUsuario = provider.FormData.Get("userName")   'Nombre de usuario                   
                End If

                lugar = "Se obtiene el nombre del usuario"
                log_errores(lugar, xrutaraiz)

                Dim idsegmanusu As Decimal = 0

                Dim segmanusuController As New segmanusuController
                Dim segmanusu As segmanusu = segmanusuController.selsegmanusuxnombreusuario(nombreUsuario)
                If segmanusu IsNot Nothing Then
                    idsegmanusu = segmanusu.idsegmanusu
                End If

                lugar = "Se obtiene el usuario por nombre " & nombreUsuario
                log_errores(lugar, xrutaraiz)

                AgregarAipLogEve("Nombre archivo " & nombreArchivo, idsegmanusu, "AUDIO")

                If provider.FormData.Get("tipo") IsNot Nothing Then
                    tipoArchivo = provider.FormData.Get("tipo")   'Tipo de archivo: VIDEO, AUDIO                 
                End If

                ''************************************************************************
                ''Se extraen los datos del nombre de la imagen

                

                'Forma del nombre del archivo
                'idenc.tipoCierre.imei.date.contador.extension#latitud#longitud
                Dim delimiter As Char = "#"c
                Dim ValNombreArchivo() As String = nombreArchivo.Split(delimiter)
                'Dim primeraParte1 As String = ValNombreArchivo(0)
                'Latitud = ValNombreArchivo(1)
                'Longitud = ValNombreArchivo(2)
                'lugar = "Despues split4 " & Longitud
                'log_errores(lugar, xrutaraiz)

                Dim primeraParte1 As String = ValNombreArchivo(0)
                Latitud = ValNombreArchivo(1)
                delimiter = "."c
                Dim ValNombreArchivo3() As String = ValNombreArchivo(2).Split(delimiter)

                If (ValNombreArchivo3.Length = 3) Then
                    Longitud = ValNombreArchivo3(0) & "." & ValNombreArchivo3(1)
                Else
                    Longitud = ValNombreArchivo3(0)
                End If

                extension = ".mp3" ''ValNombreArchivo3(1)  ''extension del archivo
                lugar = "Despues split4 " & Longitud
                log_errores(lugar, xrutaraiz)

                'restante
                'idenc.tipoCierre.imei.date.contador.extension
                delimiter = "."c
                Dim ValNombreArchivo2() As String = primeraParte1.Split(delimiter)
                idaipinsenc = ValNombreArchivo2(0) ''identificador de encabezado
                itipoCierre = ValNombreArchivo2(1) ''tipo de cierre -> "1" = Desea cerrar la inspección, "0"= mantenerla abierta
                imeiDisp = ValNombreArchivo2(2)     ''imei del dispositivo
                fecha = ValNombreArchivo2(3)        ''Fecha de la toma de la foto
                contador = ValNombreArchivo2(4)     ''contador de la imagen
                'extension = "." & ValNombreArchivo2(5)  ''extension del archivo


                Dim dia = fecha(0) + fecha(1)
                Dim mes = fecha(2) + fecha(3)
                Dim anio = fecha(4) + fecha(5) + fecha(6) + fecha(7)
                Dim hora = fecha(8) + fecha(9)
                Dim min = fecha(10) + fecha(11)
                Dim fcreaaipinsarch As New Date(anio, mes, dia, hora, min, 0)   'FIN
                lugar = "Despues fecha " & fcreaaipinsarch.ToString("dd/MM/yyyy")
                log_errores(lugar, xrutaraiz)

                ''Fin extraen los datos del nombre de la imagen
                ''************************************************************************

                Dim aipinsenc As New aipinsenc
                Dim vi_aipusudispController As New vi_aipusudispController
                Dim xcodimmandisp As String = vi_aipusudispController.selxcodimmandispxidsegmanusu(idsegmanusu)



                ''Dim xnomlogeve As String = "Subiendo Peritaje Serial Motor : " &  & " desde el celular Imei: " & imeimovil

                Dim vi_aipinsenc As New vi_aipinsenc
                Dim vi_aipinsencController As New vi_aipinsencController
                ''se coloco la nueva adecuacion para que busque directamente por el id de encabezado se no encontrar busca por la placa o por la cotizacion
                vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(idaipinsenc)
                If (vi_aipinsenc Is Nothing) Then
                    lugar = "Encabezado nro: " & idaipinsenc.ToString() & " no existe."
                    AgregarAipLogEve("Ha ocurrido un error con el identificador de la inspección: " & nombreArchivo, 0, "AUDIO")
                    log_errores("Error con el identificador de encabezado - lugar: " & lugar, xrutaraiz)
                    Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, "Ha ocurrido un error con el identificador de la inspección")
                End If

                ''ruta donde se almacenaran las imagenes
                Dim xrutatipoenc As String = ""
                Dim xrutaurl As String = ""
                Select Case vi_aipinsenc.itipoinsenc
                    Case "SUSCRIPCION"
                        xrutatipoenc = "audiosmovil\suscripcion\"
                        xrutaurl = "suscripcion/"
                    Case "SINIESTRO"
                        xrutatipoenc = "audiosmovil\siniestro\"
                        xrutaurl = "siniestro/"
                End Select


                Dim bytefoto As Byte() = System.IO.File.ReadAllBytes(Path.Combine(HttpContext.Current.Server.MapPath("~/App_Data"), Path.GetFileName(nombreArchivo)))
                lugar = "despues del leer bytes"
                log_errores(lugar, xrutaraiz)
                ''AgregarAipLogEve(lugar, 0, "VIDEOS")

                Dim aipinsarchController As New aipinsarchController
                Dim nsecuenAnterior As Decimal = aipinsarchController.ObtenerMaxContadorPorEncYTipo(vi_aipinsenc.idaipinsenc, tipoArchivo)

                'ADAPTACION PARA OBTENER LA ULTIMA SECUENCIA DEL ARCHIVO POR INSPECCION y tipo
                Dim nsecuenciaarch As Integer = nsecuenAnterior + 1

                Dim xnomarch As String = "ins" & tipoArchivo.ToLower() & "_" & vi_aipinsenc.idaipinsenc & "_" & nsecuenciaarch & extension

                Dim xrutadefinitiva As String = xrutaraiz & xrutatipoenc & "ok\"
                CrearCarpeta(xrutadefinitiva)
                File.WriteAllBytes(xrutadefinitiva & xnomarch, bytefoto)

                'Dim rutaVideos As String = HttpContext.Current.Server.MapPath("~/Videos")
                'File.WriteAllBytes(rutaVideos & "\" + nombreArchivo, bytefoto)



                If (Not File.Exists(xrutadefinitiva & xnomarch)) Then
                    lugar = "Error al escribir el archivo: " & nombreArchivo
                    AgregarAipLogEve("Error al escribir el archivo: " & nombreArchivo, idsegmanusu, "AUDIO")
                    log_errores(lugar, xrutaraiz)
                    Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, "Ha ocurrido un error al guardar el archivo.")
                End If

                Dim descripcion = ""
                If imeiDisp <> xcodimmandisp Then
                    descripcion = "Nota de voz que se agrego en fecha " & FormatDateTime(Date.Now, DateFormat.ShortDate) & " por el usuario " & nombreUsuario & " desde otro dispositivo diferente al asignado: " & imeiDisp
                Else
                    descripcion = "Nota de voz que se agrego en fecha " & FormatDateTime(Date.Now, DateFormat.ShortDate) & " por el usuario " & nombreUsuario & " desde el dispositivo: " & imeiDisp
                End If

                Dim xurlpublica As String = ConfigurationManager.AppSettings("xurlpublica") & "audios/"
                Dim xurlfinal = xurlpublica & xrutaurl & "ok/" & xnomarch

                Dim aipinsarch As New aipinsarch
                aipinsarch.idaipinsenc = idaipinsenc
                aipinsarch.nsecinsarch = nsecuenciaarch
                aipinsarch.itipoinsarch = tipoArchivo
                aipinsarch.xrutainsarch = xrutadefinitiva
                aipinsarch.xurlinsarch = xurlfinal
                aipinsarch.xtituinsarch = ""
                aipinsarch.xnominsarch = xnomarch
                aipinsarch.xextinsarch = extension
                aipinsarch.xlatcinsarch = Latitud
                aipinsarch.xlonginsarch = Longitud
                aipinsarch.mimetypeinsarch = "audio/mpeg3"
                aipinsarch.ioriginsarch = "MOVIL"
                aipinsarch.xdescinsarch = descripcion
                aipinsarch.iestatinsarch = "ACTIVO"
                aipinsarch.fcreaaipinsarch = fcreaaipinsarch
                aipinsarch.idseglogreg = 0
                Dim respopera As New respopera
                respopera = GuardarAipInsArch(aipinsarch)

                ''si no puede guardar el archivo se dvuelve error
                If (respopera.irespuesta = "0") Then
                    lugar = "Error al guardar el registro: " & nombreArchivo & " - " & respopera.xmsjtecnico
                    AgregarAipLogEve(lugar, idsegmanusu, tipoArchivo)
                    log_errores(lugar, xrutaraiz)
                    Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, respopera.xmsjusuario)
                End If


                If (itipoCierre = "1") Then
                    Dim vi_aipinsenc2 As New vi_aipinsenc
                    'se busca la inspeccion por estatus en proceso, esto es para no volver a procesarlo en el caso que ya este se encuentre en auditoria
                    vi_aipinsenc2 = vi_aipinsencController.selvi_aipinsencxIdyEstatus(vi_aipinsenc.idaipinsenc, "POR PROCESAR")

                    If (vi_aipinsenc2 IsNot Nothing) Then
                        'se virifica si ya se dio un guardar desde la web y se puede cerrar la inspeccion
                        If (vi_aipinsenc2.icerrarinsenc) Then
                            ''procesa la inspeccion enc para asignar un auditor de forma automatica
                            respopera = ModificarInspeccionConDistribucionAutomaticaAuditores(idaipinsenc)
                            AgregarAipLogEve("Cerrar insp " & idaipinsenc, idsegmanusu, "SEGMOVIL")

                            If (respopera.irespuesta = "1") Then
                                AgregarAipLogEve("Se envío la inspección nro. " & idaipinsenc & " al auditor de forma automática ", idsegmanusu, "SEGMOVIL")
                            End If
                        End If
                    End If
                End If
                



                If (File.Exists(xrutadefinitiva & xnomarch)) Then
                    File.Delete(root & "\" + nombreArchivo)
                End If

                Return New HttpResponseMessage() With { _
                     .Content = New StringContent(sb.ToString()) _
                }

            Catch e As Exception
                AgregarLogErrores("Metodo:SubirNotaVozMovil " & lugar, e)
                log_errores(e.Message & " - " & nombreArchivo & " " & lugar, xrutaraiz)
                Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e)
            End Try
        End Function

        Public Async Function SubirAudioMovil2() As Task(Of HttpResponseMessage)
            If Not Request.Content.IsMimeMultipartContent() Then
                Throw New HttpResponseException(HttpStatusCode.UnsupportedMediaType)
            End If

            Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
            Dim lugar As String = "inicio"
            log_errores(lugar, xrutaraiz)



            Dim root As String = HttpContext.Current.Server.MapPath("~/App_Data")
            Dim provider = New CustomMultipartFormDataStreamProvider(root)
            Dim nombreArchivo As String = ""
            Try
                lugar = "entro al try "
                log_errores(lugar, xrutaraiz)
                ''AgregarAipLogEve(lugar, 0, "VIDEOS")
                Dim sb As New StringBuilder()
                ' Holds the response body
                ' Read the form data and return an async task.

                Await Request.Content.ReadAsMultipartAsync(provider)
                lugar = "despues de guardar la foto local"
                log_errores(lugar, xrutaraiz)
                ''AgregarAipLogEve(lugar, 0, "VIDEOS")
                If provider.FormData.Get("fileName") IsNot Nothing Then
                    nombreArchivo = provider.FormData.Get("fileName")   'nombre foto 
                    'se crea log de evento
                    'AgregarAipLogEve("nombre de la  foto " & nombreArchivo, idsegmanusu, "MOVIL")
                End If
                lugar = "despuesdel filename"
                log_errores(lugar, xrutaraiz)
                ''AgregarAipLogEve(lugar, 0, "VIDEOS")

                Dim bytefoto As Byte() = System.IO.File.ReadAllBytes(Path.Combine(HttpContext.Current.Server.MapPath("~/App_Data"), Path.GetFileName(nombreArchivo)))
                lugar = "despues del leer bytes"
                log_errores(lugar, xrutaraiz)
                ''AgregarAipLogEve(lugar, 0, "VIDEOS")

                Dim rutaVideos As String = HttpContext.Current.Server.MapPath("~/Videos/audio")
                File.WriteAllBytes(rutaVideos & "\" + nombreArchivo, bytefoto)

                If (File.Exists(rutaVideos & "\" + nombreArchivo)) Then
                    File.Delete(root & "\" + nombreArchivo)
                End If

                lugar = "despues del escribir bytes"
                log_errores(lugar, xrutaraiz)
                ''AgregarAipLogEve(lugar, 0, "VIDEOS")

                Return New HttpResponseMessage() With { _
                     .Content = New StringContent(sb.ToString()) _
                }

            Catch e As Exception
                ''AgregarLogErrores("Metodo:SubirFotosMovil " & lugar, e)
                log_errores(e.Message & " - " & nombreArchivo & " " & lugar, xrutaraiz)
                Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e)
            End Try
        End Function

        'Public Async Function SubirFotosMovil() As Task(Of HttpResponseMessage)
        '    If Not Request.Content.IsMimeMultipartContent() Then
        '        Throw New HttpResponseException(HttpStatusCode.UnsupportedMediaType)
        '    End If

        '    Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
        '    Dim lugar As String = "inicio"
        '    'descomponer el nombre de la imagen
        '    'los obligatorios son 

        '    Dim root As String = HttpContext.Current.Server.MapPath("~/App_Data")
        '    Dim provider = New CustomMultipartFormDataStreamProvider(root)
        '    Dim nombreArchivo As String = ""

        '    Try


        '        lugar = "entro al try "
        '        Dim sb As New StringBuilder()
        '        ' Holds the response body
        '        ' Read the form data and return an async task.

        '        Await Request.Content.ReadAsMultipartAsync(provider)
        '        lugar = "despues de guardar la foto local"
        '        'Dim nombreArchivo As String = "5585.555888..Fxvnj...Gvbb#355258057777000#080520142200#0-1.jpg"
        '        'Dim nombreArchivo As String = "133134.1616464..Qdqxa.Sxscsh..#353922058239177#110720141457#0-1.jpg#10.4845302&-66.8046696"
        '        Dim usuario As String = ""
        '        If provider.FormData.Get("userName") IsNot Nothing Then
        '            usuario = provider.FormData.Get("userName") 'correo               
        '        End If
        '        Dim idsegmanusu As Decimal = 0

        '        Dim segmanusuController As New segmanusuController
        '        Dim segmanusu As segmanusu = segmanusuController.selsegmanusuxnombreusuario(usuario)
        '        If segmanusu IsNot Nothing Then
        '            idsegmanusu = segmanusu.idsegmanusu
        '        End If

        '        'se crea log de evento
        '        'AgregarAipLogEve("Llegue al subir foto", idsegmanusu, "MOVIL")

        '        lugar = "despues del nombre de susuario"
        '        Dim lat As String = ""
        '        'If provider.FormData.Get("LAT") IsNot Nothing Then
        '        '    lat = funciones.convertToDegree2(provider.FormData.Get("LAT"))
        '        'End If
        '        Dim log As String = ""
        '        'If provider.FormData.Get("LONG") IsNot Nothing Then
        '        '    lot = funciones.convertToDegree2(provider.FormData.Get("LONG"))
        '        'End If
        '        If provider.FormData.Get("fileName") IsNot Nothing Then
        '            nombreArchivo = provider.FormData.Get("fileName")   'nombre foto 
        '            'se crea log de evento
        '            'AgregarAipLogEve("nombre de la  foto " & nombreArchivo, idsegmanusu, "MOVIL")
        '        End If
        '        lugar = "despuesdel filename"
        '        'For Each file As MultipartFileData In provider.FileData
        '        '    nombreArchivo = (file.Headers.ContentDisposition.FileName) 'nombre del archivo                    
        '        'Next
        '        'CP.CS.PL.SM.SC.PO.SI#IMEI#DATE#TIPOInspeccion-contador.jpg#lat&log

        '        'CP:cedula asegurado -->(0)
        '        'CS:cedula sidorista -->(1)
        '        'PL:placa() -->(2)
        '        'SM:serial motos  -->(3)
        '        'SC:serial carroceria -->(4)
        '        'PO:poliza() -->(5)
        '        'SI:siniestro() -->(6)
        '        'en el primer arreglo esta es la posicion(7)
        '        'IMEI:identificador telefono -->(0)
        '        'DATE: dd/MM/aahhmm -->(1)
        '        'TipoInspeccion: -->(2)
        '        ' 0- suscripción
        '        ' 1- siniestro
        '        ' 2- limpieza daños
        '        ' 3- inventario de restos y salvamentos
        '        ' 4- anexo de daños
        '        'contador-->(3) numero de la foto

        '        Dim valores_fotos1 As String() = Split(nombreArchivo, "#")
        '        Dim valores_fotos2 As String() = Split(valores_fotos1(0), ".")
        '        Dim valores_fotos3 As String() = Split(valores_fotos1(3), ".") 'tipo de foto y contador juntos
        '        Dim valores_fotos4 As String() = Split(valores_fotos3(0), "-") 'tipo de foto y contador separados              
        '        Dim valores_fotos5 As String() = Split(valores_fotos1(4), "&") 'aqui guarda la longitud 
        '        lat = valores_fotos5(0)
        '        log = valores_fotos5(1)
        '        lugar = "despues de la lista de valores saparados"

        '        Dim fecha As String                                             'INICIO:
        '        fecha = valores_fotos1(2)                                       'Se separa la fecha y la hora en variables para armar una variable Date
        '        Dim dia = fecha(0) + fecha(1)
        '        Dim mes = fecha(2) + fecha(3)
        '        Dim anio = fecha(4) + fecha(5) + fecha(6) + fecha(7)
        '        Dim hora = fecha(8) + fecha(9)
        '        Dim min = fecha(10) + fecha(11)
        '        Dim fcreaaipinsfoto As New Date(anio, mes, dia, hora, min, 0)   'FIN

        '        Dim aipinsenc As New aipinsenc
        '        Dim vi_aipusudispController As New vi_aipusudispController
        '        Dim xcodimmandisp As String = vi_aipusudispController.selxcodimmandispxidsegmanusu(idsegmanusu)
        '        Dim imeimovil As String = valores_fotos1(1)

        '        Dim itipoinsenc As String = ""
        '        Dim xrutatipoenc As String = ""
        '        Dim xnomlogeve As String = "Subiendo Peritaje Serial Motor : " & valores_fotos2(3) & " desde el celular Imei: " & imeimovil
        '        'SUSCRIPCION, RESTOS Y SALVAMENTO, LIMPIEZA DE DAÑOS POR SUSCRIPCION, LIMPIEZA DE DAÑOS POR SINIESTRO, AJUSTES POR SINIESTRO, AJUSTES POR ANEXO)



        '        'AgregarAipLogEve("Tipo de inspeccion " & valores_fotos4(0), idsegmanusu, "MOVIL")

        '        Select Case valores_fotos4(0)
        '            Case 0
        '                itipoinsenc = "SUSCRIPCION"
        '                xrutatipoenc = "fotosmovil\suscripcion\"
        '            Case 1
        '                itipoinsenc = "SINIESTRO"
        '                xrutatipoenc = "fotosmovil\siniestro\"
        '                'Case 1
        '                '    itipoinsenc = "RESTOS Y SALVAMENTO"
        '                '    xrutatipoenc = "fotosmovil\restos_salvamento\"
        '                'Case 2
        '                '    itipoinsenc = "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
        '                '    xrutatipoenc = "fotosmovil\limpieza_siniestro\"
        '                'Case 3
        '                '    itipoinsenc = "LIMPIEZA DE DAÑOS POR SINIESTRO"
        '                '    xrutatipoenc = "fotosmovil\limpieza_suscripcion\"
        '                'Case 4
        '                '    itipoinsenc = "AJUSTES POR SINIESTRO"
        '                '    xrutatipoenc = "fotosmovil\ajustes_sinientro\"
        '                'Case 5
        '                '    itipoinsenc = "AJUSTES POR ANEXO"
        '                '    xrutatipoenc = "fotosmovil\ajustes_anexo\"
        '        End Select


        '        Dim fejec As Date = Date.Now.ToShortDateString
        '        'se realiza la busqueda del encabezado


        '        Dim respopera As New respopera
        '        Dim vi_aipinsencController As New vi_aipinsencController
        '        Dim vi_aipinsenc As New vi_aipinsenc
        '        Dim idaipinsenc As Decimal = 0 ''se obtienen el numero de encabezado enviado por la ruta de la imagen


        '        If (valores_fotos2(8) <> "" And valores_fotos2(8) > 0) Then
        '            idaipinsenc = valores_fotos2(8)
        '        Else
        '            log_errores("Error con el identificador de encabezado. Msj Tec: " & respopera.xmsjtecnico & " - lugar: " & lugar, xrutaraiz)
        '            Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, "Error con el identificador de encabezado.")
        '        End If

        '        'valores_fotos2(2)

        '        ''este se comento dado que por suscripcion no tiene serial carroceria 25-02-2016
        '        'vi_aipinsenc = vi_aipinsencController.ObtenerPorSerialCarYEstatus(valores_fotos2(4), "POR PROCESAR")

        '        AgregarAipLogEve("Se envío el encabezado id: " & idaipinsenc, idsegmanusu, "SEGMOVIL")

        '        ''se coloco la nueva adecuacion para que busque directamente por el id de encabezado se no encontrar busca por la placa o por la cotizacion
        '        vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(idaipinsenc)

        '        If (vi_aipinsenc Is Nothing) Then
        '            'este se agrego para que busque por placa dado que es el unico valor que esta desde suscripcion
        '            vi_aipinsenc = vi_aipinsencController.ObtenerPorPlacaYEstatus(valores_fotos2(2), "POR PROCESAR")

        '            'si no se encuentra por numero de placa busco por numero de siniestro cotizacion
        '            If vi_aipinsenc Is Nothing Then
        '                vi_aipinsenc = vi_aipinsencController.ObtenerPorSiniestroCotizYEstatus(valores_fotos2(6), "POR PROCESAR")
        '            End If
        '        Else
        '            AgregarAipLogEve("Encontro la inspeccion por Enc. id: " & idaipinsenc, idsegmanusu, "SEGMOVIL")
        '        End If


        '        If (vi_aipinsenc IsNot Nothing) Then
        '            'se crea log de evento
        '            'AgregarAipLogEve("Se encontro el encabezado " & vi_aipinsenc.idaipinsenc, idsegmanusu, "MOVIL")
        '        Else
        '            'si ocurre un error al intentar crear la actividad
        '            log_errores("Error con el identificador de encabezado. Msj Tec: " & respopera.xmsjtecnico & " - lugar: " & lugar, xrutaraiz)
        '            Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, "Error con el identificador de encabezado.")

        '        End If



        '        Dim bytefoto As Byte() = System.IO.File.ReadAllBytes(Path.Combine(HttpContext.Current.Server.MapPath("~/App_Data"), Path.GetFileName(nombreArchivo)))
        '        'se crea log de evento
        '        'AgregarAipLogEve("nombre de la  foto " & Path.GetFileName(nombreArchivo), idsegmanusu, "MOVIL")

        '        Dim aipinsfotoController As New aipinsfotoController

        '        If valores_fotos2(4) <> "" Or valores_fotos2(2) <> "" Or valores_fotos2(6) <> "" Then
        '            'respopera = CrearAipInsEncMovil(aipinsenc)
        '            'Dim xextinsfoto = System.IO.Path.GetExtension(Path.Combine(HttpContext.Current.Server.MapPath("~/App_Data"), Path.GetFileName(nombreArchivo)))
        '            Dim xextinsfoto = ".jpg"

        '            If vi_aipinsenc.idaipinsenc > 0 Then


        '                Dim nsecuenAnterior As Decimal = aipinsfotoController.maxcontfotoXidaipinsenc(vi_aipinsenc.idaipinsenc)
        '                'Dim xnomarchinsfoto As String = "insfoto_" & idaipinsenc & "_" & valores_fotos4(1) & xextinsfoto
        '                'ADAPTACION PARA OBTENER LA ULTIMA SECUENCIA DE LA IMAGEN POR INSPECCION PARA LA NUEVA ADAPTACION DE SISEP
        '                Dim nsecuenciaFoto As Integer = nsecuenAnterior + 1

        '                Dim xnomarchinsfoto As String = "insfoto_" & vi_aipinsenc.idaipinsenc & "_" & nsecuenciaFoto & xextinsfoto


        '                'se crea log de evento
        '                'AgregarAipLogEve("nombre arc " & bytefoto.ToString, idsegmanusu, "MOVIL")

        '                Dim xrutadefinitiva As String = xrutaraiz & xrutatipoenc & "ok\"
        '                CrearCarpeta(xrutadefinitiva)
        '                File.WriteAllBytes(xrutadefinitiva & xnomarchinsfoto, bytefoto)
        '                'AgregarAipLogEve("Ruta de la imagen " & xrutadefinitiva & xnomarchinsfoto, idsegmanusu, "MOVIL")

        '                'se arma la ruta de la carpeta zoom para cada redimension de la imagen
        '                'este cambio se adapto desde la fecha 08-08-2014
        '                'Ultimo registro idaipinsenc sin el cambio 49

        '                'Redimension de la imagen a la carpeta ZOOM
        '                Dim xruta_zoom As String = xrutadefinitiva & "zoom\"
        '                Dim redimensiono As Boolean = False
        '                redimensiono = redimensionar_imagen(xruta_zoom, 2000, 1600, xnomarchinsfoto, bytefoto)

        '                'si no redimensiono la imagen se intenta en 3 oportunidades 
        '                If Not redimensiono Then
        '                    Dim i As Decimal = 0
        '                    While redimensiono = False
        '                        redimensiono = redimensionar_imagen(xruta_zoom, 2000, 1600, xnomarchinsfoto, bytefoto)
        '                        If i = 3 Then
        '                            redimensiono = True
        '                        End If
        '                        i += 1
        '                    End While
        '                End If
        '                '*************************************************************
        '                'Redimension de la imagen a la carpeta thumbnail(miniatura)
        '                Dim xruta_thumbnail As String = xrutadefinitiva & "thumbnail\"
        '                Dim redimensiono_thumbnail As Boolean = False
        '                redimensiono_thumbnail = redimensionar_imagen(xruta_thumbnail, 170, 136, xnomarchinsfoto, bytefoto)

        '                'si no redimensiono la imagen se intenta en 3 oportunidades 
        '                If Not redimensiono_thumbnail Then
        '                    Dim i As Decimal = 0
        '                    While redimensiono_thumbnail = False
        '                        redimensiono_thumbnail = redimensionar_imagen(xruta_thumbnail, 170, 136, xnomarchinsfoto, bytefoto)
        '                        If i = 3 Then
        '                            redimensiono_thumbnail = True
        '                        End If
        '                        i += 1
        '                    End While
        '                End If

        '                ''***************************************************************


        '                'si guarda de forma correcta el enc y la foto en la ruta definitiva guardar los datos en la tabla de la foto                    
        '                Dim descripcion = ""
        '                If imeimovil <> xcodimmandisp Then
        '                    descripcion = "Foto que se agrego en fecha " & FormatDateTime(Date.Now, DateFormat.ShortDate) & " por el usuario " & usuario & " desde otro dispositivo diferente al asignado: " & imeimovil
        '                Else
        '                    descripcion = "Foto que se agrego en fecha " & FormatDateTime(Date.Now, DateFormat.ShortDate) & " por el usuario " & usuario & " desde el dispositivo: " & imeimovil
        '                End If
        '                Dim aipinsfoto As New aipinsfoto
        '                With aipinsfoto
        '                    .idaipinsfoto = 0
        '                    .idaipinsenc = vi_aipinsenc.idaipinsenc
        '                    .nsecinsfoto = nsecuenciaFoto
        '                    .xrutainsfoto = xrutadefinitiva
        '                    .xurlinsfoto = ""
        '                    .xtituinsfoto = "" 'verificar
        '                    .xnomarchinsfoto = xnomarchinsfoto
        '                    .xextinsfoto = xextinsfoto
        '                    .xlatcinsfoto = lat
        '                    .xlonginsfoto = log
        '                    .ioriginsfoto = "CARGADA POR EL MOVIL"
        '                    .xdescinsfoto = descripcion
        '                    '.xdescinsfoto = fecha
        '                    .iestatinsfoto = "ACTIVA"
        '                    .fcreaaipinsfoto = fcreaaipinsfoto
        '                    '.fcreaaipinsfoto = Date.Now
        '                    .idseglogreg = 0
        '                End With
        '                respopera = aipinsfotoController.insaipinsfoto(aipinsfoto)


        '                'AgregarAipLogEve("Cierre numero " & valores_fotos2(7), idsegmanusu, "MOVIL")

        '                'si se guarda la foto de manera exitosa y se indico en la app movil que desea cerrar el caso se pasa la inspeccion al auditor
        '                If (respopera.irespuesta = "1" And valores_fotos2(7) = "1") Then

        '                    Dim vi_aipinsenc2 As New vi_aipinsenc
        '                    'se busca la inspeccion por estatus en proceso, esto es para no volver a procesarlo en el caso que ya este se encuentre en auditoria
        '                    vi_aipinsenc2 = vi_aipinsencController.selvi_aipinsencxIdyEstatus(vi_aipinsenc.idaipinsenc, "POR PROCESAR")

        '                    If (vi_aipinsenc2 IsNot Nothing) Then
        '                        'se virifica si ya se dio un guardar desde la web y se puede cerrar la inspeccion
        '                        If (vi_aipinsenc2.icerrarinsenc) Then
        '                            ''procesa la inspeccion enc para asignar un auditor de forma automatica
        '                            respopera = ModificarInspeccionConDistribucionAutomaticaAuditores(idaipinsenc)
        '                            AgregarAipLogEve("Cerrar insp " & valores_fotos2(7), idsegmanusu, "SEGMOVIL")



        '                            If (respopera.irespuesta = "1") Then
        '                                AgregarAipLogEve("Se envío la inspección nro. " & idaipinsenc & " al auditor de forma automática ", idsegmanusu, "SEGMOVIL")
        '                            End If


        '                        End If
        '                    End If
        '                End If


        '                'log_errores(respopera.xmsjtecnico, xrutaraiz)
        '            Else
        '                CrearCarpeta(xrutaraiz & xrutatipoenc & "fallida\")
        '                File.WriteAllBytes(xrutaraiz & xrutatipoenc & "fallida\" & nombreArchivo, bytefoto)
        '            End If
        '        Else
        '            CrearCarpeta(xrutaraiz & xrutatipoenc & "fallida\")
        '            File.WriteAllBytes(xrutaraiz & xrutatipoenc & "fallida\" & nombreArchivo, bytefoto) 'si el serial del carro esta vacio manda a fallida esto no deberia currir
        '        End If

        '        'agregar el log de evento
        '        respopera = AgregarAipLogEve(xnomlogeve, idsegmanusu, "MOVIL")
        '        If imeimovil <> xcodimmandisp Then
        '            respopera = AgregarAipLogEve("Peritaje Serial Motor : " & valores_fotos2(3) & " Imei desde donde se subio la foto " & imeimovil & " " & "es diferente del Imei registrado para el perito " & xcodimmandisp, idsegmanusu, "MOVIL")
        '        End If
        '        'fin agregar el log de evento

        '        Return New HttpResponseMessage() With { _
        '             .Content = New StringContent(sb.ToString()) _
        '        }

        '    Catch e As Exception
        '        AgregarLogErrores("Metodo:SubirFotosMovil " & lugar, e)
        '        log_errores(e.Message & " - " & nombreArchivo & " " & lugar, xrutaraiz)
        '        Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e)
        '    End Try
        'End Function


        '<HttpGet()> _
        '<HttpGet()> _

        Public Async Function SubirFotosMovil() As Task(Of HttpResponseMessage)

            Dim lugar As String = "inicio"
            Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
            log_errores(lugar, xrutaraiz)

            If Not Request.Content.IsMimeMultipartContent() Then
                lugar = "No es IsMimeMultipartContent"
                log_errores(lugar, xrutaraiz)
                Throw New HttpResponseException(HttpStatusCode.UnsupportedMediaType)
            End If




            'descomponer el nombre de la imagen
            'los obligatorios son 
            Dim respopera As New respopera
            Dim root As String = HttpContext.Current.Server.MapPath("~/App_Data")
            Dim provider = New CustomMultipartFormDataStreamProvider(root)
            Dim nombreArchivo As String = ""
            Dim nombreUsuario As String = ""
            Dim tipoArchivo As String = ""
            Dim Latitud As String = ""
            Dim Longitud As String = ""
            Dim itipoCierre As String = ""
            Dim imeiDisp As String = ""
            Dim fecha As String = ""
            Dim contador As String = ""
            Dim extension As String = ""
            Dim idaipinsenc As Decimal = 0

            Try


                lugar = "entro al try "
                Dim sb As New StringBuilder()
                ' Holds the response body
                ' Read the form data and return an async task.

                Await Request.Content.ReadAsMultipartAsync(provider)
                lugar = "despues de guardar la foto local"

                Dim usuario As String = ""
                If provider.FormData.Get("userName") IsNot Nothing Then
                    usuario = provider.FormData.Get("userName") 'correo               
                End If
                Dim idsegmanusu As Decimal = 0

                Dim segmanusuController As New segmanusuController
                Dim segmanusu As segmanusu = segmanusuController.selsegmanusuxnombreusuario(usuario)
                If segmanusu IsNot Nothing Then
                    idsegmanusu = segmanusu.idsegmanusu
                End If

                'se crea log de evento
                'AgregarAipLogEve("Llegue al subir foto", idsegmanusu, "MOVIL")

                lugar = "despues del nombre de susuario"

                If provider.FormData.Get("fileName") IsNot Nothing Then
                    nombreArchivo = provider.FormData.Get("fileName")   'nombre foto 
                    'se crea log de evento
                    'AgregarAipLogEve("nombre de la  foto " & nombreArchivo, idsegmanusu, "MOVIL")
                End If
                lugar = "despuesdel filename"


                ''************************************************************************
                ''Se extraen los datos del nombre de la imagen

                'Forma del nombre del archivo
                'idenc.tipoCierre.imei            .date        .contador.extension#latitud    #longitud
                '757  .0         .3a405bceb5caf6ea.110920200253.2       .jpg      #-34.6157476#-58.41302
                Dim delimiter As Char = "#"c
                Dim ValNombreArchivo() As String = nombreArchivo.Split(delimiter)
                Dim primeraParte1 As String = ValNombreArchivo(0)
                Latitud = ValNombreArchivo(1)
                Longitud = ValNombreArchivo(2)
                lugar = "Despues split4 " & Longitud
                log_errores(lugar + " " + nombreArchivo, xrutaraiz)

                'restante
                'idenc.tipoCierre.imei.date.contador.extension
                delimiter = "."c
                Dim ValNombreArchivo2() As String = primeraParte1.Split(delimiter)
                idaipinsenc = ValNombreArchivo2(0) ''identificador de encabezado
                itipoCierre = ValNombreArchivo2(1) ''tipo de cierre -> "1" = Desea cerrar la inspección, "0"= mantenerla abierta
                imeiDisp = ValNombreArchivo2(2)     ''imei del dispositivo
                fecha = ValNombreArchivo2(3)        ''Fecha de la toma de la foto
                contador = ValNombreArchivo2(4)     ''contador de la imagen
                extension = "." & ValNombreArchivo2(5)  ''extension del archivo


                Dim dia = fecha(0) + fecha(1)
                Dim mes = fecha(2) + fecha(3)
                Dim anio = fecha(4) + fecha(5) + fecha(6) + fecha(7)
                Dim hora = fecha(8) + fecha(9)
                Dim min = fecha(10) + fecha(11)
                Dim fcreaaipinsfoto As New Date(anio, mes, dia, hora, min, 0)   'FIN
                lugar = "Despues fecha " & fcreaaipinsfoto.ToString("dd/MM/yyyy")
                log_errores(lugar + " " + nombreArchivo, xrutaraiz)


                ''Fin extraen los datos del nombre de la imagen
                ''************************************************************************


                Dim aipinsenc As New aipinsenc
                Dim vi_aipusudispController As New vi_aipusudispController
                Dim xcodimmandisp As String = vi_aipusudispController.selxcodimmandispxidsegmanusu(idsegmanusu)
                Dim imeimovil As String = imeiDisp

                Dim itipoinsenc As String = ""
                Dim xrutatipoenc As String = ""


                Dim vi_aipinsenc As New vi_aipinsenc
                Dim vi_aipinsencController As New vi_aipinsencController
                ''se coloco la nueva adecuacion para que busque directamente por el id de encabezado se no encontrar busca por la placa o por la cotizacion
                vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(idaipinsenc)
                If (vi_aipinsenc Is Nothing) Then
                    lugar = "Encabezado nro: " & idaipinsenc.ToString() & " no existe."
                    AgregarAipLogEve("Ha ocurrido un error con el identificador de la inspección: " & nombreArchivo, 0, "VIDEOS")
                    log_errores("Error con el identificador de encabezado - lugar: " & lugar + " " + nombreArchivo, xrutaraiz)
                    Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, "Ha ocurrido un error con el identificador de la inspección")
                End If

                Select Case vi_aipinsenc.itipoinsenc
                    Case "SUSCRIPCION"
                        itipoinsenc = "SUSCRIPCION"
                        xrutatipoenc = "fotosmovil\suscripcion\"
                    Case "SINIESTRO"
                        itipoinsenc = "SINIESTRO"
                        xrutatipoenc = "fotosmovil\siniestro\"
                End Select


                Dim fejec As Date = Date.Now.ToShortDateString
                'se realiza la busqueda del encabezado


                AgregarAipLogEve("Se envío el encabezado id: " & idaipinsenc & " " & nombreArchivo, idsegmanusu, "SEGMOVIL")


                Dim bytefoto As Byte() = System.IO.File.ReadAllBytes(Path.Combine(HttpContext.Current.Server.MapPath("~/App_Data"), Path.GetFileName(nombreArchivo)))
                'se crea log de evento
                'AgregarAipLogEve("nombre de la  foto " & Path.GetFileName(nombreArchivo), idsegmanusu, "MOVIL")

                Dim aipinsfotoController As New aipinsfotoController
                Dim xextinsfoto = ".jpg"

                Dim nsecuenAnterior As Decimal = aipinsfotoController.maxcontfotoXidaipinsenc(vi_aipinsenc.idaipinsenc)
                'Dim xnomarchinsfoto As String = "insfoto_" & idaipinsenc & "_" & valores_fotos4(1) & xextinsfoto
                'ADAPTACION PARA OBTENER LA ULTIMA SECUENCIA DE LA IMAGEN POR INSPECCION PARA LA NUEVA ADAPTACION DE SISEP
                Dim nsecuenciaFoto As Integer = nsecuenAnterior + 1
                Dim xnomarchinsfoto As String = "insfoto_" & vi_aipinsenc.idaipinsenc & "_" & nsecuenciaFoto & xextinsfoto


                'se crea log de evento
                'AgregarAipLogEve("nombre arc " & bytefoto.ToString, idsegmanusu, "MOVIL")

                Dim xrutadefinitiva As String = xrutaraiz & xrutatipoenc & "ok\"
                CrearCarpeta(xrutadefinitiva)
                File.WriteAllBytes(xrutadefinitiva & xnomarchinsfoto, bytefoto)
                'AgregarAipLogEve("Ruta de la imagen " & xrutadefinitiva & xnomarchinsfoto, idsegmanusu, "MOVIL")

                'se arma la ruta de la carpeta zoom para cada redimension de la imagen
                'este cambio se adapto desde la fecha 08-08-2014
                'Ultimo registro idaipinsenc sin el cambio 49

                'Redimension de la imagen a la carpeta ZOOM
                Dim xruta_zoom As String = xrutadefinitiva & "zoom\"
                Dim redimensiono As Boolean = False
                redimensiono = redimensionar_imagen(xruta_zoom, 2000, 1600, xnomarchinsfoto, bytefoto)

                'si no redimensiono la imagen se intenta en 3 oportunidades 
                If Not redimensiono Then
                    Dim i As Decimal = 0
                    While redimensiono = False
                        redimensiono = redimensionar_imagen(xruta_zoom, 2000, 1600, xnomarchinsfoto, bytefoto)
                        If i = 3 Then
                            redimensiono = True
                        End If
                        i += 1
                    End While
                End If
                '*************************************************************
                'Redimension de la imagen a la carpeta thumbnail(miniatura)
                Dim xruta_thumbnail As String = xrutadefinitiva & "thumbnail\"
                Dim redimensiono_thumbnail As Boolean = False
                redimensiono_thumbnail = redimensionar_imagen(xruta_thumbnail, 170, 136, xnomarchinsfoto, bytefoto)

                'si no redimensiono la imagen se intenta en 3 oportunidades 
                If Not redimensiono_thumbnail Then
                    Dim i As Decimal = 0
                    While redimensiono_thumbnail = False
                        redimensiono_thumbnail = redimensionar_imagen(xruta_thumbnail, 170, 136, xnomarchinsfoto, bytefoto)
                        If i = 3 Then
                            redimensiono_thumbnail = True
                        End If
                        i += 1
                    End While
                End If

                ''***************************************************************


                'si guarda de forma correcta el enc y la foto en la ruta definitiva guardar los datos en la tabla de la foto                    
                Dim descripcion = ""
                If imeimovil <> xcodimmandisp Then
                    descripcion = "Foto que se agrego en fecha " & FormatDateTime(Date.Now, DateFormat.ShortDate) & " por el usuario " & usuario & " desde otro dispositivo diferente al asignado: " & imeimovil
                Else
                    descripcion = "Foto que se agrego en fecha " & FormatDateTime(Date.Now, DateFormat.ShortDate) & " por el usuario " & usuario & " desde el dispositivo: " & imeimovil
                End If
                Dim aipinsfoto As New aipinsfoto
                With aipinsfoto
                    .idaipinsfoto = 0
                    .idaipinsenc = vi_aipinsenc.idaipinsenc
                    .nsecinsfoto = nsecuenciaFoto
                    .xrutainsfoto = xrutadefinitiva
                    .xurlinsfoto = ""
                    .xtituinsfoto = "" 'verificar
                    .xnomarchinsfoto = xnomarchinsfoto
                    .xextinsfoto = xextinsfoto
                    .xlatcinsfoto = Latitud
                    .xlonginsfoto = Longitud
                    .ioriginsfoto = "CARGADA POR EL MOVIL"
                    .xdescinsfoto = descripcion
                    '.xdescinsfoto = fecha
                    .iestatinsfoto = "ACTIVA"
                    .fcreaaipinsfoto = fcreaaipinsfoto
                    .idseglogreg = 0
                End With
                respopera = aipinsfotoController.insaipinsfoto(aipinsfoto)


                AgregarAipLogEve("Cierre numero " & itipoCierre, idsegmanusu, "MOVIL")

                'si se guarda la foto de manera exitosa y se indico en la app movil que desea cerrar el caso se pasa la inspeccion al auditor
                If (respopera.irespuesta = "1" And itipoCierre = "1") Then

                    Dim vi_aipinsenc2 As New vi_aipinsenc
                    'se busca la inspeccion por estatus en proceso, esto es para no volver a procesarlo en el caso que ya este se encuentre en auditoria
                    vi_aipinsenc2 = vi_aipinsencController.selvi_aipinsencxIdyEstatus(vi_aipinsenc.idaipinsenc, "POR PROCESAR")

                    If (vi_aipinsenc2 IsNot Nothing) Then
                        'se virifica si ya se dio un guardar desde la web y se puede cerrar la inspeccion
                        If (vi_aipinsenc2.icerrarinsenc) Then
                            ''procesa la inspeccion enc para asignar un auditor de forma automatica
                            respopera = ModificarInspeccionConDistribucionAutomaticaAuditores(idaipinsenc)
                            AgregarAipLogEve("Cerrar insp " & idaipinsenc, idsegmanusu, "SEGMOVIL")

                            If (respopera.irespuesta = "1") Then
                                AgregarAipLogEve("Se envío la inspección nro. " & idaipinsenc & " al auditor de forma automática ", idsegmanusu, "SEGMOVIL")
                            End If
                        End If
                    End If
                End If

                Return New HttpResponseMessage() With { _
                     .Content = New StringContent(sb.ToString()) _
                }

            Catch e As Exception
                AgregarLogErrores("Metodo:SubirFotosMovil " & lugar + " " + nombreArchivo, e)
                log_errores(e.Message & " - " & nombreArchivo & " " & lugar + " " + nombreArchivo, xrutaraiz)
                Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e)
            End Try
        End Function

        Public Async Function SubirFotosMovilViejo() As Task(Of HttpResponseMessage)
            If Not Request.Content.IsMimeMultipartContent() Then
                Throw New HttpResponseException(HttpStatusCode.UnsupportedMediaType)
            End If

            Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
            Dim lugar As String = "inicio"
            'descomponer el nombre de la imagen
            'los obligatorios son 

            Dim root As String = HttpContext.Current.Server.MapPath("~/App_Data")
            Dim provider = New CustomMultipartFormDataStreamProvider(root)
            Dim nombreArchivo As String = ""

            Try
                lugar = "entro al try "
                Dim sb As New StringBuilder()
                ' Holds the response body
                ' Read the form data and return an async task.

                Await Request.Content.ReadAsMultipartAsync(provider)
                lugar = "despues de guardar la foto local"
                'Dim nombreArchivo As String = "5585.555888..Fxvnj...Gvbb#355258057777000#080520142200#0-1.jpg"
                'Dim nombreArchivo As String = "133134.1616464..Qdqxa.Sxscsh..#353922058239177#110720141457#0-1.jpg#10.4845302&-66.8046696"
                Dim usuario As String = ""
                If provider.FormData.Get("userName") IsNot Nothing Then
                    usuario = provider.FormData.Get("userName") 'correo               
                End If
                Dim idsegmanusu As Decimal = 0

                Dim segmanusuController As New segmanusuController
                Dim segmanusu As segmanusu = segmanusuController.selsegmanusuxnombreusuario(usuario)
                If segmanusu IsNot Nothing Then
                    idsegmanusu = segmanusu.idsegmanusu
                End If
                lugar = "despues del nombre de susuario"
                Dim lat As String = ""
                'If provider.FormData.Get("LAT") IsNot Nothing Then
                '    lat = funciones.convertToDegree2(provider.FormData.Get("LAT"))
                'End If
                Dim log As String = ""
                'If provider.FormData.Get("LONG") IsNot Nothing Then
                '    lot = funciones.convertToDegree2(provider.FormData.Get("LONG"))
                'End If
                If provider.FormData.Get("fileName") IsNot Nothing Then
                    nombreArchivo = provider.FormData.Get("fileName")   'nombre foto 
                End If
                lugar = "despuesdel filename"
                'For Each file As MultipartFileData In provider.FileData
                '    nombreArchivo = (file.Headers.ContentDisposition.FileName) 'nombre del archivo                    
                'Next
                'CP.CS.PL.SM.SC.PO.SI#IMEI#DATE#TIPOInspeccion-contador.jpg#lat&log

                'CP:cedula asegurado -->(0)
                'CS:cedula sidorista -->(1)
                'PL:placa() -->(2)
                'SM:serial motos  -->(3)
                'SC:serial carroceria -->(4)
                'PO:poliza() -->(5)
                'SI:siniestro() -->(6)
                'en el primer arreglo esta es la posicion(7)
                'IMEI:identificador telefono -->(0)
                'DATE: dd/MM/aahhmm -->(1)
                'TipoInspeccion: -->(2)
                ' 0- suscripción
                ' 1- siniestro
                ' 2- limpieza daños
                ' 3- inventario de restos y salvamentos
                ' 4- anexo de daños
                'contador-->(3) numero de la foto
                Dim valores_fotos1 As String() = Split(nombreArchivo, "#")
                Dim valores_fotos2 As String() = Split(valores_fotos1(0), ".")
                Dim valores_fotos3 As String() = Split(valores_fotos1(3), ".") 'tipo de foto y contador juntos
                Dim valores_fotos4 As String() = Split(valores_fotos3(0), "-") 'tipo de foto y contador separados              
                Dim valores_fotos5 As String() = Split(valores_fotos1(4), "&") 'aqui guarda la longitud 
                lat = valores_fotos5(0)
                log = valores_fotos5(1)
                lugar = "despues de la lista de valores saparados"

                Dim fecha As String                                             'INICIO:
                fecha = valores_fotos1(2)                                       'Se separa la fecha y la hora en variables para armar una variable Date
                Dim dia = fecha(0) + fecha(1)
                Dim mes = fecha(2) + fecha(3)
                Dim anio = fecha(4) + fecha(5) + fecha(6) + fecha(7)
                Dim hora = fecha(8) + fecha(9)
                Dim min = fecha(10) + fecha(11)
                Dim fcreaaipinsfoto As New Date(anio, mes, dia, hora, min, 0)   'FIN

                Dim aipinsenc As New aipinsenc
                Dim vi_aipusudispController As New vi_aipusudispController
                Dim xcodimmandisp As String = vi_aipusudispController.selxcodimmandispxidsegmanusu(idsegmanusu)
                Dim imeimovil As String = valores_fotos1(1)

                Dim itipoinsenc As String = ""
                Dim xrutatipoenc As String = ""
                Dim xnomlogeve As String = "Subiendo Peritaje Serial Motor : " & valores_fotos2(3) & " desde el celular Imei: " & imeimovil
                'SUSCRIPCION, RESTOS Y SALVAMENTO, LIMPIEZA DE DAÑOS POR SUSCRIPCION, LIMPIEZA DE DAÑOS POR SINIESTRO, AJUSTES POR SINIESTRO, AJUSTES POR ANEXO)
                Select Case valores_fotos4(0)
                    Case 0
                        itipoinsenc = "SUSCRIPCION"
                        xrutatipoenc = "fotosmovil\suscripcion\"
                    Case 1
                        itipoinsenc = "RESTOS Y SALVAMENTO"
                        xrutatipoenc = "fotosmovil\restos_salvamento\"
                    Case 2
                        itipoinsenc = "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
                        xrutatipoenc = "fotosmovil\limpieza_siniestro\"
                    Case 3
                        itipoinsenc = "LIMPIEZA DE DAÑOS POR SINIESTRO"
                        xrutatipoenc = "fotosmovil\limpieza_suscripcion\"
                    Case 4
                        itipoinsenc = "AJUSTES POR SINIESTRO"
                        xrutatipoenc = "fotosmovil\ajustes_sinientro\"
                    Case 5
                        itipoinsenc = "AJUSTES POR ANEXO"
                        xrutatipoenc = "fotosmovil\ajustes_anexo\"
                End Select

                Dim idaipinsenc As Decimal = 0
                With aipinsenc
                    .idaipinsenc = idaipinsenc
                    .itipoinsenc = itipoinsenc
                    .idsegmanusuperit = idsegmanusu '-->verificar
                    .xcedpropinsenc = valores_fotos2(0)
                    .xcedsidoinsenc = valores_fotos2(1)
                    .xplacinsenc = valores_fotos2(2)
                    .xsermotinsenc = valores_fotos2(3)
                    .xsercarrinsenc = valores_fotos2(4)
                    .xnumpolinsenc = valores_fotos2(5)
                    .xnumsininsenc = valores_fotos2(6)
                    .xllavinsenc = ""
                    .fcreainsenc = FormatDateTime(Date.Now, DateFormat.ShortDate)
                    .fprocinsenc = CDate("01-01-1900")
                    .faudinsenc = CDate("01-01-1900")
                    .fultrechinsenc = CDate("01-01-1900")
                    .fcancinsenc = CDate("01-01-1900")
                    .facepinsenc = CDate("01-01-1900")
                    .xdescinsenc = ""
                    .iestatinsenc = "INICIALIZAR"
                    .idseglogreg = 0
                End With

                Dim respopera As respopera

                Dim bytefoto As Byte() = System.IO.File.ReadAllBytes(Path.Combine(HttpContext.Current.Server.MapPath("~/App_Data"), Path.GetFileName(nombreArchivo)))

                If valores_fotos2(4) <> "" Then
                    respopera = CrearAipInsEncMovil(aipinsenc)
                    'Dim xextinsfoto = System.IO.Path.GetExtension(Path.Combine(HttpContext.Current.Server.MapPath("~/App_Data"), Path.GetFileName(nombreArchivo)))
                    Dim xextinsfoto = ".jpg"

                    If respopera.irespuesta = "1" Or respopera.irespuesta = "2" Then
                        idaipinsenc = respopera.id
                        Dim xnomarchinsfoto As String = "insfoto_" & idaipinsenc & "_" & valores_fotos4(1) & xextinsfoto
                        Dim xrutadefinitiva As String = xrutaraiz & xrutatipoenc & "ok\"
                        File.WriteAllBytes(xrutadefinitiva & xnomarchinsfoto, bytefoto)

                        'se arma la ruta de la carpeta zoom para cada redimension de la imagen
                        'este cambio se adapto desde la fecha 08-08-2014
                        'Ultimo registro idaipinsenc sin el cambio 49

                        'Redimension de la imagen a la carpeta ZOOM
                        Dim xruta_zoom As String = xrutadefinitiva & "zoom\"
                        Dim redimensiono As Boolean = False
                        redimensiono = redimensionar_imagen(xruta_zoom, 2000, 1600, xnomarchinsfoto, bytefoto)

                        'si no redimensiono la imagen se intenta en 3 oportunidades 
                        If Not redimensiono Then
                            Dim i As Decimal = 0
                            While redimensiono = False
                                redimensiono = redimensionar_imagen(xruta_zoom, 2000, 1600, xnomarchinsfoto, bytefoto)
                                If i = 3 Then
                                    redimensiono = True
                                End If
                                i += 1
                            End While
                        End If
                        '*************************************************************
                        'Redimension de la imagen a la carpeta thumbnail(miniatura)
                        Dim xruta_thumbnail As String = xrutadefinitiva & "thumbnail\"
                        Dim redimensiono_thumbnail As Boolean = False
                        redimensiono_thumbnail = redimensionar_imagen(xruta_thumbnail, 170, 136, xnomarchinsfoto, bytefoto)

                        'si no redimensiono la imagen se intenta en 3 oportunidades 
                        If Not redimensiono_thumbnail Then
                            Dim i As Decimal = 0
                            While redimensiono_thumbnail = False
                                redimensiono_thumbnail = redimensionar_imagen(xruta_thumbnail, 170, 136, xnomarchinsfoto, bytefoto)
                                If i = 3 Then
                                    redimensiono_thumbnail = True
                                End If
                                i += 1
                            End While
                        End If

                        ''***************************************************************


                        'si guarda de forma correcta el enc y la foto en la ruta definitiva guardar los datos en la tabla de la foto                    
                        Dim descripcion = ""
                        If imeimovil <> xcodimmandisp Then
                            descripcion = "Foto que se agrego en fecha " & FormatDateTime(Date.Now, DateFormat.ShortDate) & " por el usuario " & usuario & " desde otro dispositivo diferente al asignado: " & imeimovil
                        Else
                            descripcion = "Foto que se agrego en fecha " & FormatDateTime(Date.Now, DateFormat.ShortDate) & " por el usuario " & usuario & " desde el dispositivo: " & imeimovil
                        End If
                        Dim aipinsfoto As New aipinsfoto
                        With aipinsfoto
                            .idaipinsfoto = 0
                            .idaipinsenc = idaipinsenc
                            .nsecinsfoto = valores_fotos4(1)
                            .xrutainsfoto = xrutadefinitiva
                            .xurlinsfoto = ""
                            .xtituinsfoto = "" 'verificar
                            .xnomarchinsfoto = xnomarchinsfoto
                            .xextinsfoto = xextinsfoto
                            .xlatcinsfoto = lat
                            .xlonginsfoto = log
                            .ioriginsfoto = "CARGADA POR EL MOVIL"
                            .xdescinsfoto = descripcion
                            '.xdescinsfoto = fecha
                            .iestatinsfoto = "ACTIVA"
                            .fcreaaipinsfoto = fcreaaipinsfoto
                            '.fcreaaipinsfoto = Date.Now
                            .idseglogreg = 0
                        End With
                        Dim aipinsfotoController As New aipinsfotoController
                        respopera = aipinsfotoController.insaipinsfoto(aipinsfoto)

                        'log_errores(respopera.xmsjtecnico, xrutaraiz)
                    Else
                        File.WriteAllBytes(xrutaraiz & xrutatipoenc & "fallida\" & nombreArchivo, bytefoto)
                    End If
                Else
                    File.WriteAllBytes(xrutaraiz & xrutatipoenc & "fallida\" & nombreArchivo, bytefoto) 'si el serial del carro esta vacio manda a fallida esto no deberia currir
                End If

                'agregar el log de evento
                respopera = AgregarAipLogEve(xnomlogeve, idsegmanusu, "MOVIL")
                If imeimovil <> xcodimmandisp Then
                    respopera = AgregarAipLogEve("Peritaje Serial Motor : " & valores_fotos2(3) & " Imei desde donde se subio la foto " & imeimovil & " " & "es diferente del Imei registrado para el perito " & xcodimmandisp, idsegmanusu, "MOVIL")
                End If
                'fin agregar el log de evento

                Return New HttpResponseMessage() With { _
                     .Content = New StringContent(sb.ToString()) _
                }

            Catch e As Exception
                log_errores(e.Message & " - " & nombreArchivo & " " & lugar, xrutaraiz)
                Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e)
            End Try
        End Function

        Public Function GuardarAipInsArch(aipinsarch As aipinsarch) As respopera

            Dim respopera As New respopera
            Dim aipinsarchController As New aipinsarchController
            respopera = aipinsarchController.insaipinsarch(aipinsarch)
            Return respopera

        End Function


        <HttpPost()> _
        Public Function ObtenerListaAgendaPendienteMovil(xcorreoelectronico1 As String) As List(Of agendamovil)
            Dim fecha_start As New Date(Date.Now.Year, Date.Now.Month, Date.Now.Day, 0, 0, 0)
            '
            Dim vi_aipinsencController As New vi_aipinsencController

            Dim lista_vi_aipinsenc As List(Of vi_aipinsenc) = vi_aipinsencController.ObtenerInsEncPendPorCorreoElectronico(xcorreoelectronico1)
            Dim lista_agendamovil As New List(Of agendamovil)
            Dim agendamovil As agendamovil

            ''esto no deberia estar aqui sino en el modulo pero hay que cambiar el movil
            For i = 0 To lista_vi_aipinsenc.Count - 1
                agendamovil = New agendamovil()

                With agendamovil
                    .idaipinsenc = lista_vi_aipinsenc(i).idaipinsenc
                    .fejecactivperi = lista_vi_aipinsenc(i).fejecactivperi
                    .itipoinsenc = lista_vi_aipinsenc(i).itipoinsenc.Trim()
                    .xcedpropinsenc = lista_vi_aipinsenc(i).xcedpropinsenc.Trim()
                    .xcedsidoinsenc = lista_vi_aipinsenc(i).xcedsidoinsenc.Trim()
                    .xsermotinsenc = lista_vi_aipinsenc(i).xsermotinsenc
                    .xsercarrinsenc = lista_vi_aipinsenc(i).xsercarrinsenc
                    .xplacinsenc = lista_vi_aipinsenc(i).xplacinsenc.Trim()
                    .xnomcliactivperi = remover_caracteres_especiales(lista_vi_aipinsenc(i).xnomcliactivperi.Trim())
                    .xnumpolinsenc = lista_vi_aipinsenc(i).xnumpolinsenc.Trim()
                    .xnumsininsenc = lista_vi_aipinsenc(i).xnumsininsenc.Trim()
                    .xtelfmovilactivperi = lista_vi_aipinsenc(i).xtelfmovilactivperi.Trim()

                    ''lo hago asi dado que no se utiliza aqui, asi pesa menos en el movil
                    .xdescactivperi = "des" 'remover_caracteres_especiales(lista_vi_aipinsenc(i).xdescactivperi.Trim())
                    .xfechahora = FormatoFechaHora(lista_vi_aipinsenc(i).fejecactivperi)
                End With

                lista_vi_aipinsenc(i).xnomcliactivperi = remover_caracteres_especiales(lista_vi_aipinsenc(i).xnomcliactivperi)
                lista_vi_aipinsenc(i).xdescactivperi = remover_caracteres_especiales(lista_vi_aipinsenc(i).xdescactivperi)

                lista_agendamovil.Add(agendamovil)
            Next
            ''fin esto no deberia estar aqui sino en el modulo pero hay que cambiar el movil

            '
            Return lista_agendamovil
        End Function

        Public Function FormatoFechaHora(fecha As DateTime)
            Dim _fecha_start As New Date(fecha.Year, fecha.Month, fecha.Day, 0, 0, 0)
            Dim _tiempo As String = fecha.Hour & ": " & fecha.Minute
            If fecha.Hour > 12 Then
                _tiempo = _tiempo & " pm."
            Else
                _tiempo = _tiempo & " am."
            End If
            Dim _fecha As String = _fecha_start & " " & _tiempo

            Return _fecha
        End Function

        '<HttpGet()> _
        '<HttpGet()> _
        Public Async Function SubirFotosMovilCrearInsp() As Task(Of HttpResponseMessage)
            If Not Request.Content.IsMimeMultipartContent() Then
                Throw New HttpResponseException(HttpStatusCode.UnsupportedMediaType)
            End If

            Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
            Dim lugar As String = "inicio"
            'descomponer el nombre de la imagen
            'los obligatorios son 

            Dim root As String = HttpContext.Current.Server.MapPath("~/App_Data")
            Dim provider = New CustomMultipartFormDataStreamProvider(root)
            Dim nombreArchivo As String = ""

            Try


                lugar = "entro al try "
                Dim sb As New StringBuilder()
                ' Holds the response body
                ' Read the form data and return an async task.

                Await Request.Content.ReadAsMultipartAsync(provider)
                lugar = "despues de guardar la foto local"
                'Dim nombreArchivo As String = "5585.555888..Fxvnj...Gvbb#355258057777000#080520142200#0-1.jpg"
                'Dim nombreArchivo As String = "133134.1616464..Qdqxa.Sxscsh..#353922058239177#110720141457#0-1.jpg#10.4845302&-66.8046696"
                Dim usuario As String = ""
                If provider.FormData.Get("userName") IsNot Nothing Then
                    usuario = provider.FormData.Get("userName") 'correo               
                End If
                Dim idsegmanusu As Decimal = 0

                Dim segmanusuController As New segmanusuController
                Dim segmanusu As segmanusu = segmanusuController.selsegmanusuxnombreusuario(usuario)
                If segmanusu IsNot Nothing Then
                    idsegmanusu = segmanusu.idsegmanusu
                End If

                'se crea log de evento
                AgregarAipLogEve("Llegue al subir foto", idsegmanusu, "MOVIL")

                lugar = "despues del nombre de susuario"
                Dim lat As String = ""
                'If provider.FormData.Get("LAT") IsNot Nothing Then
                '    lat = funciones.convertToDegree2(provider.FormData.Get("LAT"))
                'End If
                Dim log As String = ""
                'If provider.FormData.Get("LONG") IsNot Nothing Then
                '    lot = funciones.convertToDegree2(provider.FormData.Get("LONG"))
                'End If
                If provider.FormData.Get("fileName") IsNot Nothing Then
                    nombreArchivo = provider.FormData.Get("fileName")   'nombre foto 
                    'se crea log de evento
                    AgregarAipLogEve("nombre de la  foto " & nombreArchivo, idsegmanusu, "MOVIL")
                End If
                lugar = "despuesdel filename"
                'For Each file As MultipartFileData In provider.FileData
                '    nombreArchivo = (file.Headers.ContentDisposition.FileName) 'nombre del archivo                    
                'Next
                'CP.CS.PL.SM.SC.PO.SI#IMEI#DATE#TIPOInspeccion-contador.jpg#lat&log

                'CP:cedula asegurado -->(0)
                'CS:cedula sidorista -->(1)
                'PL:placa() -->(2)
                'SM:serial motos  -->(3)
                'SC:serial carroceria -->(4)
                'PO:poliza() -->(5)
                'SI:siniestro() -->(6)
                'en el primer arreglo esta es la posicion(7)
                'IMEI:identificador telefono -->(0)
                'DATE: dd/MM/aahhmm -->(1)
                'TipoInspeccion: -->(2)
                ' 0- suscripción
                ' 1- siniestro
                ' 2- limpieza daños
                ' 3- inventario de restos y salvamentos
                ' 4- anexo de daños
                'contador-->(3) numero de la foto
                Dim valores_fotos1 As String() = Split(nombreArchivo, "#")
                Dim valores_fotos2 As String() = Split(valores_fotos1(0), ".")
                Dim valores_fotos3 As String() = Split(valores_fotos1(3), ".") 'tipo de foto y contador juntos
                Dim valores_fotos4 As String() = Split(valores_fotos3(0), "-") 'tipo de foto y contador separados              
                Dim valores_fotos5 As String() = Split(valores_fotos1(4), "&") 'aqui guarda la longitud 
                lat = valores_fotos5(0)
                log = valores_fotos5(1)
                lugar = "despues de la lista de valores saparados"

                Dim fecha As String                                             'INICIO:
                fecha = valores_fotos1(2)                                       'Se separa la fecha y la hora en variables para armar una variable Date
                Dim dia = fecha(0) + fecha(1)
                Dim mes = fecha(2) + fecha(3)
                Dim anio = fecha(4) + fecha(5) + fecha(6) + fecha(7)
                Dim hora = fecha(8) + fecha(9)
                Dim min = fecha(10) + fecha(11)
                Dim fcreaaipinsfoto As New Date(anio, mes, dia, hora, min, 0)   'FIN

                Dim aipinsenc As New aipinsenc
                Dim vi_aipusudispController As New vi_aipusudispController
                Dim xcodimmandisp As String = vi_aipusudispController.selxcodimmandispxidsegmanusu(idsegmanusu)
                Dim imeimovil As String = valores_fotos1(1)

                Dim itipoinsenc As String = ""
                Dim xrutatipoenc As String = ""
                Dim xnomlogeve As String = "Subiendo Peritaje Serial Motor : " & valores_fotos2(3) & " desde el celular Imei: " & imeimovil
                'SUSCRIPCION, RESTOS Y SALVAMENTO, LIMPIEZA DE DAÑOS POR SUSCRIPCION, LIMPIEZA DE DAÑOS POR SINIESTRO, AJUSTES POR SINIESTRO, AJUSTES POR ANEXO)



                AgregarAipLogEve("Tipo de inspeccion " & valores_fotos4(0), idsegmanusu, "MOVIL")

                Select Case valores_fotos4(0)
                    Case 0
                        itipoinsenc = "SUSCRIPCION"
                        xrutatipoenc = "fotosmovil\suscripcion\"
                    Case 1
                        itipoinsenc = "SINIESTRO"
                        xrutatipoenc = "fotosmovil\siniestro\"
                        'Case 1
                        '    itipoinsenc = "RESTOS Y SALVAMENTO"
                        '    xrutatipoenc = "fotosmovil\restos_salvamento\"
                        'Case 2
                        '    itipoinsenc = "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
                        '    xrutatipoenc = "fotosmovil\limpieza_siniestro\"
                        'Case 3
                        '    itipoinsenc = "LIMPIEZA DE DAÑOS POR SINIESTRO"
                        '    xrutatipoenc = "fotosmovil\limpieza_suscripcion\"
                        'Case 4
                        '    itipoinsenc = "AJUSTES POR SINIESTRO"
                        '    xrutatipoenc = "fotosmovil\ajustes_sinientro\"
                        'Case 5
                        '    itipoinsenc = "AJUSTES POR ANEXO"
                        '    xrutatipoenc = "fotosmovil\ajustes_anexo\"
                End Select

                Dim idaipinsenc As Decimal = 0
                Dim fejec As Date = Date.Now.ToShortDateString
                'se realiza la busqueda del encabezado


                Dim respopera As New respopera
                Dim vi_aipinsencController As New vi_aipinsencController
                Dim vi_aipinsenc As New vi_aipinsenc
                vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxSerialCarYFInicio(valores_fotos2(4), fejec)

                If (vi_aipinsenc IsNot Nothing) Then
                    'se crea log de evento
                    AgregarAipLogEve("Se encontro el encabezado " & vi_aipinsenc.idaipinsenc, idsegmanusu, "MOVIL")
                End If







                'si el encabezado no existe se debe crear la actividad y luego el encabezado para dar la relacion
                If (vi_aipinsenc Is Nothing) Then

                    'se crea la actividad
                    Dim aipactivperi As New aipactivperi
                    Dim aipactivperiController As New aipactivperiController

                    Dim FechaActividad As Date = Date.Now
                    Dim minutos As Integer = FechaActividad.Minute
                    Select Case minutos
                        Case 0
                            minutos = 0
                        Case 0 To 15
                            minutos = 0
                        Case 15
                            minutos = 15
                        Case 15 To 30
                            minutos = 30
                        Case 30
                            minutos = 30
                        Case 30 To 45
                            minutos = 45
                        Case 45
                            minutos = 45
                        Case 45 To 55
                            minutos = 45
                        Case 55 To 60
                            minutos = 0
                    End Select
                    lugar = "5.6) pase el case"
                    Dim FechaAdaptada As New System.DateTime(FechaActividad.Year, FechaActividad.Month, FechaActividad.Day, FechaActividad.Hour, minutos, 0)



                    ''se llena la vista para llamar a la funcion de crear la acividad e inspeccion
                    Dim vi_aipinsenc1 As New vi_aipinsenc
                    With vi_aipinsenc1

                        'encabezado
                        .idaipinsenc = 0

                        .itipoinsenc = itipoinsenc
                        .itipoperitinsenc = "EXTERNA"
                        .iorigeninsenc = "MOVIL"
                        .idsegmanusuperit = idsegmanusu
                        .idsegmanusuaudit = idsegmanusu
                        .xcedpropinsenc = valores_fotos2(0)
                        .xcedsidoinsenc = valores_fotos2(1)
                        .xplacinsenc = valores_fotos2(2)
                        .xsermotinsenc = valores_fotos2(3)
                        .xsercarrinsenc = valores_fotos2(4)
                        .xnumpolinsenc = valores_fotos2(5)
                        .xnumsininsenc = valores_fotos2(6)
                        .xllavinsenc = ""
                        .fcreainsenc = DateTime.Now
                        .fprocinsenc = New DateTime(1900, 1, 1)
                        .faudinsenc = New DateTime(1900, 1, 1)
                        .fultrechinsenc = New DateTime(1900, 1, 1)
                        .fcancinsenc = New DateTime(1900, 1, 1)
                        .facepinsenc = New DateTime(1900, 1, 1)
                        .xdescinsenc = "INSPECCION GENERADA POR APP MOVIL."

                        .xdescinsenc = ""
                        .icerrarinsenc = False
                        .iestatinsenc = "INICIALIZAR"
                        .idseglogreg = 0

                        'actividad
                        .idaipactivperi = 0
                        .idcomunmancont = 1
                        .idcomunmanpais = 9
                        .idcomunmanestado = 71
                        .idcomunmanlocalid = 44
                        .fejecactivperi = FechaAdaptada
                        .ffinejecactivperi = FechaAdaptada.AddHours(1)
                        .xdireccionactivperi = "Pertaje creado directamente desde el móvil sin dirección previamente establecida"
                        .xtelfmovilactivperi = ""
                        .xnomcliactivperi = ""
                        .xcorreoelectronicoactivperi = ""
                        .xtituactivperi = "Peritaje no agendado"
                        .xdescactivperi = ""
                        .ialcanactivperi = "PUBLICA"
                        .iestatactivperi = "PENDIENTE"
                        .idsegmanusucrea = idsegmanusu
                        .fcrearegactivperi = DateTime.Now

                    End With

                    'se crea la actividad y el encabezado
                    respopera = GuardarInspeccionActividad(vi_aipinsenc1)
                    vi_aipinsenc1.idaipinsenc = respopera.id

                    'fin vista



                    'With aipactivperi

                    '    .idaipactivperi = 0


                    '    .idcomunmancont = 1
                    '    .idcomunmanpais = 1
                    '    .idcomunmanestado = 20
                    '    .idcomunmanlocalid = 192
                    '    .fejecactivperi = FechaAdaptada
                    '    .ffinejecactivperi = FechaAdaptada.AddHours(1)
                    '    .xdireccionactivperi = "Pertaje creado directamente desde el móvil sin dirección previamente establecida"
                    '    .xtelfmovilactivperi = ""
                    '    .xnomcliactivperi = ""
                    '    .xcorreoelectronicoactivperi = ""
                    '    .xtituactivperi = "Peritaje no agendado"
                    '    .xdescactivperi = ""
                    '    .ialcanactivperi = "PUBLICA"
                    '    .iestatactivperi = "PENDIENTE"
                    '    .idsegmanusucrea = idsegmanusu
                    '    .fcrearegactivperi = DateTime.Now
                    '    .idseglogreg = 0



                    'End With


                    'respopera = aipactivperiController.insaipactivperi(aipactivperi)


                    'If (respopera.irespuesta = "1") Then

                    '    'se crea log de evento
                    '    AgregarAipLogEve("Se creo la actividad " & respopera.id, idsegmanusu, "MOVIL")

                    '    'segmanusu crea el encabezado
                    '    With aipinsenc

                    '        .idaipinsenc = 0

                    '        .idaipactivperi = respopera.id
                    '        .itipoinsenc = itipoinsenc
                    '        .itipoperitinsenc = "EXTERNA"
                    '        .iorigeninsenc = "MOVIL"
                    '        .idsegmanusuperit = idsegmanusu
                    '        .idsegmanusuaudit = idsegmanusu
                    '        .xcedpropinsenc = valores_fotos2(0)
                    '        .xcedsidoinsenc = valores_fotos2(1)
                    '        .xplacinsenc = valores_fotos2(2)
                    '        .xsermotinsenc = valores_fotos2(3)
                    '        .xsercarrinsenc = valores_fotos2(4)
                    '        .xnumpolinsenc = valores_fotos2(5)
                    '        .xnumsininsenc = valores_fotos2(6)
                    '        .xllavinsenc = ""
                    '        .fcreainsenc = DateTime.Now
                    '        .fprocinsenc = New DateTime(1900, 1, 1)
                    '        .faudinsenc = New DateTime(1900, 1, 1)
                    '        .fultrechinsenc = New DateTime(1900, 1, 1)
                    '        .fcancinsenc = New DateTime(1900, 1, 1)
                    '        .facepinsenc = New DateTime(1900, 1, 1)
                    '        .xdescinsenc = "INSPECCION GENERADA POR AGENDA WEB."

                    '        .xdescinsenc = ""
                    '        .iestatinsenc = "INICIALIZAR"
                    '        .idseglogreg = 0
                    '    End With

                    'Dim aipinsencController As New aipinsencController
                    'respopera = aipinsencController.insaipinsenc(aipinsenc)

                    If (respopera.irespuesta <> "1") Then
                        'si ocurre error al intentar crear el encabezado
                        log_errores("Error al intentar crear el encabezado. Msj Tec: " & respopera.xmsjtecnico & " - lugar: " & lugar, xrutaraiz)
                        Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, "Error al intentar crear el encabezado.")
                    Else

                        'se crea log de evento
                        AgregarAipLogEve("Se creo la actividad e inspeccion " & respopera.id, idsegmanusu, "MOVIL")

                        idaipinsenc = respopera.id
                        'se crea log de evento
                        AgregarAipLogEve("Se creo el encabezado " & respopera.id, idsegmanusu, "MOVIL")
                    End If
                    'Else

                    '    'si ocurre un error al intentar crear la actividad
                    '    log_errores("Error al intentar crear la actividad. Msj Tec: " & respopera.xmsjtecnico & " - lugar: " & lugar, xrutaraiz)
                    '    Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, "Error al intentar crear la actividad.")

                    'End If

                Else
                    idaipinsenc = vi_aipinsenc.idaipinsenc
                End If

                'si no se tiene el identificador del encabezado se devuelve error
                If (idaipinsenc <= 0) Then
                    'si ocurre un error al intentar crear la actividad
                    log_errores("Error con el identificador de encabezado. Msj Tec: " & respopera.xmsjtecnico & " - lugar: " & lugar, xrutaraiz)
                    Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, "Error con el identificador de encabezado.")

                End If


                Dim bytefoto As Byte() = System.IO.File.ReadAllBytes(Path.Combine(HttpContext.Current.Server.MapPath("~/App_Data"), Path.GetFileName(nombreArchivo)))
                'se crea log de evento
                AgregarAipLogEve("nombre de la  foto " & Path.GetFileName(nombreArchivo), idsegmanusu, "MOVIL")

                If valores_fotos2(4) <> "" Then
                    'respopera = CrearAipInsEncMovil(aipinsenc)
                    'Dim xextinsfoto = System.IO.Path.GetExtension(Path.Combine(HttpContext.Current.Server.MapPath("~/App_Data"), Path.GetFileName(nombreArchivo)))
                    Dim xextinsfoto = ".jpg"

                    If idaipinsenc > 0 Then



                        Dim xnomarchinsfoto As String = "insfoto_" & idaipinsenc & "_" & valores_fotos4(1) & xextinsfoto


                        'se crea log de evento
                        AgregarAipLogEve("nombre arc " & bytefoto.ToString, idsegmanusu, "MOVIL")

                        Dim xrutadefinitiva As String = xrutaraiz & xrutatipoenc & "ok\"
                        File.WriteAllBytes(xrutadefinitiva & xnomarchinsfoto, bytefoto)
                        AgregarAipLogEve("Ruta de la imagen " & xrutadefinitiva & xnomarchinsfoto, idsegmanusu, "MOVIL")

                        'se arma la ruta de la carpeta zoom para cada redimension de la imagen
                        'este cambio se adapto desde la fecha 08-08-2014
                        'Ultimo registro idaipinsenc sin el cambio 49

                        'Redimension de la imagen a la carpeta ZOOM
                        Dim xruta_zoom As String = xrutadefinitiva & "zoom\"
                        Dim redimensiono As Boolean = False
                        redimensiono = redimensionar_imagen(xruta_zoom, 2000, 1600, xnomarchinsfoto, bytefoto)

                        'si no redimensiono la imagen se intenta en 3 oportunidades 
                        If Not redimensiono Then
                            Dim i As Decimal = 0
                            While redimensiono = False
                                redimensiono = redimensionar_imagen(xruta_zoom, 2000, 1600, xnomarchinsfoto, bytefoto)
                                If i = 3 Then
                                    redimensiono = True
                                End If
                                i += 1
                            End While
                        End If
                        '*************************************************************
                        'Redimension de la imagen a la carpeta thumbnail(miniatura)
                        Dim xruta_thumbnail As String = xrutadefinitiva & "thumbnail\"
                        Dim redimensiono_thumbnail As Boolean = False
                        redimensiono_thumbnail = redimensionar_imagen(xruta_thumbnail, 170, 136, xnomarchinsfoto, bytefoto)

                        'si no redimensiono la imagen se intenta en 3 oportunidades 
                        If Not redimensiono_thumbnail Then
                            Dim i As Decimal = 0
                            While redimensiono_thumbnail = False
                                redimensiono_thumbnail = redimensionar_imagen(xruta_thumbnail, 170, 136, xnomarchinsfoto, bytefoto)
                                If i = 3 Then
                                    redimensiono_thumbnail = True
                                End If
                                i += 1
                            End While
                        End If

                        ''***************************************************************


                        'si guarda de forma correcta el enc y la foto en la ruta definitiva guardar los datos en la tabla de la foto                    
                        Dim descripcion = ""
                        If imeimovil <> xcodimmandisp Then
                            descripcion = "Foto que se agrego en fecha " & FormatDateTime(Date.Now, DateFormat.ShortDate) & " por el usuario " & usuario & " desde otro dispositivo diferente al asignado: " & imeimovil
                        Else
                            descripcion = "Foto que se agrego en fecha " & FormatDateTime(Date.Now, DateFormat.ShortDate) & " por el usuario " & usuario & " desde el dispositivo: " & imeimovil
                        End If
                        Dim aipinsfoto As New aipinsfoto
                        With aipinsfoto
                            .idaipinsfoto = 0
                            .idaipinsenc = idaipinsenc
                            .nsecinsfoto = valores_fotos4(1)
                            .xrutainsfoto = xrutadefinitiva
                            .xurlinsfoto = ""
                            .xtituinsfoto = "" 'verificar
                            .xnomarchinsfoto = xnomarchinsfoto
                            .xextinsfoto = xextinsfoto
                            .xlatcinsfoto = lat
                            .xlonginsfoto = log
                            .ioriginsfoto = "CARGADA POR EL MOVIL"
                            .xdescinsfoto = descripcion
                            '.xdescinsfoto = fecha
                            .iestatinsfoto = "ACTIVA"
                            .fcreaaipinsfoto = fcreaaipinsfoto
                            '.fcreaaipinsfoto = Date.Now
                            .idseglogreg = 0
                        End With
                        Dim aipinsfotoController As New aipinsfotoController
                        respopera = aipinsfotoController.insaipinsfoto(aipinsfoto)


                        AgregarAipLogEve("Cierre numero " & valores_fotos2(7), idsegmanusu, "MOVIL")

                        'si se guarda la foto de manera exitosa y se indico en la app movil que desea cerrar el caso se pasa la inspeccion al auditor
                        If (respopera.irespuesta = "1" And valores_fotos2(7) = "1") Then

                            Dim vi_aipinsenc2 As New vi_aipinsenc
                            'se busca la inspeccion por estatus en proceso, esto es para no volver a procesarlo en el caso que ya este se encuentre en auditoria
                            vi_aipinsenc2 = vi_aipinsencController.selvi_aipinsencxIdyEstatus(idaipinsenc, "POR PROCESAR")

                            If (vi_aipinsenc2 IsNot Nothing) Then
                                'se virifica si ya se dio un guardar desde la web y se puede cerrar la inspeccion
                                If (vi_aipinsenc2.icerrarinsenc) Then
                                    ''procesa la inspeccion enc para asignar un auditor de forma automatica
                                    respopera = ModificarInspeccionConDistribucionAutomaticaAuditores(idaipinsenc)
                                    'AgregarAipLogEve("Cerrar insp " & valores_fotos2(7), idsegmanusu, "MOVIL")



                                    If (respopera.irespuesta = "1") Then
                                        AgregarAipLogEve("Se envío la inspección nro. " & idaipinsenc & " al auditor de forma automática ", idsegmanusu, "MOVIL")
                                    End If


                                End If
                            End If
                        End If


                        'log_errores(respopera.xmsjtecnico, xrutaraiz)
                    Else
                        File.WriteAllBytes(xrutaraiz & xrutatipoenc & "fallida\" & nombreArchivo, bytefoto)
                    End If
                Else
                    File.WriteAllBytes(xrutaraiz & xrutatipoenc & "fallida\" & nombreArchivo, bytefoto) 'si el serial del carro esta vacio manda a fallida esto no deberia currir
                End If

                'agregar el log de evento
                respopera = AgregarAipLogEve(xnomlogeve, idsegmanusu, "MOVIL")
                If imeimovil <> xcodimmandisp Then
                    respopera = AgregarAipLogEve("Peritaje Serial Motor : " & valores_fotos2(3) & " Imei desde donde se subio la foto " & imeimovil & " " & "es diferente del Imei registrado para el perito " & xcodimmandisp, idsegmanusu, "MOVIL")
                End If
                'fin agregar el log de evento

                Return New HttpResponseMessage() With { _
                     .Content = New StringContent(sb.ToString()) _
                }

            Catch e As Exception
                log_errores(e.Message & " - " & nombreArchivo & " " & lugar, xrutaraiz)
                Return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e)
            End Try
        End Function

        <HttpGet()> _
        Public Function obtener_bytes_imagen() As Byte()



            Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") & "ok\"

            Dim ruta_img As String = "C:\sitfxarchivos\estarseguros20\aipauto\fotosmovil\ajustes_sinientro\ok\insfoto_34_2.jpg"


            Dim xruta_zoom As String = "C:\sitfxarchivos\estarseguros20\aipauto\fotosmovil\ajustes_sinientro\ok\thumbnail\"

            Dim img_byte As Byte() = File.ReadAllBytes(ruta_img)

            redimensionar_imagen(xruta_zoom, 170, 136, "insfoto_34_2.jpg", img_byte)


            Return img_byte
        End Function

        Private Function redimensionar_imagen_marca_agua(xruta_guardar As String, nuevo_ancho As Integer, nueva_altura As Integer, nombre_imagen As String, imagen_bytes As Byte(), marca_agua As Boolean) As Boolean

            'Establezco las nuevas dimensiones de la imagen
            Dim nancho_nuevo As Integer = nuevo_ancho 'nuevo ancho de imagen
            Dim naltura_nueva As Integer = nueva_altura 'nuevo alto de imagen

            'Establezco la ruta donde se guardara la nueva imagen
            Dim imagen_ruta As String = xruta_guardar & nombre_imagen

            'se convierte los bytes a system io stream
            Dim imagen_stream As System.IO.Stream = New System.IO.MemoryStream(imagen_bytes)

            'Creo una nueva imagen basada en la que se esta subiendo
            'Establezco la resolucion a 72 pixeles por pulgada

            Dim imagen_subida As System.Drawing.Bitmap = System.Drawing.Bitmap.FromStream(imagen_stream)
            Dim imagen_nueva As System.Drawing.Bitmap = New System.Drawing.Bitmap(nuevo_ancho, nueva_altura, System.Drawing.Imaging.PixelFormat.Format24bppRgb)
            imagen_nueva.SetResolution(72, 72)


            'Obtengo el ancho y alto de la imagen que se subio
            Dim imagen_subida_ancho As Integer = imagen_subida.Width
            Dim imagen_subida_alto As Integer = imagen_subida.Height
            Dim nuevo_x As Integer = 0
            Dim nuevo_y As Integer = 0
            Dim nreduce As Decimal = 0
            Dim numfont = 0
            Dim posx As Integer = 0
            Dim posy As Integer = 0

            If (marca_agua) Then
                If (nuevo_ancho <= 200) Then
                    numfont = 12
                    posx = 0
                    posy = naltura_nueva - 15
                Else
                    numfont = 18
                    posx = 0
                    posy = naltura_nueva - 30
                End If
            End If

            Dim fontTitle As System.Drawing.Font = New System.Drawing.Font("verdana", numfont, System.Drawing.FontStyle.Bold)
            Dim shadowBrush As System.Drawing.SolidBrush = New System.Drawing.SolidBrush(System.Drawing.Color.FromArgb(85, 255, 255, 255))

            'Centro la imagen en coordenada X,Y
            nuevo_y = Int((nueva_altura - naltura_nueva) / 2)
            nuevo_x = Int((nuevo_ancho - nancho_nuevo) / 2)


            Dim nuevo_grafico As System.Drawing.Graphics = System.Drawing.Graphics.FromImage(imagen_nueva)
            Try
                nuevo_grafico.Clear(System.Drawing.Color.White)
                nuevo_grafico.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias
                nuevo_grafico.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic
                nuevo_grafico.DrawImage(imagen_subida, nuevo_x, nuevo_y, nancho_nuevo, naltura_nueva)

                ''si aplica la marca de agua
                If (marca_agua) Then
                    nuevo_grafico.DrawString("Cargado por la app Web", fontTitle, shadowBrush, posx, posy)
                End If

                CrearCarpeta(xruta_guardar)
                imagen_nueva.Save(imagen_ruta, System.Drawing.Imaging.ImageFormat.Jpeg)
            Catch ex As Exception
                'lbl_error.Text = ex.ToString
            Finally
                'Liberamos los recursos de todas las clases utilizadas
                imagen_subida.Dispose()
                imagen_nueva.Dispose()
                nuevo_grafico.Dispose()
            End Try

            Dim respuesta As Boolean = False
            'imagen_nueva.Save(imagen_ruta, System.Drawing.Imaging.ImageFormat.Jpeg)

            If File.Exists(imagen_ruta) Then
                respuesta = True
            End If

            Return respuesta
        End Function

        Private Function redimensionar_imagen(xruta_guardar As String, nuevo_ancho As Integer, nueva_altura As Integer, nombre_imagen As String, imagen_bytes As Byte()) As Boolean

            'Establezco las nuevas dimensiones de la imagen
            Dim nancho_nuevo As Integer = nuevo_ancho 'nuevo ancho de imagen
            Dim naltura_nueva As Integer = nueva_altura 'nuevo alto de imagen

            'Establezco la ruta donde se guardara la nueva imagen
            Dim imagen_ruta As String = xruta_guardar & nombre_imagen

            'se convierte los bytes a system io stream
            Dim imagen_stream As System.IO.Stream = New System.IO.MemoryStream(imagen_bytes)

            'Creo una nueva imagen basada en la que se esta subiendo
            'Establezco la resolucion a 72 pixeles por pulgada

            Dim imagen_subida As System.Drawing.Bitmap = System.Drawing.Bitmap.FromStream(imagen_stream)
            Dim imagen_nueva As System.Drawing.Bitmap = New System.Drawing.Bitmap(nuevo_ancho, nueva_altura, System.Drawing.Imaging.PixelFormat.Format24bppRgb)
            imagen_nueva.SetResolution(72, 72)


            'Obtengo el ancho y alto de la imagen que se subio
            Dim imagen_subida_ancho As Integer = imagen_subida.Width
            Dim imagen_subida_alto As Integer = imagen_subida.Height
            Dim nuevo_x As Integer = 0
            Dim nuevo_y As Integer = 0
            Dim nreduce As Decimal = 0


            'Centro la imagen en coordenada X,Y
            nuevo_y = Int((nueva_altura - naltura_nueva) / 2)
            nuevo_x = Int((nuevo_ancho - nancho_nuevo) / 2)


            Dim nuevo_grafico As System.Drawing.Graphics = System.Drawing.Graphics.FromImage(imagen_nueva)
            Try
                nuevo_grafico.Clear(System.Drawing.Color.White)
                nuevo_grafico.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias
                nuevo_grafico.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic
                nuevo_grafico.DrawImage(imagen_subida, nuevo_x, nuevo_y, nancho_nuevo, naltura_nueva)
                CrearCarpeta(xruta_guardar)
                imagen_nueva.Save(imagen_ruta, System.Drawing.Imaging.ImageFormat.Jpeg)
            Catch ex As Exception
                'lbl_error.Text = ex.ToString
            Finally
                'Liberamos los recursos de todas las clases utilizadas
                imagen_subida.Dispose()
                imagen_nueva.Dispose()
                nuevo_grafico.Dispose()
            End Try

            Dim respuesta As Boolean = False
            'imagen_nueva.Save(imagen_ruta, System.Drawing.Imaging.ImageFormat.Jpeg)

            If File.Exists(imagen_ruta) Then
                respuesta = True
            End If

            Return respuesta
        End Function

        <HttpGet()> _
        Public Function GirarImagen(idaipinsenc As Decimal, xnomarchinsfoto As String, grados As Decimal) As DownloadFilesResult
            'Grados se envia -90 si se quiere girar a la derecha
            'Grados se envia 90 si se quiere girar a la izquierda
            Try

                Dim aipinsfotoController As New aipinsfotoController
                Dim aipinsfoto As aipinsfoto = aipinsfotoController.selaipinsfotoxidaipinsencyxnomarchinsfoto(idaipinsenc, xnomarchinsfoto)
                Dim DownloadFilesResult As New DownloadFilesResult

                Dim ruta_img_original As String = aipinsfoto.xrutainsfoto & aipinsfoto.xnomarchinsfoto
                Dim ruta_img_zoom As String = aipinsfoto.xrutainsfoto & "zoom\" & aipinsfoto.xnomarchinsfoto
                Dim ruta_img_thumbnail As String = aipinsfoto.xrutainsfoto & "thumbnail\" & aipinsfoto.xnomarchinsfoto

                'se agregan las rutas de las imagenes que se desean girar para ir girando una por una
                'ya que cada una posee dimensiones diferentes
                Dim lista_imagenes As New List(Of String)
                lista_imagenes.Add(ruta_img_original)
                lista_imagenes.Add(ruta_img_zoom)
                lista_imagenes.Add(ruta_img_thumbnail)

                'variables de verificacion de existencia de imagenes giradas
                Dim existe_original As Boolean = False
                Dim existe_zoom As Boolean = False
                Dim existe_thumbnail As Boolean = False

                If lista_imagenes.Count > 0 Then
                    For j As Decimal = 0 To lista_imagenes.Count - 1
                        Dim img_byte As Byte() = File.ReadAllBytes(lista_imagenes(j))

                        'Asignamos imagen original
                        Dim imagen_stream As System.IO.Stream = New System.IO.MemoryStream(img_byte)
                        Dim bmp As System.Drawing.Bitmap = System.Drawing.Bitmap.FromStream(imagen_stream)


                        'Serie de Puntos para conocer las esquinas de la imagen

                        Dim lrg As Single = bmp.Width
                        Dim alt As Single = bmp.Height
                        Dim esq As System.Drawing.Point() = {New System.Drawing.Point(0, 0), New System.Drawing.Point(lrg, 0), New System.Drawing.Point(0, alt), New System.Drawing.Point(lrg, alt)}

                        ' Establece centro del Rectangulo

                        Dim cx As Single = lrg / 2
                        Dim cy As Single = alt / 2
                        Dim i As Long

                        For i = 0 To 3
                            esq(i).X -= cx
                            esq(i).Y -= cy
                        Next i

                        Dim PI As Decimal = 3.1416

                        ' Rotacion.

                        Dim angtheta As Single = Single.Parse(grados) * PI / 180.0
                        Dim sintheta As Single = Math.Sin(angtheta)
                        Dim costheta As Single = Math.Cos(angtheta)
                        Dim X As Single
                        Dim Y As Single

                        For i = 0 To 3
                            X = esq(i).X
                            Y = esq(i).Y
                            esq(i).X = X * costheta + Y * sintheta
                            esq(i).Y = -X * sintheta + Y * costheta
                        Next i

                        ' Translacion X >= 0 and Y >=0 para todas las esquinas.

                        Dim xmin As Single = esq(0).X
                        Dim ymin As Single = esq(0).Y
                        For i = 1 To 3
                            If xmin > esq(i).X Then xmin = esq(i).X
                            If ymin > esq(i).Y Then ymin = esq(i).Y
                        Next i
                        For i = 0 To 3
                            esq(i).X -= xmin
                            esq(i).Y -= ymin
                        Next i

                        ' Crear bitmap de salida y objetco graphics.
                        Dim bmpSalida As New System.Drawing.Bitmap(CInt(-2 * xmin), CInt(-2 * ymin), System.Drawing.Imaging.PixelFormat.Format24bppRgb)
                        bmpSalida.SetResolution(72, 72)
                        Dim grSalida As System.Drawing.Graphics = System.Drawing.Graphics.FromImage(bmpSalida)

                        'Preservar Ultima Esquina
                        ReDim Preserve esq(2)

                        'Pintamos resultado de imagen Girada.
                        grSalida.DrawImage(bmp, esq)
                        bmpSalida.Save(lista_imagenes(j), System.Drawing.Imaging.ImageFormat.Jpeg)

                        'se verifica si cada imagen esta existente y se valida la posicion de la lista para 
                        'alamacenar true o false en la variable perteneciente
                        If j = 0 Then
                            If File.Exists(lista_imagenes(j)) Then
                                existe_original = True
                            End If
                        ElseIf j = 1 Then
                            If File.Exists(lista_imagenes(j)) Then
                                existe_zoom = True
                            End If

                        ElseIf j = 2 Then
                            If File.Exists(lista_imagenes(j)) Then
                                existe_thumbnail = True
                            End If
                        End If
                    Next
                    'se verifica si existe la imagen en la carpeta zoom para devolver sus bytes
                    If existe_zoom Then
                        DownloadFilesResult.ArchivoByte = File.ReadAllBytes(ruta_img_zoom)
                        DownloadFilesResult.Name = aipinsfoto.xnomarchinsfoto
                        DownloadFilesResult.Type = System.IO.Path.GetExtension(ruta_img_zoom)
                    Else
                        DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                        DownloadFilesResult.Name = ""
                        DownloadFilesResult.Type = ""
                    End If

                Else
                    DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                    DownloadFilesResult.Name = ""
                    DownloadFilesResult.Type = ""
                End If

                Return DownloadFilesResult
            Catch ex As Exception
                'MsgBox("Error al Girar Imagen, Error:" & ex.Message, MsgBoxStyle.Critical, "Excepcion")
                Return Nothing

            End Try

        End Function

        'Private Function redimencionar_imagen(xruta_guardar As String, nuevo_ancho As Integer, nueva_altura As Integer, nombre_imagen As String, imagen_bytes As Byte()) As Boolean

        '    'Establezco las nuevas dimensiones de la imagen
        '    Dim nancho_nuevo As Integer = nuevo_ancho 'nuevo ancho de imagen
        '    Dim naltura_nueva As Integer = nueva_altura 'nuevo alto de imagen

        '    'Establezco la ruta donde se guardara la nueva imagen
        '    Dim imagen_ruta As String = xruta_guardar & nombre_imagen

        '    'se convierte los bytes a system io stream
        '    Dim imagen_stream As System.IO.Stream = New System.IO.MemoryStream(imagen_bytes)

        '    'Creo una nueva imagen basada en la que se esta subiendo
        '    'Establezco la resolucion a 72 pixeles por pulgada


        '    'Para obtener la altura proporcional al ancho requerido se realiza la siguiente operacion
        '    '(ancho_deseado * alto_original) / ancho_original
        '    'lo que daria la altura prorporcional al alto de la imagen
        '    Dim imagen_subida As System.Drawing.Bitmap = System.Drawing.Bitmap.FromStream(imagen_stream)
        '    Dim imagen_subida_ancho As Integer = imagen_subida.Width
        '    Dim imagen_subida_alto As Integer = imagen_subida.Height
        '    Dim alto_proporcional = (nuevo_ancho * imagen_subida_alto) / imagen_subida_ancho

        '    'se verifica si la altuna enviada es mayor o menor que la altura proporcional
        '    'se hace esto para evitar descuadrar la imagen en su forma
        '    If alto_proporcional <> nueva_altura Then
        '        nueva_altura = alto_proporcional
        '    End If


        '    imagen_subida.GetThumbnailImage(nancho_nuevo, naltura_nueva, Nothing, IntPtr.Zero)
        '    Dim imagen_nueva As System.Drawing.Bitmap = New System.Drawing.Bitmap(nancho_nuevo, nueva_altura, System.Drawing.Imaging.PixelFormat.Format24bppRgb)

        '    imagen_nueva.SetResolution(72, 72)


        '    'Obtengo el ancho y alto de la imagen que se subio

        '    Dim nuevo_x As Integer = 0
        '    Dim nuevo_y As Integer = 0
        '    Dim nreduce As Decimal = 0

        '    'tomando en cuenta su ancho y alto original para no descomponerla en calidad del todo y
        '    'hacerlo cuidadosamente.



        '    Dim nuevo_grafico As System.Drawing.Graphics = System.Drawing.Graphics.FromImage(imagen_nueva)
        '    Try
        '        nuevo_grafico.Clear(System.Drawing.Color.White)
        '        nuevo_grafico.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias
        '        nuevo_grafico.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic
        '        nuevo_grafico.DrawImage(imagen_subida, nuevo_x, nuevo_y, nancho_nuevo, naltura_nueva)
        '        imagen_nueva.Save(imagen_ruta, System.Drawing.Imaging.ImageFormat.Jpeg)
        '    Catch ex As Exception
        '        'lbl_error.Text = ex.ToString
        '    Finally
        '        'Liberamos los recursos de todas las clases utilizadas
        '        imagen_subida.Dispose()
        '        imagen_nueva.Dispose()
        '        nuevo_grafico.Dispose()
        '    End Try






        '    Dim respuesta As Boolean = False
        '    'imagen_nueva.Save(imagen_ruta, System.Drawing.Imaging.ImageFormat.Jpeg)

        '    If File.Exists(imagen_ruta) Then
        '        respuesta = True
        '    End If

        '    Return respuesta
        'End Function

        'Private Function salvar_imagen(idarticulo As Decimal, nuevo_ancho As Integer, nueva_altura As Integer, nombre_imagen_con_ext As String, imagen_stream As System.IO.Stream) As String
        '    'Establezco las nuevas dimensiones de la imagen
        '    Dim nancho_nuevo As Integer = nuevo_ancho 'nuevo ancho de imagen
        '    Dim naltura_nueva As Integer = nueva_altura 'nuevo alto de imagen
        '    'Extraigo el nombre del archivo sin la extension
        '    Dim nombre_imagen_sin_ext As String = Mid(nombre_imagen_con_ext, 1, (InStr(nombre_imagen_con_ext, ".") - 1))
        '    'Remuevo caracteres especiales en la imagen si estos existen
        '    nombre_imagen_sin_ext = cadenas.remover_caracteres_especiales(nombre_imagen_sin_ext)
        '    'Esta funcion crea el directorio si no existe
        '    directorios.crear(MapPath("~/imagenes/articulos/" & idarticulo & "/presentaciones/" & nuevo_ancho & "x" & nueva_altura & "/"))
        '    'Establezco la ruta donde se guardara la nueva imagen
        '    Dim imagen_ruta As String = "~/imagenes/articulos/" & idarticulo & "/presentaciones/" & nuevo_ancho & "x" & nueva_altura & "/" & nombre_imagen_sin_ext & ".png"
        '    'Creo una nueva imagen basada en la que se esta subiendo
        '    'Establezco la resolucion a 72 pixeles por pulgada
        '    Dim imagen_subida As System.Drawing.Bitmap = System.Drawing.Bitmap.FromStream(imagen_stream)
        '    Dim imagen_nueva As System.Drawing.Bitmap = New System.Drawing.Bitmap(nancho_nuevo, naltura_nueva, System.Drawing.Imaging.PixelFormat.Format24bppRgb)
        '    imagen_nueva.SetResolution(72, 72)
        '    'Obtengo el ancho y alto de la imagen que se subio
        '    Dim imagen_subida_ancho As Integer = imagen_subida.Width
        '    Dim imagen_subida_alto As Integer = imagen_subida.Height
        '    Dim nuevo_x As Integer = 0
        '    Dim nuevo_y As Integer = 0
        '    Dim nreduce As Decimal
        '    'Trato de mantener el aspecto de la imagen al comprimirla con su posicion X y Y centrada
        '    'tomando en cuenta su ancho y alto original para no descomponerla en calidad del todo y
        '    'hacerlo cuidadosamente.


        '    'Se verifica si igualando el ancho de la imagen subida con el ancho de la imagen resultado queda bien cuadrado
        '    nancho_nuevo = nuevo_ancho
        '    'Calculo la reduccion del ancho de la imagen
        '    nreduce = nancho_nuevo / imagen_subida_ancho
        '    'Calculo la altura basada en la reduccion del ancho para intentar no perder calidad
        '    naltura_nueva = Int(imagen_subida_alto * nreduce)
        '    'Si no queda bien cuadrado (la imagen es muy alta) -> Se verifica si igualando el alto de la imagen subida con el alto de la imagen resultado queda bien cuadrado
        '    If naltura_nueva > nueva_altura Then
        '        naltura_nueva = nueva_altura
        '        'Calculo la reduccion del alto de la imagen
        '        nreduce = naltura_nueva / imagen_subida_alto
        '        'Calculo el ancho basada en la reduccion del alto para intentar no perder calidad
        '        nancho_nuevo = Int(imagen_subida_ancho * nreduce)
        '    End If
        '    'Centro la imagen en coordenada X,Y
        '    nuevo_y = Int((nueva_altura - naltura_nueva) / 2)
        '    nuevo_x = Int((nuevo_ancho - nancho_nuevo) / 2)

        '    'Ahora creo una nueva imagen basada en la imagen que se esta subiendo con la clase Graphics
        '    'Limpio la imagen anterior y realizo unos ajustes a nivel grafico para mantener lo mas que se pueda la calidad
        '    'Ahora monto la nueva imagen creada y calculada anteriormente con el metodo DrawImage y la salvo
        '    Dim nuevo_grafico As System.Drawing.Graphics = System.Drawing.Graphics.FromImage(imagen_nueva)
        '    Try
        '        nuevo_grafico.Clear(System.Drawing.Color.White)
        '        nuevo_grafico.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias
        '        nuevo_grafico.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic
        '        nuevo_grafico.DrawImage(imagen_subida, nuevo_x, nuevo_y, nancho_nuevo, naltura_nueva)
        '        imagen_nueva.Save(MapPath(imagen_ruta), System.Drawing.Imaging.ImageFormat.Jpeg)
        '    Catch ex As Exception
        '        'lbl_error.Text = ex.ToString
        '    Finally
        '        'Liberamos los recursos de todas las clases utilizadas
        '        imagen_subida.Dispose()
        '        imagen_nueva.Dispose()
        '        nuevo_grafico.Dispose()
        '    End Try
        '    '
        '    Return imagen_ruta
        'End Function


        'verificar metodo
        <HttpGet()> _
        Public Function ObtenerInspeccionFotoPorPos(idaipinsenc As Decimal, nsecinsfoto As Short) As DownloadFilesResult
            Try

                '                 idaipinsenc As Decimal, nsecinsfoto As Short
                'Dim idaipinsenc As Decimal = 3
                'Dim nsecinsfoto As Short = 1

                Dim vi_aipinsfotoController As New vi_aipinsfotoController
                Dim vi_aipinsfoto As vi_aipinsfoto = vi_aipinsfotoController.selvi_aipinsfotoxidaipinsencynsecinsfoto(idaipinsenc, nsecinsfoto)
                Dim DownloadFilesResult As New DownloadFilesResult

                If vi_aipinsfoto IsNot Nothing Then
                    Dim xrutatipoenc As String = ""
                    Select Case vi_aipinsfoto.itipoinsenc
                        Case "SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\suscripcion\ok\"
                        Case "SINIESTRO"
                            xrutatipoenc = "fotosmovil\siniestro\ok\"
                        Case "RESTOS Y SALVAMENTO"
                            xrutatipoenc = "fotosmovil\restos_salvamento\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\limpieza_siniestro\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\limpieza_suscripcion\ok\"
                        Case "AJUSTES POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\ajustes_sinientro\ok\"
                        Case "AJUSTES POR ANEXO"
                            xrutatipoenc = "fotosmovil\ajustes_anexo\ok\"
                    End Select

                    Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '

                    Dim xruta As String = xrutaraiz & xrutatipoenc & vi_aipinsfoto.xnomarchinsfoto
                    'Return File.ReadAllBytes(xruta)

                    'DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")

                    If File.Exists(xruta) Then
                        DownloadFilesResult.ArchivoByte = File.ReadAllBytes(xruta)
                        DownloadFilesResult.Name = vi_aipinsfoto.xnomarchinsfoto
                        DownloadFilesResult.Type = System.IO.Path.GetExtension(xruta)
                    Else
                        DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                        DownloadFilesResult.Name = ""
                        DownloadFilesResult.Type = ""
                    End If
                Else
                    DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                    DownloadFilesResult.Name = ""
                    DownloadFilesResult.Type = ""
                End If

                Return DownloadFilesResult

            Catch ex As Exception
                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                DownloadFilesResult.Name = ""
                DownloadFilesResult.Type = ""
                Return DownloadFilesResult
            End Try
        End Function

        <HttpGet()> _
        Public Function ObtenerInspeccionFotoPorEncyNombFoto(idaipinsenc As Decimal, xnomarchinsfoto As String) As DownloadFilesResult
            Try

                Dim vi_aipinsfotoController As New vi_aipinsfotoController
                Dim vi_aipinsfoto As vi_aipinsfoto = vi_aipinsfotoController.selaipinsfotoxidaipinsencyxnomarchinsfoto(idaipinsenc, xnomarchinsfoto)
                Dim DownloadFilesResult As New DownloadFilesResult

                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '

                If vi_aipinsfoto IsNot Nothing Then


                    Dim xrutatipoenc As String = ""
                    Select Case vi_aipinsfoto.itipoinsenc
                        Case "SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\suscripcion\ok\"
                        Case "SINIESTRO"
                            xrutatipoenc = "fotosmovil\siniestro\ok\"
                        Case "RESTOS Y SALVAMENTO"
                            xrutatipoenc = "fotosmovil\restos_salvamento\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\limpieza_siniestro\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\limpieza_suscripcion\ok\"
                        Case "AJUSTES POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\ajustes_sinientro\ok\"
                        Case "AJUSTES POR ANEXO"
                            xrutatipoenc = "fotosmovil\ajustes_anexo\ok\"
                    End Select

                    'Dim xruta As String = xrutaraiz & xrutatipoenc & vi_aipinsfoto.xnomarchinsfoto

                    Dim xrutainsfoto_zoom As String = xrutaraiz & xrutatipoenc & "zoom\" & vi_aipinsfoto.xnomarchinsfoto


                    If File.Exists(xrutainsfoto_zoom) Then
                        DownloadFilesResult.ArchivoByte = File.ReadAllBytes(xrutainsfoto_zoom)
                        DownloadFilesResult.Name = vi_aipinsfoto.xnomarchinsfoto
                        DownloadFilesResult.Type = System.IO.Path.GetExtension(xrutainsfoto_zoom)
                    Else
                        DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                        DownloadFilesResult.Name = ""
                        DownloadFilesResult.Type = ""
                    End If
                Else
                    DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                    DownloadFilesResult.Name = ""
                    DownloadFilesResult.Type = ""
                End If

                Return DownloadFilesResult

            Catch ex As Exception
                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                DownloadFilesResult.Name = ""
                DownloadFilesResult.Type = ""
                Return DownloadFilesResult
            End Try
        End Function


        'verificar metodo
        <HttpGet()> _
        Public Function ObtenerInspeccionFotoPorInspeccionEnc(idaipinsenc As Decimal) As List(Of DownloadFilesResult)
            Try

                '                 idaipinsenc As Decimal, nsecinsfoto As Short
                'Dim idaipinsenc As Decimal = 3
                'Dim nsecinsfoto As Short = 1

                Dim vi_aipinsfotoController As New vi_aipinsfotoController
                Dim lista_vi_aipinsfoto As List(Of vi_aipinsfoto) = vi_aipinsfotoController.selvi_aipinsfotoxidaipinsenc(idaipinsenc)
                Dim DownloadFilesResult As New DownloadFilesResult
                Dim lista_DownloadFilesResult As New List(Of DownloadFilesResult)

                If lista_vi_aipinsfoto.Count > 0 Then
                    Dim xrutatipoenc As String = ""
                    For i As Integer = 0 To lista_vi_aipinsfoto.Count - 1
                        'se realiza la busqueda de las imagenes en la carpeta thumbnail(miniaturas)
                        Select Case lista_vi_aipinsfoto(i).itipoinsenc
                            Case "SUSCRIPCION"
                                xrutatipoenc = "fotosmovil\suscripcion\ok\thumbnail\"
                            Case "SINIESTRO"
                                xrutatipoenc = "fotosmovil\siniestro\ok\thumbnail\"
                            Case "RESTOS Y SALVAMENTO"
                                xrutatipoenc = "fotosmovil\restos_salvamento\ok\thumbnail\"
                            Case "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
                                xrutatipoenc = "fotosmovil\limpieza_siniestro\ok\thumbnail\"
                            Case "LIMPIEZA DE DAÑOS POR SINIESTRO"
                                xrutatipoenc = "fotosmovil\limpieza_suscripcion\ok\thumbnail\"
                            Case "AJUSTES POR SINIESTRO"
                                xrutatipoenc = "fotosmovil\ajustes_sinientro\ok\thumbnail\"
                            Case "AJUSTES POR ANEXO"
                                xrutatipoenc = "fotosmovil\ajustes_anexo\ok\thumbnail\"
                        End Select

                        Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '

                        Dim xruta As String = xrutaraiz & xrutatipoenc & lista_vi_aipinsfoto(i).xnomarchinsfoto
                        'Return File.ReadAllBytes(xruta)

                        'DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")

                        If File.Exists(xruta) Then
                            DownloadFilesResult.ArchivoByte = File.ReadAllBytes(xruta)
                            DownloadFilesResult.Name = lista_vi_aipinsfoto(i).xnomarchinsfoto
                            DownloadFilesResult.Type = System.IO.Path.GetExtension(xruta)
                            lista_DownloadFilesResult.Add(New DownloadFilesResult() With { _
                .ArchivoByte = DownloadFilesResult.ArchivoByte, _
            .Name = DownloadFilesResult.Name, _
            .Type = DownloadFilesResult.Type _
            })
                        Else
                            DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                            DownloadFilesResult.Name = ""
                            DownloadFilesResult.Type = ""
                            lista_DownloadFilesResult.Add(New DownloadFilesResult() With { _
                .ArchivoByte = DownloadFilesResult.ArchivoByte, _
            .Name = DownloadFilesResult.Name, _
            .Type = DownloadFilesResult.Type _
            })
                        End If
                    Next

                Else
                    DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                    DownloadFilesResult.Name = ""
                    DownloadFilesResult.Type = ""

                    lista_DownloadFilesResult.Add(New DownloadFilesResult() With { _
        .ArchivoByte = DownloadFilesResult.ArchivoByte, _
    .Name = DownloadFilesResult.Type, _
    .Type = DownloadFilesResult.Type _
    })
                End If


                Return lista_DownloadFilesResult

            Catch ex As Exception
                Dim DownloadFilesResult As New DownloadFilesResult
                Dim lista_DownloadFilesResult As New List(Of DownloadFilesResult)
                DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                DownloadFilesResult.Name = ""
                DownloadFilesResult.Type = ""

                lista_DownloadFilesResult.Add(New DownloadFilesResult() With { _
    .ArchivoByte = Convert.FromBase64String(""), _
.Name = "", _
.Type = "" _
})

                Return lista_DownloadFilesResult
            End Try
        End Function

        <HttpPost()> _
        Public Function EliminarFotoInspeccion(idaipinsenc As Decimal, xnomarchinsfoto As String) As respopera

            Dim respopera As New respopera
            Try

                Dim vi_aipinsfotoController As New vi_aipinsfotoController

                Dim vi_aipinsfoto As vi_aipinsfoto = vi_aipinsfotoController.selvi_aipinsfotoxididaipinsencandxnomarchinsfoto(idaipinsenc, xnomarchinsfoto)
                Dim xruta As String = ""
                Dim xruta_zoom As String = ""
                Dim xruta_thumbnail As String = ""

                If (vi_aipinsfoto IsNot Nothing) Then

                    Using tran1 As New TransactionScope

                        Dim aipinsfotoController As New aipinsfotoController
                        respopera = aipinsfotoController.eliaipinsfoto(vi_aipinsfoto.idaipinsfoto)

                        If (respopera.irespuesta = "1") Then
                            xruta = vi_aipinsfoto.xrutainsfoto & vi_aipinsfoto.xnomarchinsfoto
                            xruta_zoom = vi_aipinsfoto.xrutainsfoto & "zoom\" & vi_aipinsfoto.xnomarchinsfoto
                            xruta_thumbnail = vi_aipinsfoto.xrutainsfoto & "thumbnail\" & vi_aipinsfoto.xnomarchinsfoto
                            If (File.Exists(xruta)) Then
                                File.Delete(xruta)
                                If (File.Exists(xruta_zoom)) Then
                                    File.Delete(xruta_zoom)
                                    If (File.Exists(xruta_thumbnail)) Then
                                        File.Delete(xruta_thumbnail)
                                    End If
                                End If
                            End If

                            tran1.Complete()
                            'Else
                            '    respopera.irespuesta = "0"
                            '    respopera.xmsjusuario = "Ha ocurrido un error al intentar eliminar la imagen"
                            '    respopera.xmsjusuario = "Error al eliminar la imagen " & xnomarchinsfoto & " idaipinsenc: " & idaipinsenc.ToString()
                            'End If

                        End If

                    End Using

                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "Ha ocurrido un error al intentar buscar la imagen"
                    respopera.xmsjusuario = "Error al buscar la imagen " & xnomarchinsfoto & " idaipinsenc: " & idaipinsenc.ToString()
                End If

                Return respopera
            Catch ex As Exception
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:EliminarFotoInspeccion ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function EliminarFotoInspeccion2(idaipinsenc As Decimal, xnomarchinsfoto As String, idsegmanusu As Decimal) As respopera

            Dim respopera As New respopera
            Try

                'verifico que el perfil del usuario sea perito sino no dejo eliminar la foto
                Dim vi_segusudetperf2 As New vi_segusudetperf2
                Dim vi_segusudetperf2Controller As New vi_segusudetperf2Controller
                vi_segusudetperf2 = vi_segusudetperf2Controller.selvi_segusudetperf2poridsegmanusu(idsegmanusu)
                If (vi_segusudetperf2 IsNot Nothing) Then
                    Dim peritoext As Decimal = ConfigurationManager.AppSettings("peritoext")
                    Dim peritols As Decimal = ConfigurationManager.AppSettings("peritols")
                    Dim peritoint As Decimal = ConfigurationManager.AppSettings("peritoint")

                    If vi_segusudetperf2.idsegmanperf = peritoext Or vi_segusudetperf2.idsegmanperf = peritols Or vi_segusudetperf2.idsegmanperf = peritoint Then
                        Dim vi_aipinsfotoController As New vi_aipinsfotoController

                        Dim vi_aipinsfoto As vi_aipinsfoto = vi_aipinsfotoController.selvi_aipinsfotoxididaipinsencandxnomarchinsfoto(idaipinsenc, xnomarchinsfoto)
                        Dim xruta As String = ""
                        Dim xruta_zoom As String = ""
                        Dim xruta_thumbnail As String = ""

                        If (vi_aipinsfoto IsNot Nothing) Then

                            Using tran1 As New TransactionScope

                                Dim aipinsfotoController As New aipinsfotoController
                                respopera = aipinsfotoController.eliaipinsfoto(vi_aipinsfoto.idaipinsfoto)

                                If (respopera.irespuesta = "1") Then
                                    xruta = vi_aipinsfoto.xrutainsfoto & vi_aipinsfoto.xnomarchinsfoto
                                    xruta_zoom = vi_aipinsfoto.xrutainsfoto & "zoom\" & vi_aipinsfoto.xnomarchinsfoto
                                    xruta_thumbnail = vi_aipinsfoto.xrutainsfoto & "thumbnail\" & vi_aipinsfoto.xnomarchinsfoto
                                    If (File.Exists(xruta)) Then
                                        File.Delete(xruta)
                                        If (File.Exists(xruta_zoom)) Then
                                            File.Delete(xruta_zoom)
                                            If (File.Exists(xruta_thumbnail)) Then
                                                File.Delete(xruta_thumbnail)
                                            End If
                                        End If
                                    End If

                                    tran1.Complete()
                                    'Else
                                    '    respopera.irespuesta = "0"
                                    '    respopera.xmsjusuario = "Ha ocurrido un error al intentar eliminar la imagen"
                                    '    respopera.xmsjusuario = "Error al eliminar la imagen " & xnomarchinsfoto & " idaipinsenc: " & idaipinsenc.ToString()
                                    'End If

                                End If

                            End Using

                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "Ha ocurrido un error al intentar buscar la imagen"
                            respopera.xmsjusuario = "Error al buscar la imagen " & xnomarchinsfoto & " idaipinsenc: " & idaipinsenc.ToString()
                        End If

                    Else
                        respopera.irespuesta = "0"
                        respopera.xmsjusuario = "No tiene permiso para poder eliminar fotos"
                        respopera.xmsjusuario = "No tiene permiso para poder eliminar fotos"
                    End If
                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "No tiene permiso para poder eliminar fotos"
                    respopera.xmsjusuario = "No tiene permiso para poder eliminar fotos"
                End If
                Return respopera
            Catch ex As Exception
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:EliminarFotoInspeccion2 ", ex)
                Return respopera
            End Try
        End Function



        


        <HttpPost()> _
        Public Function ModificarAipInsEncPorId(aipinsenc As aipinsenc) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "directo"
                param1.ParameterName = "p_illamada"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = aipinsenc.idaipinsenc
                param8.ParameterName = "p_idaipinsenc"
                'param8.Direction = ParameterDirection.InputOutput
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_rnaprobarinspeccionporauditar @p_illamada,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinsenc", param1, param2, param3, param4, param5, param6, param7, param8)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                'If IsNumeric(param8.Value) = True Then
                '    respopera.id = Int(param8.Value)
                'End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ModificarAipInsEncPorId ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ModificarTodasAipInsEnc() As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "directo"
                param1.ParameterName = "p_illamada"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = 0
                param8.ParameterName = "p_idseglogreg"
                param8.Direction = ParameterDirection.InputOutput
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_rnaprobarinspeccionporauditar @p_illamada,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idseglogreg output", param1, param2, param3, param4, param5, param6, param7, param8)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                'If IsNumeric(param8.Value) = True Then
                '    respopera.id = Int(param8.Value)
                'End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ModificarTodasAipInsEnc ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo
        <HttpPost()> _
        Public Function AprobarInspeccionPorAuditar(idaipinsenc As Decimal) As respopera
            Try
                Dim aipinsencController As New aipinsencController
                Dim aipinsenc As aipinsenc = aipinsencController.selaipinsencxidporauditar(idaipinsenc)
                Dim respopera As New respopera


                'respopera = ModificarAipInsEncPorId(aipinsenc) '-->verificar

                'verificar que hace este proceso, aqui faltaria el valor de fecha de aprobacion si aplica
                If aipinsenc IsNot Nothing Then
                    aipinsenc.iestatinsenc = "APROBADA"
                    Dim respopera2 As respopera = aipinsencController.modaipinsenc(aipinsenc)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro esta inspección para ser aprobada"
                    respopera.xmsjtecnico = "La inspección # " & idaipinsenc.ToString & " no se encuentra en estatus (POR AUDITAR)"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AprobarInspeccionPorAuditar ", ex)
                Return respopera
            End Try
        End Function

        ''desarrollar metodo veriricar que objeto devolver dado que pueden haber errores no de todos, esprobable que este sea un store desarrolador por hugo
        '<HttpPost()> _
        'Public Function AprobarTodasInspeccionesPorAuditar() As respopera
        '    Try
        '        Dim aipinsencController As New aipinsencController
        '        Dim lista_aipinsenc As List(Of aipinsenc) = aipinsencController.selaipinsencporauditar()

        '        Dim respopera As New respopera

        '        If lista_aipinsenc.Count > 0 Then
        '            Dim respopera2 As respopera
        '            If lista_aipinsenc.Count > 0 Then
        '                For i As Integer = 0 To lista_aipinsenc.Count - 1
        '                    lista_aipinsenc(i).iestatinsenc = "PROCEDENTE"
        '                    respopera2 = aipinsencController.modaipinsenc(lista_aipinsenc(i))
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id
        '                Next
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ninguna inspección para ser aprobada"
        '            respopera.xmsjtecnico = " no se encuentra ninguna inspección en estatus (POR AUDITAR)"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function


        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function AprobarTodasInspeccionesPorAuditar() As respopera
            Try
                Dim aipinsencController As New aipinsencController
                Dim lista_aipinsenc As List(Of aipinsenc) = aipinsencController.selaipinsencporauditar
                Dim respopera As New respopera

                'respopera = ModificarTodasAipInsEnc() '-->verificar

                'verificar que hace este proceso, aqui faltaria el valor de fecha de aprobacion si aplica
                If lista_aipinsenc.Count > 0 Then
                    Dim respopera2 As respopera
                    If lista_aipinsenc.Count > 0 Then
                        For i As Integer = 0 To lista_aipinsenc.Count - 1
                            lista_aipinsenc(i).iestatinsenc = "APROBADA"
                            respopera2 = aipinsencController.modaipinsenc(lista_aipinsenc(i))
                            respopera.irespuesta = respopera.irespuesta
                            respopera.xmsjusuario = respopera.xmsjusuario
                            respopera.xmsjtecnico = respopera.xmsjtecnico
                            respopera.id = respopera.id
                        Next
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun sistemas de seguridad electrónico"
                    respopera.xmsjtecnico = "la lista lista_aipinssussse llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AprobarTodasInspeccionesPorAuditar ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function AprobarTodasInspeccionesPorAuditarPorAudit(idsegmanusuaudit As Decimal) As respopera
            Try
                Dim aipinsencController As New aipinsencController
                Dim lista_aipinsenc As List(Of aipinsenc) = aipinsencController.selaipinsencporauditarporauditor(idsegmanusuaudit)
                Dim respopera As New respopera

                'If (lista_aipinsenc.Count > 0) Then

                'End If

                'respopera = ModificarTodasAipInsEnc() '-->verificar

                If lista_aipinsenc.Count > 0 Then
                    Dim respopera2 As respopera
                    If lista_aipinsenc.Count > 0 Then
                        For i As Integer = 0 To lista_aipinsenc.Count - 1
                            lista_aipinsenc(i).iestatinsenc = "PROCEDENTE"
                            respopera2 = aipinsencController.modaipinsenc(lista_aipinsenc(i))
                            respopera.irespuesta = respopera2.irespuesta
                            respopera.xmsjusuario = respopera2.xmsjusuario
                            respopera.xmsjtecnico = respopera2.xmsjtecnico
                            respopera.id = respopera2.id
                        Next
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontraron inspecciones para aprobar."
                    respopera.xmsjtecnico = "la lista lista_aipinssussse llego sin registros"
                    respopera.id = 0
                End If


                If (respopera.irespuesta = "1") Then
                    respopera.xmsjusuario = "Se aprobaron todas las inspecciones satisfactoriamente."
                End If
                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AprobarTodasInspeccionesPorAuditarPorAudit ", ex)
                Return respopera
            End Try
        End Function

        ''desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ActualizarInspeccionSusSse(lista_aipinssussse As List(Of aipinssussse)) As respopera
        '    Try
        '        Dim aipinssussseController As New aipinssussseController
        '        Dim respopera As New respopera

        '        If lista_aipinssussse.Count > 0 Then
        '            Dim respopera2 As respopera
        '            If lista_aipinssussse.Count > 0 Then
        '                For i As Integer = 0 To lista_aipinssussse.Count - 1
        '                    'lista_aipinssussse(i).iestatinsenc = "PROCEDENTE"
        '                    respopera2 = aipinssussseController.modaipinssussse(lista_aipinssussse(i))
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id
        '                Next
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ningun sistemas de seguridad electrónico"
        '            respopera.xmsjtecnico = "la lista lista_aipinssussse llego sin registros"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ActualizarInspeccionSusSse(lista_aipinssussse As List(Of aipinssussse)) As respopera
        '    Try
        '        Dim aipinssussseController As New aipinssussseController
        '        Dim respopera As New respopera

        '        If lista_aipinssussse.Count > 0 Then
        '            Dim respopera2 As respopera
        '            If lista_aipinssussse.Count > 0 Then
        '                For i As Integer = 0 To lista_aipinssussse.Count - 1
        '                    'lista_aipinssussse(i).iestatinsenc = "PROCEDENTE"
        '                    respopera2 = aipinssussseController.modaipinssussse(lista_aipinssussse(i))
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id
        '                Next
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ningun sistemas de seguridad electrónico"
        '            respopera.xmsjtecnico = "la lista lista_aipinssussse llego sin registros"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function
        <HttpPost()> _
        Public Function ActualizarInspeccionSusSse(lista_vi_aipinssussse As List(Of vi_aipinssussse)) As respopera
            Try
                'Dim aipinssussseController As New aipinssussseController
                Dim respopera As New respopera

                If lista_vi_aipinssussse IsNot Nothing Then
                    If lista_vi_aipinssussse.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinssussse.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinssussse.Count - 1
                                'lista_aipinssussse(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsSusSse(lista_vi_aipinssussse(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registros actualizado con éxito"
                            respopera.xmsjtecnico = "Registros actualizado con éxito"
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun sistemas de seguridad electrónico"
                        respopera.xmsjtecnico = "la lista lista_aipinssussse llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun sistemas de seguridad electrónico"
                    respopera.xmsjtecnico = "la lista lista_aipinssussse llego sin registros"
                    respopera.id = 0
                End If
                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarInspeccionSusSse ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ActualizarInspeccionSusSsm(lista_aipinssusssm As List(Of aipinssusssm)) As respopera
        '    Try
        '        Dim aipinssusssmController As New aipinssusssmController
        '        Dim respopera As New respopera

        '        If lista_aipinssusssm.Count > 0 Then
        '            Dim respopera2 As respopera
        '            If lista_aipinssusssm.Count > 0 Then
        '                For i As Integer = 0 To lista_aipinssusssm.Count - 1
        '                    'lista_aipinssusssm(i).iestatinsenc = "PROCEDENTE"
        '                    respopera2 = aipinssusssmController.modaipinssusssm(lista_aipinssusssm(i))
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id
        '                Next
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ningun sistemas de seguridad mecánica"
        '            respopera.xmsjtecnico = "la lista lista_aipinssusssm llego sin registros"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function ActualizarInspeccionSusSsm(lista_vi_aipinssusssm As List(Of vi_aipinssusssm)) As respopera
            Try
                'Dim aipinssusssmController As New aipinssusssmController
                Dim respopera As New respopera
                If lista_vi_aipinssusssm IsNot Nothing Then
                    If lista_vi_aipinssusssm.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinssusssm.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinssusssm.Count - 1
                                'lista_aipinssusssm(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsSusSsm(lista_vi_aipinssusssm(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registros actualizado con éxito"
                            respopera.xmsjtecnico = "Registros actualizado con éxito"
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun sistemas de seguridad mecánica"
                        respopera.xmsjtecnico = "la lista lista_aipinssusssm llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun sistemas de seguridad mecánica"
                    respopera.xmsjtecnico = "la lista lista_aipinssusssm llego sin registros"
                    respopera.id = 0
                End If
                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarInspeccionSusSsm ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarInspeccionSusAcc(lista_vi_aipinssusacc As List(Of vi_aipinssusacc)) As respopera
            Try
                'Dim aipinssusaccController As New aipinssusaccController
                Dim respopera As New respopera

                If lista_vi_aipinssusacc IsNot Nothing Then
                    If lista_vi_aipinssusacc.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinssusacc.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinssusacc.Count - 1
                                'lista_aipinssusacc(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsSusAcc(lista_vi_aipinssusacc(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registros actualizado con éxito"
                            respopera.xmsjtecnico = "Registros actualizado con éxito"
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun accesorio"
                        respopera.xmsjtecnico = "la lista lista_aipinssusacc llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun accesorio"
                    respopera.xmsjtecnico = "la lista lista_aipinssusacc llego sin registros"
                    respopera.id = 0
                End If
                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarInspeccionSusAcc ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function ActualizarInspeccionSusRepuEstadGen(lista_vi_aipinssusrepuest As List(Of vi_aipinssusrepuest)) As respopera
            Try
                Dim vi_aipinssusrepuestController As New vi_aipinssusrepuestController
                Dim respopera As New respopera

                If lista_vi_aipinssusrepuest IsNot Nothing Then
                    If lista_vi_aipinssusrepuest.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinssusrepuest.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinssusrepuest.Count - 1
                                'lista_aipinssusrepuest(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsSusRepuest(lista_vi_aipinssusrepuest(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registros actualizado con éxito"
                            respopera.xmsjtecnico = "Registros actualizado con éxito"
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun repuesto"
                        respopera.xmsjtecnico = "la lista lista_aipinssusrepuest llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinssusrepuest llego sin registros"
                    respopera.id = 0
                End If
                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarInspeccionSusRepuEstadGen ", ex)
                Return respopera
            End Try
        End Function


        <HttpPost()> _
        Public Function ActualizarInspeccionInfoComplementaria(lista_vi_aipinssusinfcomp As List(Of vi_aipinssusinfcomp)) As respopera
            Try
                'Dim aipinssusaccController As New aipinssusaccController
                Dim respopera As New respopera
                If lista_vi_aipinssusinfcomp IsNot Nothing Then
                    If lista_vi_aipinssusinfcomp.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinssusinfcomp.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinssusinfcomp.Count - 1
                                'lista_aipinssusacc(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsSusInfComp(lista_vi_aipinssusinfcomp(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registros actualizado con éxito"
                            respopera.xmsjtecnico = "Registros actualizado con éxito"
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontró ninguna información adicional"
                        respopera.xmsjtecnico = "la lista lista_vi_aipinssusinfcomp llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontró ninguna información adicional"
                    respopera.xmsjtecnico = "la lista lista_vi_aipinssusinfcomp llego sin registros"
                    respopera.id = 0
                End If
                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarInspeccionInfoComplementaria ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ActualizarInspeccionSusMotivos(lista_aipinssusmotiv As List(Of aipinssusmotiv)) As respopera
        '    Try
        '        Dim aipinssusmotivController As New aipinssusmotivController
        '        Dim respopera As New respopera

        '        If lista_aipinssusmotiv.Count > 0 Then
        '            Dim respopera2 As respopera
        '            If lista_aipinssusmotiv.Count > 0 Then
        '                For i As Integer = 0 To lista_aipinssusmotiv.Count - 1
        '                    'lista_aipinssusmotiv(i).iestatinsenc = "PROCEDENTE"
        '                    respopera2 = aipinssusmotivController.modaipinssusmotiv(lista_aipinssusmotiv(i))
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id
        '                Next
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ningun motivo de la inspección:"
        '            respopera.xmsjtecnico = "la lista lista_aipinssusmotiv llego sin registros"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function
        <HttpPost()> _
        Public Function ActualizarInspeccionSusMotivos(lista_vi_aipinssusmotiv As List(Of vi_aipinssusmotiv)) As respopera
            Try
                Dim vi_aipinssusmotivController As New vi_aipinssusmotivController
                Dim respopera As New respopera

                If lista_vi_aipinssusmotiv IsNot Nothing Then
                    If lista_vi_aipinssusmotiv.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinssusmotiv.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinssusmotiv.Count - 1
                                'lista_aipinssusmotiv(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsSusMotiv(lista_vi_aipinssusmotiv(i))

                                If (respopera2.irespuesta = "1") Then
                                    If (lista_vi_aipinssusmotiv(i).itilinssusmotiv = True) Then
                                        Dim aipinsencController As New aipinsencController
                                        Dim aipinsenc As aipinsenc = aipinsencController.selaipinsencxid(lista_vi_aipinssusmotiv(i).idaipinsenc)
                                        If (aipinsenc IsNot Nothing) Then
                                            aipinsenc.idaipinsmotiv = lista_vi_aipinssusmotiv(i).idaipinsmotiv
                                            aipinsencController.modaipinsenc(aipinsenc)
                                        End If
                                    End If
                                End If


                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registros actualizado con éxito"
                            respopera.xmsjtecnico = "Registros actualizado con éxito"
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun motivo de la inspección:"
                        respopera.xmsjtecnico = "la lista lista_aipinssusmotiv llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun motivo de la inspección:"
                    respopera.xmsjtecnico = "la lista lista_aipinssusmotiv llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarInspeccionSusMotivos ", ex)
                Return respopera
            End Try
        End Function


        <HttpPost()> _
        Public Function ActualizarInspeccionSinMotivos(lista_vi_aipinssinmotiv As List(Of vi_aipinssinmotiv)) As respopera
            Try
                Dim vi_aipinssinmotivController As New vi_aipinssinmotivController
                Dim respopera As New respopera

                If lista_vi_aipinssinmotiv IsNot Nothing Then
                    If lista_vi_aipinssinmotiv.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinssinmotiv.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinssinmotiv.Count - 1
                                'lista_aipinssinmotiv(i).iestatinsenc = "PROCEDENTE"



                                respopera2 = ActualizarAipInsSinMotiv(lista_vi_aipinssinmotiv(i))

                                If (respopera2.irespuesta = "1") Then
                                    If (lista_vi_aipinssinmotiv(i).itilinssinmotiv = True) Then
                                        Dim aipinsencController As New aipinsencController
                                        Dim aipinsenc As aipinsenc = aipinsencController.selaipinsencxid(lista_vi_aipinssinmotiv(i).idaipinsenc)
                                        If (aipinsenc IsNot Nothing) Then
                                            aipinsenc.idaipinsmotiv = lista_vi_aipinssinmotiv(i).idaipinsmotiv
                                            aipinsencController.modaipinsenc(aipinsenc)
                                        End If
                                    End If
                                End If

                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registros actualizado con éxito"
                            respopera.xmsjtecnico = "Registros actualizado con éxito"
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun motivo de la inspección:"
                        respopera.xmsjtecnico = "la lista lista_aipinssinmotiv llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun motivo de la inspección:"
                    respopera.xmsjtecnico = "la lista lista_aipinssinmotiv llego sin registros"
                    respopera.id = 0
                End If
                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarInspeccionSinMotivos ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function TotalPrecioManoObraSinistroPorIdSin(idaipinssin As Decimal) As Decimal
            Try
                Dim nprecfininssinmobr As Decimal = 0
                Dim vi_aipinssinmobrController As New vi_aipinssinmobrController
                nprecfininssinmobr = vi_aipinssinmobrController.selnprecfininssinmobrxidaipinssin(idaipinssin)
                Return nprecfininssinmobr
            Catch ex As Exception
                Return 0
            End Try
        End Function

        <HttpPost()> _
        Public Function TotalCantidadManoObraSinistroPorIdSin(idaipinssin As Decimal) As Int32
            Try
                Dim ncantinssinmobr As Int32 = 0
                Dim vi_aipinssinmobrController As New vi_aipinssinmobrController
                ncantinssinmobr = vi_aipinssinmobrController.selnprecfinxidaipinssin(idaipinssin)
                Return ncantinssinmobr
            Catch ex As Exception
                Return 0
            End Try
        End Function

        <HttpPost()> _
        Public Function TotalPrecioRepuestoSinistroPorIdSin(idaipinssin As Decimal) As Decimal
            Try
                Dim nprecfininssinrepu As Decimal = 0
                Dim vi_aipinssinrepuController As New vi_aipinssinrepuController
                nprecfininssinrepu = vi_aipinssinrepuController.selnprecfininssinrepuxidaipinssin(idaipinssin)
                Return nprecfininssinrepu
            Catch ex As Exception
                Return 0
            End Try
        End Function

        <HttpPost()> _
        Public Function TotalCantidadRepuestoSinistroPorIdSin(idaipinssin As Decimal) As Int32
            Try
                Dim ncantinssinrepu As Int32 = 0
                Dim vi_aipinssinrepuController As New vi_aipinssinrepuController
                ncantinssinrepu = vi_aipinssinrepuController.selnprecfinxidaipinssin(idaipinssin)
                Return ncantinssinrepu
            Catch ex As Exception
                Return 0
            End Try
        End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ObtenerSuscripcionSseVeh(idaipinssus As Decimal) As List(Of aipinssussse)

        '    Dim aipinssussseController As New aipinssussseController
        '    Dim lista_aipinssussse As List(Of aipinssussse) = aipinssussseController.selaipinssusssexidaipinssus(idaipinssus)


        '    Return lista_aipinssussse

        'End Function
        <HttpPost()> _
        Public Function ObtenerSuscripcionSseVeh(idaipinssus As Decimal) As List(Of vi_aipinssussse)

            Dim vi_aipinssussseController As New vi_aipinssussseController
            Dim lista_vi_aipinssussse As List(Of vi_aipinssussse) = vi_aipinssussseController.selvi_aipinssusssexidaipinssus(idaipinssus)


            Return lista_vi_aipinssussse

        End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ObtenerSuscripcionSsmVeh(idaipinssus As Decimal) As List(Of aipinssusssm)

        '    Dim aipinssusssmController As New aipinssusssmController
        '    Dim lista_aipinssusssm As List(Of aipinssusssm) = aipinssusssmController.selaipinssusssmxidaipinssus(idaipinssus)


        '    Return lista_aipinssusssm

        'End Function
        <HttpPost()> _
        Public Function ObtenerSuscripcionSsmVeh(idaipinssus As Decimal) As List(Of vi_aipinssusssm)

            Dim vi_aipinssusssmController As New vi_aipinssusssmController
            Dim lista_vi_aipinssusssm As List(Of vi_aipinssusssm) = vi_aipinssusssmController.selvi_aipinssusssmxidaipinssus(idaipinssus)


            Return lista_vi_aipinssusssm

        End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ObtenerSuscripcionAccVeh(idaipinssus As Decimal) As List(Of aipinssusacc)

        '    Dim aipinssusaccController As New aipinssusaccController
        '    Dim lista_aipinssusacc As List(Of aipinssusacc) = aipinssusaccController.selaipinssusaccxidaipinssus(idaipinssus)


        '    Return lista_aipinssusacc

        'End Function
        <HttpPost()> _
        Public Function ObtenerSuscripcionAccVeh(idaipinssus As Decimal) As List(Of vi_aipinssusacc)

            Dim vi_aipinssusaccController As New vi_aipinssusaccController
            Dim lista_vi_aipinssusacc As List(Of vi_aipinssusacc) = vi_aipinssusaccController.selvi_aipinssusaccxidaipinssus(idaipinssus)


            Return lista_vi_aipinssusacc

        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function ObtenerRepuestosSuscripcionEstadGen(idaipinssus As Decimal) As List(Of vi_aipinssusrepuest)

            Dim vi_aipinssusrepuestController As New vi_aipinssusrepuestController
            Dim lista_vi_aipinssusrepuest As List(Of vi_aipinssusrepuest) = vi_aipinssusrepuestController.selvi_aipinssusrepuestxidaipinssus(idaipinssus)


            Return lista_vi_aipinssusrepuest

        End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ObtenerMotivosInspeccionSusActivos(idaipinssus As Decimal) As List(Of aipinssusmotiv)

        '    Dim aipinssusmotivController As New aipinssusmotivController
        '    Dim lista_aipinssusmotiv As List(Of aipinssusmotiv) = aipinssusmotivController.selaipinssusmotivxidaipinssus(idaipinssus)


        '    Return lista_aipinssusmotiv

        'End Function

        <HttpPost()> _
        Public Function ObtenerMotivosInspeccionSusActivos(idaipinssus As Decimal) As List(Of vi_aipinssusmotiv)

            Dim vi_aipinssusmotivController As New vi_aipinssusmotivController
            Dim lista_vi_aipinssusmotiv As List(Of vi_aipinssusmotiv) = vi_aipinssusmotivController.selvi_aipinssusmotivxidaipinssus(idaipinssus)


            Return lista_vi_aipinssusmotiv

        End Function


        <HttpPost()> _
        Public Function ObtenerMotivosInspeccionSinActivos(idaipinssin As Decimal) As List(Of vi_aipinssinmotiv)

            Dim vi_aipinssinmotivController As New vi_aipinssinmotivController
            Dim lista_vi_aipinssinmotiv As List(Of vi_aipinssinmotiv) = vi_aipinssinmotivController.selvi_aipinssinmotivxidaipinssin(idaipinssin)


            Return lista_vi_aipinssinmotiv

        End Function


        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function GuardarInspeccionSuscripcion(vi_aipinssus As vi_aipinssus) As respopera
            Try
                Dim aipinssusController As New aipinssusController
                Dim aipinssus As New aipinssus
                Dim respopera As New respopera

                If vi_aipinssus IsNot Nothing Then
                    With aipinssus
                        .idaipinssus = vi_aipinssus.idaipinssus
                        .idaipinsenc = vi_aipinssus.idaipinsenc
                        .xnomintinssus = vi_aipinssus.xnomintinssus
                        .xnomsolinssus = vi_aipinssus.xnomsolinssus
                        .iluginssus = vi_aipinssus.iluginssus
                        .idaipmanveh = vi_aipinssus.idaipmanveh
                        .nkiloinssus = vi_aipinssus.nkiloinssus
                        .xsucuinssus = vi_aipinssus.xsucuinssus
                        .iserbodinssus = vi_aipinssus.iserbodinssus
                        .ialarcorrinssus = vi_aipinssus.ialarcorrinssus
                        .xserinssus = vi_aipinssus.xserinssus
                        .xdictinssus = vi_aipinssus.xdictinssus
                        .xdescinssus = vi_aipinssus.xdescinssus
                        .iestatinssus = vi_aipinssus.iestatinssus
                        .idseglogreg = 0
                    End With
                    respopera = aipinssusController.modaipinssus(aipinssus)
                    If (respopera.irespuesta = "1") Then

                        Dim aipinsencController As New aipinsencController
                        Dim aipinsenc As New aipinsenc
                        aipinsenc = aipinsencController.selaipinsencxid(vi_aipinssus.idaipinsenc)

                        If (aipinsenc IsNot Nothing) Then
                            'se coloca el cerrar  para que se realice el cierre automatico de la inspeccion al momento de procesarla por la app movil de asi desearlo
                            aipinsenc.icerrarinsenc = True

                            'se realiza la actualizacion del valor de cierre en true
                            aipinsencController.modaipinsenc(aipinsenc)

                        End If
                        
                        GuardarAipLogeve(vi_aipinssus.idaipinsenc, "SUSCRIPCION")
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ninguna suscripción"
                    respopera.xmsjtecnico = "No se encontro ninguna suscripción -->If vi_aipinssus IsNot Nothing Then"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:GuardarInspeccionSuscripcion ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function ProcesarInspeccionSuscripcion(vi_aipinssus As vi_aipinssus) As respopera
            Try
                Dim aipinssusController As New aipinssusController
                Dim aipinssus As New aipinssus
                Dim respopera As New respopera

                'verifico que todos los estados generales sean diferente de no aplica
                Dim aipinssusrepuestController As New aipinssusrepuestController


                ''adecuacion para excluir para validacion de NO APLICA algunos repuestos Por Deivid P 02/12/2016
                ''se realiza la toma de los valores de repuesto excluidos
                Dim idrepuestos As String = ConfigurationManager.AppSettings("repu_estad_gen_exclu")

                ''se realiza un split para separar cada valor
                Dim arr As String() = idrepuestos.Split(",")
                Dim lista_idaipmanrepu As New List(Of Decimal)
                ''se recorre y se agregan a una lista de decimal para evaluarlo despues
                For i As Integer = 0 To arr.Length - 1
                    lista_idaipmanrepu.Add(Convert.ToDecimal(arr(i)))
                Next
                Dim iexistennoapli As Boolean = aipinssusrepuestController.iexistexidaipinssusConExclusion(vi_aipinssus.idaipinssus, lista_idaipmanrepu)

                If iexistennoapli = False Then
                    If vi_aipinssus IsNot Nothing Then

                        ''se verifica si envio la placa y serial carroceria
                        Dim aipmanvehController As New aipmanvehController
                        Dim aipmanveh As aipmanveh = aipmanvehController.selaipmanvehxid(vi_aipinssus.idaipmanveh)

                        If (aipmanveh Is Nothing) Then
                            respopera.irespuesta = 0
                            respopera.xmsjusuario = "Ha ocurrido un error al enviar la inspección."
                            respopera.xmsjtecnico = "No se encontro el vehiculo enc " & vi_aipinssus.idaipmanveh
                            Return respopera
                        End If
                        Dim _error As Boolean = False
                        Dim _msj As String = ""

                        If (aipmanveh.xplacamanveh = "") Then
                            _error = True
                            _msj = "<li>La placa es obligatoria.</li>"
                        End If

                        If (aipmanveh.xsercarrmanveh = "") Then
                            _error = True
                            
                            _msj = _msj & "<li>El serial de la carroceria es obligatorio.</li>"
                        End If

                        If (_error) Then
                            _msj = "<ul>" & _msj & "</ul>"
                            respopera.irespuesta = 0
                            respopera.xmsjusuario = _msj
                            respopera.xmsjtecnico = _msj
                            Return respopera
                        End If

                        With aipinssus
                            .idaipinssus = vi_aipinssus.idaipinssus
                            .idaipinsenc = vi_aipinssus.idaipinsenc
                            .xnomintinssus = vi_aipinssus.xnomintinssus
                            .xnomsolinssus = vi_aipinssus.xnomsolinssus
                            .iluginssus = vi_aipinssus.iluginssus
                            .idaipmanveh = vi_aipinssus.idaipmanveh
                            .nkiloinssus = vi_aipinssus.nkiloinssus
                            .xsucuinssus = vi_aipinssus.xsucuinssus
                            .iserbodinssus = vi_aipinssus.iserbodinssus
                            .ialarcorrinssus = vi_aipinssus.ialarcorrinssus
                            .xserinssus = vi_aipinssus.xserinssus
                            .xdictinssus = vi_aipinssus.xdictinssus
                            .xdescinssus = vi_aipinssus.xdescinssus
                            .iestatinssus = vi_aipinssus.iestatinssus
                            '.iestatinssus = "PROCESADA" '-->VERIFICAR
                            .idseglogreg = 0
                        End With
                        'se modificar la suscripcion
                        respopera = aipinssusController.modaipinssus(aipinssus)

                        Dim existe As Boolean = False


                        ''procesa la inspeccion enc
                        'ModificarInspeccionEstatus(vi_aipinsajusanex.idaipinsenc, "POR AUDITAR")
                        'si es exitoso se porcesa a distribuir la tarea a un auditor
                        If (respopera.irespuesta = "1") Then

                            'se verifican si existen fotos para la inspeccion
                            existe = VerificarExistenciaFotosPeritaje(vi_aipinssus.idaipinsenc)
                            If (existe) Then

                                ''adecuacion para verificar si el Perito envio la inspeccion debe verificar si los datos de la placa y carroceria estan iguales
                                ''de ser asi se elimina el log para que no le muestre esta info al auditor
                                ''Por Deivid Peña 14/12/2016

                                ''no controlo el error para evitar el envio por este caso ya que es algo adicional
                                VerificarDatosDePlacaYCarroceria(vi_aipinssus.idaipinsenc, aipmanveh.xplacamanveh, aipmanveh.xsercarrmanveh)

                                ''Fin Adecucion


                                ''procesa la inspeccion enc
                                respopera = ModificarInspeccionConDistribucionAutomaticaAuditores(vi_aipinssus.idaipinsenc)
                            Else
                                'se buscan audios o videos para procesar la inspeccion
                                'Dim vi_aipinsarchController As New vi_aipinsarchController
                                'existe = vi_aipinsarchController.ExistePorEncActivos(vi_aipinssus.idaipinsenc)
                                'If (existe) Then
                                '    ''procesa la inspeccion enc
                                '    respopera = ModificarInspeccionConDistribucionAutomaticaAuditores(vi_aipinssus.idaipinsenc)
                                'Else
                                respopera.irespuesta = "0"
                                respopera.xmsjusuario = "Debe enviar fotos desde la app movil para poder enviar la inspección."
                                respopera.xmsjtecnico = "Debe enviar fotos desde la app movil para poder enviar la inspección."

                                'End If



                            End If


                        End If

                        Return respopera

                        'ModificarInspeccionEstatus(vi_aipinssus.idaipinsenc, "POR AUDITAR")
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ninguna suscripción"
                        respopera.xmsjtecnico = "No se encontro ninguna suscripción -->If vi_aipinssus IsNot Nothing Then"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No puede enviar la inspección al auditor ni al SIR sin indicar un valor (L-M-F-B) para todos los Estados Generales."
                    respopera.xmsjtecnico = "No puede enviar la inspección al auditor ni al SIR sin indicar un valor (L-M-F-B) para todos los Estados Generales."
                    respopera.id = 0
                End If 'If iexistennoapli = False Then

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ProcesarInspeccionSuscripcion ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function RechazarInspeccionSuscripcion(vi_aipinssus As vi_aipinssus) As respopera
            Try
                Dim aipinssusController As New aipinssusController
                Dim aipinssus As New aipinssus
                Dim respopera As New respopera

                If vi_aipinssus IsNot Nothing Then
                    With aipinssus
                        .idaipinssus = vi_aipinssus.idaipinssus
                        .idaipinsenc = vi_aipinssus.idaipinsenc
                        .xnomintinssus = vi_aipinssus.xnomintinssus
                        .xnomsolinssus = vi_aipinssus.xnomsolinssus
                        .iluginssus = vi_aipinssus.iluginssus
                        .idaipmanveh = vi_aipinssus.idaipmanveh
                        .nkiloinssus = vi_aipinssus.nkiloinssus
                        .xsucuinssus = vi_aipinssus.xsucuinssus
                        .iserbodinssus = vi_aipinssus.iserbodinssus
                        .ialarcorrinssus = vi_aipinssus.ialarcorrinssus
                        .xserinssus = vi_aipinssus.xserinssus
                        .xdictinssus = vi_aipinssus.xdictinssus
                        .xdescinssus = vi_aipinssus.xdescinssus
                        .iestatinssus = vi_aipinssus.iestatinssus
                        '.iestatinssus = "RECHAZADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With
                    respopera = aipinssusController.modaipinssus(aipinssus)

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinssus.idaipinsenc, "POR PROCESAR", "RECHAZAR")
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ninguna suscripción"
                    respopera.xmsjtecnico = "No se encontro ninguna suscripción -->If vi_aipinssus IsNot Nothing Then"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:RechazarInspeccionSuscripcion ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function CancelarInspeccionSuscripcion(vi_aipinssus As vi_aipinssus) As respopera
            Try
                Dim aipinssusController As New aipinssusController
                Dim aipinssus As New aipinssus
                Dim respopera As New respopera

                If vi_aipinssus IsNot Nothing Then
                    With aipinssus
                        .idaipinssus = vi_aipinssus.idaipinssus
                        .idaipinsenc = vi_aipinssus.idaipinsenc
                        .xnomintinssus = vi_aipinssus.xnomintinssus
                        .xnomsolinssus = vi_aipinssus.xnomsolinssus
                        .iluginssus = vi_aipinssus.iluginssus
                        .idaipmanveh = vi_aipinssus.idaipmanveh
                        .nkiloinssus = vi_aipinssus.nkiloinssus
                        .xsucuinssus = vi_aipinssus.xsucuinssus
                        .iserbodinssus = vi_aipinssus.iserbodinssus
                        .ialarcorrinssus = vi_aipinssus.ialarcorrinssus
                        .xserinssus = vi_aipinssus.xserinssus
                        .xdictinssus = vi_aipinssus.xdictinssus
                        .xdescinssus = vi_aipinssus.xdescinssus
                        .iestatinssus = vi_aipinssus.iestatinssus
                        '.iestatinssus = "NO PROCEDENTE" '-->VERIFICAR
                        .idseglogreg = 0
                    End With
                    respopera = aipinssusController.modaipinssus(aipinssus)

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinssus.idaipinsenc, "NO PROCEDENTE", "CANCELAR")
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ninguna suscripción"
                    respopera.xmsjtecnico = "No se encontro ninguna suscripción -->If vi_aipinssus IsNot Nothing Then"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:CancelarInspeccionSuscripcion ", ex)
                Return respopera
            End Try
        End Function

        'busca la lista de fotos por el tamaño original 
        <HttpGet()> _
        Public Function ObtenerInspeccionFotoOriginalPorInspeccionEnc(idaipinsenc As Decimal) As List(Of DownloadFilesResultInsFoto)
            Try

                '                 idaipinsenc As Decimal, nsecinsfoto As Short
                'Dim idaipinsenc As Decimal = 3
                'Dim nsecinsfoto As Short = 1

                Dim vi_aipinsfotoController As New vi_aipinsfotoController
                Dim lista_vi_aipinsfoto As List(Of vi_aipinsfoto) = vi_aipinsfotoController.selvi_aipinsfotoxidaipinsenc(idaipinsenc)
                Dim DownloadFilesResultInsFoto As New DownloadFilesResultInsFoto
                Dim lista_DownloadFilesResultInsFoto As New List(Of DownloadFilesResultInsFoto)
                Dim _aipainsfoto As aipinsfoto

                If lista_vi_aipinsfoto.Count > 0 Then
                    Dim xrutatipoenc As String = ""
                    For i As Integer = 0 To lista_vi_aipinsfoto.Count - 1
                        'se realiza la busqueda de las imagenes en la carpeta thumbnail(miniaturas)
                        Select Case lista_vi_aipinsfoto(i).itipoinsenc
                            Case "SUSCRIPCION"
                                xrutatipoenc = "fotosmovil\suscripcion\ok\"
                            Case "SINIESTRO"
                                xrutatipoenc = "fotosmovil\siniestro\ok\"
                            Case "RESTOS Y SALVAMENTO"
                                xrutatipoenc = "fotosmovil\restos_salvamento\ok\"
                            Case "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
                                xrutatipoenc = "fotosmovil\limpieza_siniestro\ok\"
                            Case "LIMPIEZA DE DAÑOS POR SINIESTRO"
                                xrutatipoenc = "fotosmovil\limpieza_suscripcion\ok\"
                            Case "AJUSTES POR SINIESTRO"
                                xrutatipoenc = "fotosmovil\ajustes_sinientro\ok\"
                            Case "AJUSTES POR ANEXO"
                                xrutatipoenc = "fotosmovil\ajustes_anexo\ok\"
                        End Select

                        Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '

                        Dim xruta As String = xrutaraiz & xrutatipoenc & lista_vi_aipinsfoto(i).xnomarchinsfoto
                        'Return File.ReadAllBytes(xruta)

                        'DownloadFilesResultInsFoto.ArchivoByte = Convert.FromBase64String("")
                        _aipainsfoto = New aipinsfoto
                        ObjectMapperManager.DefaultInstance.GetMapper(Of vi_aipinsfoto, aipinsfoto).Map(lista_vi_aipinsfoto(i), _aipainsfoto)
                        If File.Exists(xruta) Then                            

                            DownloadFilesResultInsFoto.ArchivoByte = File.ReadAllBytes(xruta)
                            DownloadFilesResultInsFoto.Name = lista_vi_aipinsfoto(i).xnomarchinsfoto
                            DownloadFilesResultInsFoto.Type = System.IO.Path.GetExtension(xruta)
                            DownloadFilesResultInsFoto.aipinsfoto = _aipainsfoto
                            lista_DownloadFilesResultInsFoto.Add(New DownloadFilesResultInsFoto() With { _
                .ArchivoByte = DownloadFilesResultInsFoto.ArchivoByte, _
            .Name = DownloadFilesResultInsFoto.Name, _
            .Type = DownloadFilesResultInsFoto.Type, _
            .aipinsfoto = DownloadFilesResultInsFoto.aipinsfoto _
            })
                        Else
                            DownloadFilesResultInsFoto.ArchivoByte = Convert.FromBase64String("")
                            DownloadFilesResultInsFoto.Name = ""
                            DownloadFilesResultInsFoto.Type = ""
                            DownloadFilesResultInsFoto.aipinsfoto = _aipainsfoto
                            lista_DownloadFilesResultInsFoto.Add(New DownloadFilesResultInsFoto() With { _
                .ArchivoByte = DownloadFilesResultInsFoto.ArchivoByte, _
            .Name = DownloadFilesResultInsFoto.Name, _
            .Type = DownloadFilesResultInsFoto.Type, _
            .aipinsfoto = DownloadFilesResultInsFoto.aipinsfoto _
            })
                        End If
                    Next

                Else
                    DownloadFilesResultInsFoto.ArchivoByte = Convert.FromBase64String("")
                    DownloadFilesResultInsFoto.Name = ""
                    DownloadFilesResultInsFoto.Type = ""
                    DownloadFilesResultInsFoto.aipinsfoto = _aipainsfoto

                    lista_DownloadFilesResultInsFoto.Add(New DownloadFilesResultInsFoto() With { _
        .ArchivoByte = DownloadFilesResultInsFoto.ArchivoByte, _
    .Name = DownloadFilesResultInsFoto.Type, _
    .Type = DownloadFilesResultInsFoto.Type, _
    .aipinsfoto = DownloadFilesResultInsFoto.aipinsfoto _
    })
                End If


                Return lista_DownloadFilesResultInsFoto

            Catch ex As Exception
                Dim DownloadFilesResultInsFoto As New DownloadFilesResultInsFoto
                Dim lista_DownloadFilesResultInsFoto As New List(Of DownloadFilesResultInsFoto)
                DownloadFilesResultInsFoto.ArchivoByte = Convert.FromBase64String("")
                DownloadFilesResultInsFoto.Name = ""
                DownloadFilesResultInsFoto.Type = ""

                lista_DownloadFilesResultInsFoto.Add(New DownloadFilesResultInsFoto() With { _
    .ArchivoByte = Convert.FromBase64String(""), _
.Name = "", _
.Type = "" _
})

                Return lista_DownloadFilesResultInsFoto
            End Try
        End Function

        Public Function EnviarFotosSistemaSir(idaipinsenc As Decimal, idaipinsintext As Decimal, itipoinsenc As String) As respopera
            Dim respopera As New respopera
            Dim xrutaimg As String = ""
            'Dim xrutaxnombat As String = "" 'para el .bat
            Dim xrutanombre As String = ""
            Try
                respopera.irespuesta = "1"
                respopera.xmsjusuario = "OK"
                respopera.xmsjtecnico = "OK"
                respopera.id = 0
                Dim lista_fotos As List(Of DownloadFilesResultInsFoto) = ObtenerInspeccionFotoOriginalPorInspeccionEnc(idaipinsenc)
                'Dim xruta As String = HttpContext.Current.Server.MapPath("~/imagenes")
                xrutaimg = ConfigurationManager.AppSettings("xruta2" & (ConfigurationManager.AppSettings("ambiente"))) 'esta es para cuando este publicado                

                'para el .bat
                'xrutaimg = ConfigurationManager.AppSettings("xruta") & "\fotosmovil\imagenes" 'esta es para cuando este publicado
                'xrutaxnombat = ConfigurationManager.AppSettings("xruta") & "\fotosmovil\copiar.bat"

                Dim xnombrefoto As String = ""
                'System.IO.Path.GetExtension(xruta)
                If lista_fotos.Count > 0 Then

                    Dim aipinsfotoController As New aipinsfotoController

                    For i As Integer = 0 To lista_fotos.Count - 1
                        If itipoinsenc = "SUSCRIPCION" Then
                            xnombrefoto = "SUS-" & idaipinsintext & "-" & (i + 1) & System.IO.Path.GetExtension(lista_fotos(i).Name)
                        Else
                            xnombrefoto = "SIN-" & idaipinsintext & "-" & (i + 1) & System.IO.Path.GetExtension(lista_fotos(i).Name)
                        End If
                        xrutanombre = Path.Combine(xrutaimg, xnombrefoto)

                        ''esto es segun adecuacion solicitada por parte de estarseguros por telefono el dia 01-08-2016 sobre poder tener el nombre definitivo de la imagen cuando cae en el sir
                        '' para no cambiar el nombre de la imagen en nuestro sistema se le propuso que en el campo xurlinsfoto se le guarde la ruta y el nombre del sir y se acepto
                        lista_fotos(i).aipinsfoto.xurlinsfoto = xrutanombre
                        aipinsfotoController.modaipinsfoto(lista_fotos(i).aipinsfoto)
                        ''Fin esto es segun adecuacion solicitada por parte de estarseguros por telefono el dia 01-08-2016 sobre poder tener el nombre definitivo de la imagen cuando cae en el sir
                        '' para no cambiar el nombre de la imagen en nuestro sistema se le propuso que en el campo xurlinsfoto se le guarde la ruta y el nombre del sir y se acepto

                        File.WriteAllBytes(xrutanombre, lista_fotos(i).ArchivoByte)
                    Next
                End If

                'para el .bat
                'Shell(xrutaxnombat, AppWinStyle.Hide, True)

                ''eliminar
                'If idaipinsenc = 107 Then
                '    respopera.irespuesta = "0"
                'End If

                Return respopera
            Catch e As Exception

                ''eliminar
                'If idaipinsenc <> 107 Then
                '    respopera.irespuesta = "1"
                'Else
                '    respopera.irespuesta = "0"
                'End If

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Erro al momento de enviar las fotos al sir"
                respopera.xmsjtecnico = "Erro al momento de enviar las fotos al sir"
                respopera.id = 0
                AgregarLogErrores("Metodo:EnviarFotosSistemaSir RutaNombre: " & xrutanombre, e)

                ''eliminar
                'If idaipinsenc <> 107 Then
                '    respopera.irespuesta = "1"
                'Else
                '    respopera.irespuesta = "0"
                'End If

                Return respopera
            End Try
        End Function

        <HttpGet()> _
        Public Function EnviarFotosSistemaSir2() As respopera

            Dim idaipinsenc As Decimal = 9
            Dim idaipinsintext As Decimal = 31
            Dim itipoinsenc As String = "SINIESTRO"
            Dim respopera As New respopera
            Dim xrutaimg As String = ""
            Dim xrutaimgProd As String = ""
            'Dim xrutaxnombat As String = "" 'para el .bat
            Dim xrutanombre As String = ""
            Dim xrutanombreProd As String = ""
            Dim lugar = ""
            Try
                respopera.irespuesta = "1"
                respopera.xmsjusuario = "OK"
                respopera.xmsjtecnico = "OK"
                respopera.id = 0
                Dim lista_fotos As List(Of DownloadFilesResultInsFoto) = ObtenerInspeccionFotoOriginalPorInspeccionEnc(idaipinsenc)
                'Dim xruta As String = HttpContext.Current.Server.MapPath("~/imagenes")
                xrutaimg = ConfigurationManager.AppSettings("xruta2" & (ConfigurationManager.AppSettings("ambiente"))) 'esta es para cuando este publicado                
                xrutaimgProd = ConfigurationManager.AppSettings("xruta2prod") 'esta es para cuando este publicado                

                'para el .bat
                'xrutaimg = ConfigurationManager.AppSettings("xruta") & "\fotosmovil\imagenes" 'esta es para cuando este publicado
                'xrutaxnombat = ConfigurationManager.AppSettings("xruta") & "\fotosmovil\copiar.bat"

                Dim xnombrefoto As String = ""                
                'System.IO.Path.GetExtension(xruta)
                If lista_fotos.Count > 0 Then

                    Dim aipinsfotoController As New aipinsfotoController

                    For i As Integer = 0 To lista_fotos.Count - 1
                        If itipoinsenc = "SUSCRIPCION" Then
                            xnombrefoto = "SUS-" & idaipinsintext & "-" & (i + 1) & System.IO.Path.GetExtension(lista_fotos(i).Name)
                        Else
                            xnombrefoto = "IMG_PRUEBA_METODO_COPIAR" & System.IO.Path.GetExtension(lista_fotos(i).Name)
                        End If
                        xrutanombre = Path.Combine(xrutaimg, xnombrefoto)
                        xrutanombreProd = Path.Combine(xrutaimgProd, xnombrefoto)

                        ''esto es segun adecuacion solicitada por parte de estarseguros por telefono el dia 01-08-2016 sobre poder tener el nombre definitivo de la imagen cuando cae en el sir
                        '' para no cambiar el nombre de la imagen en nuestro sistema se le propuso que en el campo xurlinsfoto se le guarde la ruta y el nombre del sir y se acepto
                        lista_fotos(i).aipinsfoto.xurlinsfoto = xrutanombre
                        aipinsfotoController.modaipinsfoto(lista_fotos(i).aipinsfoto)
                        ''Fin esto es segun adecuacion solicitada por parte de estarseguros por telefono el dia 01-08-2016 sobre poder tener el nombre definitivo de la imagen cuando cae en el sir
                        '' para no cambiar el nombre de la imagen en nuestro sistema se le propuso que en el campo xurlinsfoto se le guarde la ruta y el nombre del sir y se acepto
                        lugar = "Copiado en Produccion Ruta: " & xrutanombreProd
                        File.Delete(xrutanombreProd)
                        File.WriteAllBytes(xrutanombreProd, lista_fotos(i).ArchivoByte)
                        respopera.xmsjtecnico = "[ " & lugar & " ]"

                        lugar = "Copiado en DESA Ruta: " & xrutanombre
                        File.Delete(xrutanombre)
                        File.WriteAllBytes(xrutanombre, lista_fotos(i).ArchivoByte)
                        respopera.xmsjtecnico = respopera.xmsjtecnico & "  [ " & lugar & " ]"

                        respopera.xmsjusuario = ""
                    Next
                End If

                'para el .bat
                'Shell(xrutaxnombat, AppWinStyle.Hide, True)

                ''eliminar
                'If idaipinsenc = 107 Then
                '    respopera.irespuesta = "0"
                'End If

                Return respopera
            Catch e As Exception

                ''eliminar
                'If idaipinsenc <> 107 Then
                '    respopera.irespuesta = "1"
                'Else
                '    respopera.irespuesta = "0"
                'End If

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Erro al momento de enviar las fotos al sir"
                respopera.xmsjtecnico = respopera.xmsjtecnico & " [ Erro En --> " & lugar & "]"
                respopera.xmsjusuario = ""
                respopera.id = 0
                AgregarLogErrores("Metodo:EnviarFotosSistemaSir RutaNombre: " & xrutanombre, e)

                ''eliminar
                'If idaipinsenc <> 107 Then
                '    respopera.irespuesta = "1"
                'Else
                '    respopera.irespuesta = "0"
                'End If

                Return respopera
            End Try
        End Function


        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function AceptarInspeccionSuscripcion(vi_aipinssus As vi_aipinssus) As respopera
            Try
                Dim aipinssusController As New aipinssusController
                Dim aipinssus As New aipinssus
                Dim respopera As New respopera

                Dim xambiante As String = (ConfigurationManager.AppSettings("ambiente")) 'aqui se esta haciendo lo del ambiente para cuando este en desarrollo y de error en proceso de guardar en el sir no mande error

                'verifico que todos los estados generales sean diferente de no aplica
                Dim aipinssusrepuestController As New aipinssusrepuestController
                ''Dim iexistennoapli As Boolean = aipinssusrepuestController.iexistexidaipinssus(vi_aipinssus.idaipinssus)

                ''adecuacion para excluir para validacion de NO APLICA algunos repuestos Por Deivid P 02/12/2016
                ''se realiza la toma de los valores de repuesto excluidos
                Dim idrepuestos As String = ConfigurationManager.AppSettings("repu_estad_gen_exclu")

                ''se realiza un split para separar cada valor
                Dim arr As String() = idrepuestos.Split(",")
                Dim lista_idaipmanrepu As New List(Of Decimal)
                ''se recorre y se agregan a una lista de decimal para evaluarlo despues
                For i As Integer = 0 To arr.Length - 1
                    lista_idaipmanrepu.Add(Convert.ToDecimal(arr(i)))
                Next
                Dim iexistennoapli As Boolean = aipinssusrepuestController.iexistexidaipinssusConExclusion(vi_aipinssus.idaipinssus, lista_idaipmanrepu)

                If iexistennoapli = False Then
                    If vi_aipinssus IsNot Nothing Then

                        Dim aipinsencController As New aipinsencController
                        Dim aipinsenc As aipinsenc = aipinsencController.selaipinsencxid(vi_aipinssus.idaipinsenc)

                        If (aipinsenc IsNot Nothing) Then

                            ''se realiza la validacion de la placa y el serial de la carroceria entre el cargado por el Perito y el original almacenado en aipinsenc
                            Dim aipmanvehController As New aipmanvehController
                            Dim aipmanveh As aipmanveh = aipmanvehController.selaipmanvehxid(vi_aipinssus.idaipmanveh)

                            If (aipmanveh IsNot Nothing) Then
                                Dim _error As Boolean = False
                                Dim _msj As String = ""
                                ''se valida si las placas son diferentes

                                ''si la placa no es vacia desde el origen
                                If (aipinsenc.xplacinsenc.Trim() <> "") Then
                                    If (aipinsenc.xplacinsenc.Trim().ToUpper() <> aipmanveh.xplacamanveh.Trim().ToUpper()) Then
                                        _error = True
                                        _msj = "La placa no coincide con la original, Original: " & aipinsenc.xplacinsenc & " , Nueva: " & aipmanveh.xplacamanveh

                                    End If
                                End If

                                


                                ''se valida si los seriales de la carroceria son diferentes
                                ''si el serial no es vacio desde el origen
                                If (aipinsenc.xsercarrinsenc.Trim() <> "") Then
                                    If (aipinsenc.xsercarrinsenc.Trim().ToUpper() <> aipmanveh.xsercarrmanveh.Trim().ToUpper()) Then
                                        _error = True
                                        If (_msj.Length > 0) Then
                                            _msj = _msj & " y "
                                        End If
                                        _msj = _msj & "El serial de la carroceria no coincide con el original, Original: " & aipinsenc.xsercarrinsenc & " , Nueva: " & aipmanveh.xsercarrmanveh
                                    End If
                                End If
                                

                                If (_error) Then
                                    respopera.irespuesta = "0"
                                    respopera.xmsjusuario = "No puede cerrar la inspección ya que " & _msj
                                    respopera.xmsjtecnico = respopera.xmsjusuario
                                    Return respopera
                                End If
                            End If


                            'primero transfiero las fotos antes de transferir al sir
                            respopera = EnviarFotosSistemaSir(aipinsenc.idaipinsenc, aipinsenc.idaipinsintext, aipinsenc.itipoinsenc)
                            If (respopera.irespuesta = "0") And xambiante = "prod" Then 'si es desa no mandar error esto claro esta lo pueda cambiar dependiendo de lo que quieran probar
                                ' para desa esto se agrego dado que existen problemas para guardar las imagenes en la ruta de red desde el servidor de desa  

                                'If (respopera.irespuesta = "0") then ' esta es la forma correcta sin importar el ambiente
                                respopera.xmsjusuario = "Ha ocurrido un error con la transferencia de la fotos al SIR."
                                respopera.xmsjtecnico = "Ha ocurrido un error con la transferencia de la fotos al SIR."
                            Else
                                ''se llama al SP para realizar la transferencia de la inspeccion a su sistema interno
                                respopera = Sp_TranferenciaCierreInspeccion(0, aipinsenc.idaipinsintext, aipinsenc.itipoinsenc)
                                ''se verifica el proceso de transferencia
                                If (respopera.irespuesta = "0") And xambiante = "prod" Then 'si es desa no mandar error esto claro esta lo pueda cambiar dependiendo de lo que quieran probar
                                    ' para desa esto se agrego dado que existen problemas para guardar las imagenes en la ruta de red desde el servidor de desa  

                                    'If (respopera.irespuesta = "0") Then ' esta es la forma correcta sin importar el ambiente
                                    ''se retorna operacion existosa del cierre pero error de la transferencia interna
                                    'respopera.xmsjusuario = "Ha ocurrido un error con la transferencia interna de la inspección."
                                    'respopera.xmsjtecnico = "Ha ocurrido un error con la transferencia interna de la inspección SIR."
                                Else
                                    With aipinssus
                                        .idaipinssus = vi_aipinssus.idaipinssus
                                        .idaipinsenc = vi_aipinssus.idaipinsenc
                                        .xnomintinssus = vi_aipinssus.xnomintinssus
                                        .xnomsolinssus = vi_aipinssus.xnomsolinssus
                                        .iluginssus = vi_aipinssus.iluginssus
                                        .idaipmanveh = vi_aipinssus.idaipmanveh
                                        .nkiloinssus = vi_aipinssus.nkiloinssus
                                        .xsucuinssus = vi_aipinssus.xsucuinssus
                                        .iserbodinssus = vi_aipinssus.iserbodinssus
                                        .ialarcorrinssus = vi_aipinssus.ialarcorrinssus
                                        .xserinssus = vi_aipinssus.xserinssus
                                        .xdictinssus = vi_aipinssus.xdictinssus
                                        .xdescinssus = vi_aipinssus.xdescinssus
                                        .iestatinssus = vi_aipinssus.iestatinssus
                                        '.iestatinssus = "ACEPTADA" '-->VERIFICAR
                                        .idseglogreg = 0
                                    End With
                                    respopera = aipinssusController.modaipinssus(aipinssus)

                                    ''procesa la inspeccion enc
                                    ModificarInspeccionEstatusYTipoAccion(vi_aipinssus.idaipinsenc, "PROCEDENTE", "ACEPTAR")


                                    'respopera.xmsjusuario = "Operación realizada satisfactoriamente."
                                    'respopera.xmsjtecnico = "Operación realizada satisfactoriamente."

                                End If 'transferencia sir
                            End If 'transferencia sir fotos
                        End If


                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ninguna suscripción"
                        respopera.xmsjtecnico = "No se encontro ninguna suscripción -->If vi_aipinssus IsNot Nothing Then"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No puede enviar la inspección al auditor ni al SIR sin indicar un valor (L-M-F-B) para todos los Estados Generales."
                    respopera.xmsjtecnico = "No puede enviar la inspección al auditor ni al SIR sin indicar un valor (L-M-F-B) para todos los Estados Generales."
                    respopera.id = 0
                End If
                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AceptarInspeccionSuscripcion ", ex)
                Return respopera
            End Try
        End Function

        '<HttpPost()> _
        'Public Function AceptarInspeccionSuscripcion(vi_aipinssus As vi_aipinssus) As respopera
        '    Try
        '        Dim aipinssusController As New aipinssusController
        '        Dim aipinssus As New aipinssus
        '        Dim respopera As New respopera

        '        If vi_aipinssus IsNot Nothing Then

        '            Dim aipinsencController As New aipinsencController
        '            Dim aipinsenc As aipinsenc = aipinsencController.selaipinsencxid(vi_aipinssus.idaipinsenc)

        '            If (aipinsenc IsNot Nothing) Then
        '                ''se llama al SP para realizar la transferencia de la inspeccion a su sistema interno
        '                respopera = Sp_TranferenciaCierreInspeccion(0, aipinsenc.idaipinsintext, aipinsenc.itipoinsenc)

        '                ''se verifica el proceso de transferencia
        '                If (respopera.irespuesta = "0") Then
        '                    ''se retorna operacion existosa del cierre pero error de la transferencia interna
        '                    respopera.xmsjusuario = "Ha ocurrido un error con la transferencia interna de la inspección."
        '                    respopera.xmsjtecnico = "Ha ocurrido un error con la transferencia interna de la inspección SIR."
        '                Else

        '                    With aipinssus
        '                        .idaipinssus = vi_aipinssus.idaipinssus
        '                        .idaipinsenc = vi_aipinssus.idaipinsenc
        '                        .xnomintinssus = vi_aipinssus.xnomintinssus
        '                        .xnomsolinssus = vi_aipinssus.xnomsolinssus
        '                        .iluginssus = vi_aipinssus.iluginssus
        '                        .idaipmanveh = vi_aipinssus.idaipmanveh
        '                        .nkiloinssus = vi_aipinssus.nkiloinssus
        '                        .xsucuinssus = vi_aipinssus.xsucuinssus
        '                        .iserbodinssus = vi_aipinssus.iserbodinssus
        '                        .ialarcorrinssus = vi_aipinssus.ialarcorrinssus
        '                        .xserinssus = vi_aipinssus.xserinssus
        '                        .xdictinssus = vi_aipinssus.xdictinssus
        '                        .xdescinssus = vi_aipinssus.xdescinssus
        '                        .iestatinssus = vi_aipinssus.iestatinssus
        '                        '.iestatinssus = "ACEPTADA" '-->VERIFICAR
        '                        .idseglogreg = 0
        '                    End With
        '                    respopera = aipinssusController.modaipinssus(aipinssus)

        '                    ''procesa la inspeccion enc
        '                    ModificarInspeccionEstatusYTipoAccion(vi_aipinssus.idaipinsenc, "PROCEDENTE", "ACEPTAR")


        '                    'respopera.xmsjusuario = "Operación realizada satisfactoriamente."
        '                    'respopera.xmsjtecnico = "Operación realizada satisfactoriamente."
        '                End If
        '            End If


        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ninguna suscripción"
        '            respopera.xmsjtecnico = "No se encontro ninguna suscripción -->If vi_aipinssus IsNot Nothing Then"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function

        ''Aceptar inspeciones por el id del encabezado realizado para cuando se desea aprobar una inspeccion delde el boton aprobar del grid de Inspeciones por auditar
        <HttpPost()> _
        Public Function AceptarInspeccionPorEnc(idaipinsenc As Decimal) As respopera
            Try

                Dim respopera As New respopera

                ''procesa la inspeccion enc
                respopera = ModificarInspeccionEstatusYTipoAccion(idaipinsenc, "PROCEDENTE", "ACEPTAR")

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AceptarInspeccionPorEnc ", ex)
                Return respopera
            End Try
        End Function


        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function ActualizarInspeccionRestSse(lista_aipinsrestsse As List(Of aipinsrestsse)) As respopera
            Try
                Dim aipinsrestsseController As New aipinsrestsseController
                Dim respopera As New respopera

                If lista_aipinsrestsse IsNot Nothing Then
                    If lista_aipinsrestsse.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_aipinsrestsse.Count > 0 Then
                            For i As Integer = 0 To lista_aipinsrestsse.Count - 1
                                'lista_aipinsrestsse(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = aipinsrestsseController.modaipinsrestsse(lista_aipinsrestsse(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registros actualizado con éxito"
                            respopera.xmsjtecnico = "Registros actualizado con éxito"
                        End If
                    Else
                        respopera.irespuesta = "0"
                        respopera.xmsjusuario = "No se encontro ningun sistemas de seguridad electrónico"
                        respopera.xmsjtecnico = "la lista lista_aipinsrestsse llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "No se encontro ningun sistemas de seguridad electrónico"
                    respopera.xmsjtecnico = "la lista lista_aipinsrestsse llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarInspeccionRestSse ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ActualizarInspeccionSusRestSsm(lista_aipinsrestssm As List(Of aipinsrestssm)) As respopera
        '    Try
        '        Dim aipinsrestssmController As New aipinsrestssmController
        '        Dim respopera As New respopera

        '        If lista_aipinsrestssm.Count > 0 Then
        '            Dim respopera2 As respopera
        '            If lista_aipinsrestssm.Count > 0 Then
        '                For i As Integer = 0 To lista_aipinsrestssm.Count - 1
        '                    'lista_aipinsrestssm(i).iestatinsenc = "PROCEDENTE"
        '                    respopera2 = aipinsrestssmController.modaipinsrestssm(lista_aipinsrestssm(i))
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id
        '                Next
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ningun sistemas de seguridad mecánica"
        '            respopera.xmsjtecnico = "la lista lista_aipinsrestssm llego sin registros"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function
        <HttpPost()> _
        Public Function ActualizarInspeccionRestSsm(lista_vi_aipinsrestssm As List(Of vi_aipinsrestssm)) As respopera
            Try
                'Dim aipinsrestssmController As New aipinsrestssmController
                Dim respopera As New respopera

                If lista_vi_aipinsrestssm IsNot Nothing Then
                    If lista_vi_aipinsrestssm.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinsrestssm.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinsrestssm.Count - 1
                                'lista_aipinsrestssm(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsRestSsm(lista_vi_aipinsrestssm(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registros actualizado con éxito"
                            respopera.xmsjtecnico = "Registros actualizado con éxito"
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun sistemas de seguridad mecánica"
                        respopera.xmsjtecnico = "la lista lista_aipinsrestssm llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun sistemas de seguridad mecánica"
                    respopera.xmsjtecnico = "la lista lista_aipinsrestssm llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarInspeccionRestSsm ", ex)
                Return respopera
            End Try
        End Function

        '<HttpPost()> _
        'Public Function ActualizarInspeccionRestRepuEstadGen(lista_aipinsrestrepuest As List(Of aipinsrestrepuest)) As respopera
        '    Try
        '        Dim aipinsrestrepuestController As New aipinsrestrepuestController
        '        Dim respopera As New respopera

        '        If lista_aipinsrestrepuest.Count > 0 Then
        '            Dim respopera2 As respopera
        '            If lista_aipinsrestrepuest.Count > 0 Then
        '                For i As Integer = 0 To lista_aipinsrestrepuest.Count - 1
        '                    'lista_aipinsrestrepuest(i).iestatinsenc = "PROCEDENTE"
        '                    respopera2 = aipinsrestrepuestController.modaipinsrestrepuest(lista_aipinsrestrepuest(i))
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id
        '                Next
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ningun repuesto"
        '            respopera.xmsjtecnico = "la lista lista_aipinsrestrepuest llego sin registros"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ObtenerSseRestos(idaipinsrest As Decimal) As List(Of aipinsrestsse)

        '    Dim aipinsrestsseController As New aipinsrestsseController
        '    Dim lista_aipinsrestsse As List(Of aipinsrestsse) = aipinsrestsseController.selaipinsrestssexidaipinsrest(idaipinsrest)


        '    Return lista_aipinsrestsse

        'End Function

        <HttpPost()> _
        Public Function ActualizarInspeccionRestRepuEstadGen(lista_vi_aipinsrestrepuest As List(Of vi_aipinsrestrepuest)) As respopera
            Try
                ' Dim aipinsrestrepuestController As New aipinsrestrepuestController
                Dim respopera As New respopera
                If lista_vi_aipinsrestrepuest IsNot Nothing Then
                    If lista_vi_aipinsrestrepuest.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinsrestrepuest.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinsrestrepuest.Count - 1
                                'lista_aipinsrestrepuest(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsRestRepuest(lista_vi_aipinsrestrepuest(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registros actualizado con éxito"
                            respopera.xmsjtecnico = "Registros actualizado con éxito"
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun repuesto"
                        respopera.xmsjtecnico = "la lista lista_aipinsrestrepuest llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsrestrepuest llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarInspeccionRestRepuEstadGen ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ObtenerSseRestos(idaipinsrest As Decimal) As List(Of vi_aipinsrestsse)

            Dim vi_aipinsrestsseController As New vi_aipinsrestsseController
            Dim lista_vi_aipinsrestsse As List(Of vi_aipinsrestsse) = vi_aipinsrestsseController.selvi_aipinsrestssexidaipinsrest(idaipinsrest)


            Return lista_vi_aipinsrestsse

        End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ObtenerSsmRestos(idaipinsrest As Decimal) As List(Of aipinsrestssm)

        '    Dim aipinsrestssmController As New aipinsrestssmController
        '    Dim lista_aipinsrestssm As List(Of aipinsrestssm) = aipinsrestssmController.selaipinsrestssmxidaipinsrest(idaipinsrest)


        '    Return lista_aipinsrestssm

        'End Function
        <HttpPost()> _
        Public Function ObtenerSsmRestos(idaipinsrest As Decimal) As List(Of vi_aipinsrestssm)

            Dim vi_aipinsrestssmController As New vi_aipinsrestssmController
            Dim lista_vi_aipinsrestssm As List(Of vi_aipinsrestssm) = vi_aipinsrestssmController.selvi_aipinsrestssmxidaipinsrest(idaipinsrest)


            Return lista_vi_aipinsrestssm

        End Function

        ''desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ObtenerRepuestosRestosEstado(idaipinsrest As Decimal) As List(Of aipinsrestrepuest)

        '    Dim aipinsrestrepuestController As New aipinsrestrepuestController
        '    Dim lista_aipinsrestrepuest As List(Of aipinsrestrepuest) = aipinsrestrepuestController.selaipinsrestrepuestxidaipinsrest(idaipinsrest)


        '    Return lista_aipinsrestrepuest

        'End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function ObtenerRepuestosRestosEstado(idaipinsrest As Decimal) As List(Of vi_aipinsrestrepuest)

            Dim vi_aipinsrestrepuestController As New vi_aipinsrestrepuestController
            Dim lista_vi_aipinsrestrepuest As List(Of vi_aipinsrestrepuest) = vi_aipinsrestrepuestController.selvi_aipinsrestrepuestxidaipinsrest(idaipinsrest)


            Return lista_vi_aipinsrestrepuest

        End Function


        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function GuardarInspeccionRestos(vi_aipinsrest As vi_aipinsrest) As respopera
            Try
                Dim aipinsrestController As New aipinsrestController
                Dim aipinsrest As New aipinsrest
                Dim respopera As New respopera

                If vi_aipinsrest IsNot Nothing Then
                    With aipinsrest
                        .idaipinsrest = vi_aipinsrest.idaipinsrest
                        .idaipinsenc = vi_aipinsrest.idaipinsenc
                        .idaipmanveh = vi_aipinsrest.idaipmanveh
                        .xsucuinsrest = vi_aipinsrest.xsucuinsrest
                        .nkiloinsrest = vi_aipinsrest.nkiloinsrest
                        .idcomunmanestado = vi_aipinsrest.idcomunmanestado
                        .idcomunmanlocalid = vi_aipinsrest.idcomunmanlocalid
                        .xdirinsrest = vi_aipinsrest.xdirinsrest
                        .msumaseginsrest = vi_aipinsrest.msumaseginsrest
                        .msumaseg75insrest = vi_aipinsrest.msumaseg75insrest
                        .mvalinminsrest = vi_aipinsrest.mvalinminsrest
                        .mdanoinsrest = vi_aipinsrest.mdanoinsrest
                        .mavalinsrest = vi_aipinsrest.mavalinsrest
                        .xnomtalinsrest = vi_aipinsrest.xnomtalinsrest
                        .xnomperinsrest = vi_aipinsrest.xnomperinsrest
                        .xnomjefperinsrest = vi_aipinsrest.xnomjefperinsrest
                        .xdescinsrest = vi_aipinsrest.xdescinsrest
                        .iestatinsrest = vi_aipinsrest.iestatinsrest
                        .idseglogreg = 0

                        .idseglogreg = 0
                    End With
                    respopera = aipinsrestController.modaipinsrest(aipinsrest)
                    If (respopera.irespuesta = "1") Then

                        Dim aipinsencController As New aipinsencController
                        Dim aipinsenc As New aipinsenc
                        aipinsenc = aipinsencController.selaipinsencxid(vi_aipinsrest.idaipinsenc)

                        If (aipinsenc IsNot Nothing) Then
                            'se coloca el cerrar  para que se realice el cierre automatico de la inspeccion al momento de procesarla por la app movil de asi desearlo
                            aipinsenc.icerrarinsenc = True

                            'se realiza la actualizacion del valor de cierre en true
                            aipinsencController.modaipinsenc(aipinsenc)

                        End If

                        GuardarAipLogeve(vi_aipinsrest.idaipinsenc, "RESTOS Y SALVAMENTO")
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ninguna suscripción"
                    respopera.xmsjtecnico = "No se encontro ninguna suscripción -->If vi_aipinsrest IsNot Nothing Then"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:GuardarInspeccionRestos ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function ProcesarInspeccionRestos(vi_aipinsrest As vi_aipinsrest) As respopera
            Try
                Dim aipinsrestController As New aipinsrestController
                Dim aipinsrest As New aipinsrest
                Dim respopera As New respopera

                If vi_aipinsrest IsNot Nothing Then
                    With aipinsrest
                        .idaipinsrest = vi_aipinsrest.idaipinsrest
                        .idaipinsenc = vi_aipinsrest.idaipinsenc
                        .idaipmanveh = vi_aipinsrest.idaipmanveh
                        .xsucuinsrest = vi_aipinsrest.xsucuinsrest
                        .nkiloinsrest = vi_aipinsrest.nkiloinsrest
                        .idcomunmanestado = vi_aipinsrest.idcomunmanestado
                        .idcomunmanlocalid = vi_aipinsrest.idcomunmanlocalid
                        .xdirinsrest = vi_aipinsrest.xdirinsrest
                        .msumaseginsrest = vi_aipinsrest.msumaseginsrest
                        .msumaseg75insrest = vi_aipinsrest.msumaseg75insrest
                        .mvalinminsrest = vi_aipinsrest.mvalinminsrest
                        .mdanoinsrest = vi_aipinsrest.mdanoinsrest
                        .mavalinsrest = vi_aipinsrest.mavalinsrest
                        .xnomtalinsrest = vi_aipinsrest.xnomtalinsrest
                        .xnomperinsrest = vi_aipinsrest.xnomperinsrest
                        .xnomjefperinsrest = vi_aipinsrest.xnomjefperinsrest
                        .xdescinsrest = vi_aipinsrest.xdescinsrest
                        .iestatinsrest = vi_aipinsrest.iestatinsrest
                        '.iestatinsrest = "PROCESADA" '-->VERIFICAR
                        .idseglogreg = 0

                        .idseglogreg = 0
                    End With
                    respopera = aipinsrestController.modaipinsrest(aipinsrest)

                    Dim existe As Boolean = False


                    ''procesa la inspeccion enc
                    'ModificarInspeccionEstatus(vi_aipinsajusanex.idaipinsenc, "POR AUDITAR")
                    'si es exitoso se porcesa a distribuir la tarea a un auditor
                    If (respopera.irespuesta = "1") Then

                        'se verifican si existen fotos para la inspeccion
                        existe = VerificarExistenciaFotosPeritaje(vi_aipinsrest.idaipinsenc)
                        If (existe) Then
                            ''procesa la inspeccion enc
                            respopera = ModificarInspeccionConDistribucionAutomaticaAuditores(vi_aipinsrest.idaipinsenc)
                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "Debe enviar fotos desde la app movil para poder enviar la inspección."
                            respopera.xmsjtecnico = "Debe enviar fotos desde la app movil para poder enviar la inspección."
                        End If


                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ninguna suscripción"
                    respopera.xmsjtecnico = "No se encontro ninguna suscripción -->If vi_aipinsrest IsNot Nothing Then"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ProcesarInspeccionRestos ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function RechazarInspeccionRestos(vi_aipinsrest As vi_aipinsrest) As respopera
            Try
                Dim aipinsrestController As New aipinsrestController
                Dim aipinsrest As New aipinsrest
                Dim respopera As New respopera

                If vi_aipinsrest IsNot Nothing Then
                    With aipinsrest
                        .idaipinsrest = vi_aipinsrest.idaipinsrest
                        .idaipinsenc = vi_aipinsrest.idaipinsenc
                        .idaipmanveh = vi_aipinsrest.idaipmanveh
                        .xsucuinsrest = vi_aipinsrest.xsucuinsrest
                        .nkiloinsrest = vi_aipinsrest.nkiloinsrest
                        .idcomunmanestado = vi_aipinsrest.idcomunmanestado
                        .idcomunmanlocalid = vi_aipinsrest.idcomunmanlocalid
                        .xdirinsrest = vi_aipinsrest.xdirinsrest
                        .msumaseginsrest = vi_aipinsrest.msumaseginsrest
                        .msumaseg75insrest = vi_aipinsrest.msumaseg75insrest
                        .mvalinminsrest = vi_aipinsrest.mvalinminsrest
                        .mdanoinsrest = vi_aipinsrest.mdanoinsrest
                        .mavalinsrest = vi_aipinsrest.mavalinsrest
                        .xnomtalinsrest = vi_aipinsrest.xnomtalinsrest
                        .xnomperinsrest = vi_aipinsrest.xnomperinsrest
                        .xnomjefperinsrest = vi_aipinsrest.xnomjefperinsrest
                        .xdescinsrest = vi_aipinsrest.xdescinsrest
                        .iestatinsrest = vi_aipinsrest.iestatinsrest
                        '.iestatinsrest = "RECHAZADA" '-->VERIFICAR
                        .idseglogreg = 0

                        .idseglogreg = 0
                    End With
                    respopera = aipinsrestController.modaipinsrest(aipinsrest)

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinsrest.idaipinsenc, "POR PROCESAR", "RECHAZAR")
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ninguna suscripción"
                    respopera.xmsjtecnico = "No se encontro ninguna suscripción -->If vi_aipinsrest IsNot Nothing Then"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AceptarInspeccionSuscripcion ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function CancelarInspeccionRestos(vi_aipinsrest As vi_aipinsrest) As respopera
            Try
                Dim aipinsrestController As New aipinsrestController
                Dim aipinsrest As New aipinsrest
                Dim respopera As New respopera

                If vi_aipinsrest IsNot Nothing Then
                    With aipinsrest
                        .idaipinsrest = vi_aipinsrest.idaipinsrest
                        .idaipinsenc = vi_aipinsrest.idaipinsenc
                        .idaipmanveh = vi_aipinsrest.idaipmanveh
                        .xsucuinsrest = vi_aipinsrest.xsucuinsrest
                        .nkiloinsrest = vi_aipinsrest.nkiloinsrest
                        .idcomunmanestado = vi_aipinsrest.idcomunmanestado
                        .idcomunmanlocalid = vi_aipinsrest.idcomunmanlocalid
                        .xdirinsrest = vi_aipinsrest.xdirinsrest
                        .msumaseginsrest = vi_aipinsrest.msumaseginsrest
                        .msumaseg75insrest = vi_aipinsrest.msumaseg75insrest
                        .mvalinminsrest = vi_aipinsrest.mvalinminsrest
                        .mdanoinsrest = vi_aipinsrest.mdanoinsrest
                        .mavalinsrest = vi_aipinsrest.mavalinsrest
                        .xnomtalinsrest = vi_aipinsrest.xnomtalinsrest
                        .xnomperinsrest = vi_aipinsrest.xnomperinsrest
                        .xnomjefperinsrest = vi_aipinsrest.xnomjefperinsrest
                        .xdescinsrest = vi_aipinsrest.xdescinsrest
                        .iestatinsrest = vi_aipinsrest.iestatinsrest
                        '.iestatinsrest = "NO PROCEDENTE" '-->VERIFICAR
                        .idseglogreg = 0

                        .idseglogreg = 0
                    End With
                    respopera = aipinsrestController.modaipinsrest(aipinsrest)

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinsrest.idaipinsenc, "NO PROCEDENTE", "CANCELAR")
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ninguna suscripción"
                    respopera.xmsjtecnico = "No se encontro ninguna suscripción -->If vi_aipinsrest IsNot Nothing Then"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:CancelarInspeccionRestos ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function AceptarInspeccionRestos(vi_aipinsrest As vi_aipinsrest) As respopera
            Try
                Dim aipinsrestController As New aipinsrestController
                Dim aipinsrest As New aipinsrest
                Dim respopera As New respopera

                If vi_aipinsrest IsNot Nothing Then
                    With aipinsrest
                        .idaipinsrest = vi_aipinsrest.idaipinsrest
                        .idaipinsenc = vi_aipinsrest.idaipinsenc
                        .idaipmanveh = vi_aipinsrest.idaipmanveh
                        .xsucuinsrest = vi_aipinsrest.xsucuinsrest
                        .nkiloinsrest = vi_aipinsrest.nkiloinsrest
                        .idcomunmanestado = vi_aipinsrest.idcomunmanestado
                        .idcomunmanlocalid = vi_aipinsrest.idcomunmanlocalid
                        .xdirinsrest = vi_aipinsrest.xdirinsrest
                        .msumaseginsrest = vi_aipinsrest.msumaseginsrest
                        .msumaseg75insrest = vi_aipinsrest.msumaseg75insrest
                        .mvalinminsrest = vi_aipinsrest.mvalinminsrest
                        .mdanoinsrest = vi_aipinsrest.mdanoinsrest
                        .mavalinsrest = vi_aipinsrest.mavalinsrest
                        .xnomtalinsrest = vi_aipinsrest.xnomtalinsrest
                        .xnomperinsrest = vi_aipinsrest.xnomperinsrest
                        .xnomjefperinsrest = vi_aipinsrest.xnomjefperinsrest
                        .xdescinsrest = vi_aipinsrest.xdescinsrest
                        .iestatinsrest = vi_aipinsrest.iestatinsrest
                        '.iestatinsrest = "ACEPTADA" '-->VERIFICAR
                        .idseglogreg = 0

                        .idseglogreg = 0
                    End With
                    respopera = aipinsrestController.modaipinsrest(aipinsrest)

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinsrest.idaipinsenc, "PROCEDENTE", "ACEPTAR")
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ninguna suscripción"
                    respopera.xmsjtecnico = "No se encontro ninguna suscripción -->If vi_aipinsrest IsNot Nothing Then"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AceptarInspeccionRestos ", ex)
                Return respopera
            End Try
        End Function



        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ActualizarRepuestosLimpiezaSuscripcion(lista_aipinslimsusrepu As List(Of aipinslimsusrepu)) As respopera
        '    Try
        '        Dim aipinslimsusrepuController As New aipinslimsusrepuController
        '        Dim respopera As New respopera

        '        If lista_aipinslimsusrepu.Count > 0 Then
        '            Dim respopera2 As respopera
        '            If lista_aipinslimsusrepu.Count > 0 Then
        '                For i As Integer = 0 To lista_aipinslimsusrepu.Count - 1
        '                    'lista_aipinslimsusrepu(i).iestatinsenc = "PROCEDENTE"
        '                    respopera2 = aipinslimsusrepuController.modaipinslimsusrepu(lista_aipinslimsusrepu(i))
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id
        '                Next
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ningun repuesto"
        '            respopera.xmsjtecnico = "la lista lista_aipinslimsusrepu llego sin registros"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function


        <HttpPost()> _
        Public Function ActualizarRepuestosSiniestro(lista_vi_aipinssinrepu As List(Of vi_aipinssinrepu)) As respopera
            Try

                Dim respopera As New respopera
                Dim canterror As Integer = 0
                Dim cantsuccess As Integer = 0

                If lista_vi_aipinssinrepu IsNot Nothing Then
                    If lista_vi_aipinssinrepu.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinssinrepu.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinssinrepu.Count - 1
                                'lista_aipinslimsinrepu(i).iestatinsenc = "PROCEDENTE"
                                'respopera2 = ActualizarAipInsSinRepu(lista_vi_aipinssinrepu(i))
                                respopera2 = ActualizarRespuestoSiniestroNuevo(lista_vi_aipinssinrepu(i))


                                If (respopera2.irespuesta = "0") Then
                                    Return respopera2
                                End If
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Se actualizaron todas las manos de obra satisfactoriamente."
                            'If (canterror > 0) Then
                            '    If (cantsuccess > 0) Then
                            '        respopera.irespuesta = "1"
                            '        respopera.xmsjusuario = "Se actualizaron " & cantsuccess & " con éxito y " & canterror & " con error."
                            '    Else
                            '        respopera.irespuesta = "0"
                            '        respopera.xmsjusuario = "Ha ocurrido un error al actualizar los datos"
                            '    End If
                            'Else
                            '    respopera.irespuesta = "1"
                            '    respopera.xmsjusuario = "Se actualizaron " & cantsuccess & " con satisfactoriamente"

                            'End If
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun repuesto"
                        respopera.xmsjtecnico = "la lista lista_aipinssinrepu llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = "1"
                    respopera.xmsjusuario = "Se actualizaron todas las manos de obra satisfactoriamente."
                End If
                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarRepuestosSiniestro ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarRespuestoSiniestroNuevo(vi_aipinssinrepu As vi_aipinssinrepu) As respopera
            Try

                Dim aipinssinrepu As New aipinssinrepu
                ObjectMapperManager.DefaultInstance.GetMapper(Of vi_aipinssinrepu, aipinssinrepu).Map(vi_aipinssinrepu, aipinssinrepu)

                Dim respopera As New respopera
                Dim aipinssinController As New aipinssinController
                Dim aipinssin As aipinssin = aipinssinController.selaipinssinxid(aipinssinrepu.idaipinssin)
                Dim mbaremo As Decimal = 0
                If (aipinssin IsNot Nothing) Then

                    Dim aipinssinrepuController As New aipinssinrepuController
                    respopera = aipinssinrepuController.modaipinssinrepu(aipinssinrepu)

                    ''comentado por adecuacion 22/12/2016 que permita monto mayores al monto del baremo por Deivid peña 
                    ''Segun correo de soporte@sitfx.com 21/12/2016

                    'respopera = Sp_ObtenerBaremoManoDeObra(0, aipinssin.idaipinsenc, aipinssinrepu.idaipmanrepu, "")
                    'mbaremo = respopera.id
                    'If (respopera.irespuesta = "1") Then
                    '    'se realiza la verificacion si el baremo en mayor a cero esto es temporal para no detener el proceso cuando no exista un baremo
                    '    If (mbaremo > 0) Then
                    '        If (aipinssinrepu.nprecfininssinrepu > mbaremo) Then
                    '            respopera.irespuesta = "0"
                    '            respopera.xmsjusuario = "El monto del repuesto " & vi_aipinssinrepu.xnommanrepu & " no puede ser mayor a '" & mbaremo & "' (monto máximo del baremo)"
                    '            respopera.xmsjtecnico = "El monto enviado " & aipinssinrepu.nprecfininssinrepu & " es mayor al baremo '" & mbaremo & "' (monto máximo del baremo)"
                    '            Return respopera
                    '        End If
                    '    End If

                    '    Dim aipinssinrepuController As New aipinssinrepuController
                    '    respopera = aipinssinrepuController.modaipinssinrepu(aipinssinrepu)

                    'Else
                    '    respopera.irespuesta = "0"
                    '    respopera.xmsjusuario = "Ha ocurrido un error verificando el monto del baremo"
                    '    respopera.xmsjtecnico = "No se encontro el baremo. " & respopera.xmsjtecnico
                    '    Return respopera
                    'End If
                Else

                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "Ha ocurrido un error al guardar la mano de obra"
                    respopera.xmsjtecnico = "No se encontro el siniestro. " & aipinssinrepu.idaipinssin
                    Return respopera
                End If



                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarRespuestoSiniestroNuevo ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarManoObraSiniestro(lista_vi_aipinssinmobr As List(Of vi_aipinssinmobr)) As respopera
            Try

                Dim respopera As New respopera
                Dim canterror As Integer = 0
                Dim cantsuccess As Integer = 0

                If lista_vi_aipinssinmobr IsNot Nothing Then
                    If lista_vi_aipinssinmobr.Count > 0 Then
                        Dim respopera2 As respopera

                        For i As Integer = 0 To lista_vi_aipinssinmobr.Count - 1
                            'lista_aipinslimsinrepu(i).iestatinsenc = "PROCEDENTE"

                            respopera2 = ActualizarManoObraSiniestroNuevo(lista_vi_aipinssinmobr(i))
                            'respopera2 = ActualizarAipInsSinMObra(lista_vi_aipinssinmobr(i))
                            If (respopera2.irespuesta = "0") Then
                                Return respopera2

                            End If
                        Next
                        respopera.irespuesta = "1"
                        respopera.xmsjusuario = "Se actualizaron todas las manos de obra satisfactoriamente."
                        'If (canterror > 0) Then
                        '    If (cantsuccess > 0) Then
                        '        respopera.irespuesta = "1"
                        '        respopera.xmsjusuario = "Se actualizaron " & cantsuccess & " con éxito y " & canterror & " con error."
                        '    Else
                        '        respopera.irespuesta = "0"
                        '        respopera.xmsjusuario = "Ha ocurrido un error al actualizar los datos"
                        '    End If
                        'Else
                        '    respopera.irespuesta = "1"
                        '    respopera.xmsjusuario = "Se actualizaron " & cantsuccess & " con satisfactoriamente"

                        'End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ninguna mano de obra"
                        respopera.xmsjtecnico = "la lista lista_vi_aipinssinmobr llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = "1"
                    respopera.xmsjusuario = "Se actualizaron todas las manos de obra satisfactoriamente."
                End If
                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarManoObraSiniestro ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarManoObraSiniestroNuevo(vi_aipinssinmobr As vi_aipinssinmobr) As respopera
            Try

                Dim aipinssinmobr As New aipinssinmobr
                ObjectMapperManager.DefaultInstance.GetMapper(Of vi_aipinssinmobr, aipinssinmobr).Map(vi_aipinssinmobr, aipinssinmobr)
                Dim respopera As New respopera
                Dim aipinssinController As New aipinssinController
                Dim aipinssin As aipinssin = aipinssinController.selaipinssinxid(aipinssinmobr.idaipinssin)
                Dim mbaremo As Decimal = 0
                If (aipinssin IsNot Nothing) Then

                    'segun reunion del dia viernes 11-11-2016 se debe quitar la validacion del monto mayor al baremo cuando
                    'itipomatinssinmobr sea (Salvar o Reparar)
                    If aipinssinmobr.itipomatinssinmobr.ToLower() <> "salvar" And aipinssinmobr.itipomatinssinmobr.ToLower() <> "reparar" Then
                        respopera = Sp_ObtenerBaremoManoDeObra(0, aipinssin.idaipinsenc, aipinssinmobr.idaipmanrepu, aipinssinmobr.itidainssinmobr)
                        mbaremo = respopera.id
                        If (respopera.irespuesta = "1") Then
                            'se realiza la verificacion si el baremo en mayor a cero esto es temporal para no detener el proceso cuando no exista un baremo
                            If (mbaremo > 0) Then
                                If (aipinssinmobr.nprecfininssinmobr > mbaremo) Then
                                    respopera.irespuesta = "0"
                                    respopera.xmsjusuario = "El monto del repuesto " & vi_aipinssinmobr.xnommanrepu & " no puede ser mayor a '" & mbaremo & "' (monto máximo del baremo)"
                                    respopera.xmsjtecnico = "El monto enviado " & aipinssinmobr.nprecfininssinmobr & " es mayor al baremo '" & mbaremo & "' (monto máximo del baremo)"
                                    Return respopera
                                End If
                            End If
                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "Ha ocurrido un error verificando el monto del baremo"
                            respopera.xmsjtecnico = "No se encontro el baremo. " & respopera.xmsjtecnico
                            Return respopera
                        End If
                    End If 'If aipinssinmobr.itipomatinssinmobr <> "Salvar" And aipinssinmobr.itipomatinssinmobr <> "Reparar" Then
                    Dim aipinssinmobrController As New aipinssinmobrController
                    respopera = aipinssinmobrController.modaipinssinmobr(aipinssinmobr)
                Else

                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "Ha ocurrido un error al guardar la mano de obra"
                    respopera.xmsjtecnico = "No se encontro el siniestro. " & aipinssinmobr.idaipinssin
                    Return respopera
                End If


                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarManoObraSiniestroNuevo ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function GuardarInspeccionSiniestro(vi_aipinssin As vi_aipinssin) As respopera
            Try
                Dim aipinssinController As New aipinssinController
                Dim aipinssin As New aipinssin
                Dim respopera As New respopera

                If vi_aipinssin IsNot Nothing Then
                    With aipinssin
                        .idaipinssin = vi_aipinssin.idaipinssin
                        .idaipinsenc = vi_aipinssin.idaipinsenc
                        .nfactinssin = vi_aipinssin.nfactinssin
                        .irepuinssin = vi_aipinssin.irepuinssin
                        .imobrinssin = vi_aipinssin.imobrinssin
                        .xnomaseginssin = vi_aipinssin.xnomaseginssin
                        .idaipmanveh = vi_aipinssin.idaipmanveh
                        .xsucuinssin = vi_aipinssin.xsucuinssin
                        .nkiloinssin = vi_aipinssin.nkiloinssin
                        .xdescinssin = vi_aipinssin.xdescinssin
                        .iestatinssin = vi_aipinssin.iestatinssin
                        .idseglogreg = 0
                    End With

                    'lista_aipinssinmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinssinController.modaipinssin(aipinssin)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    If (respopera.irespuesta = "1") Then

                        Dim aipinsencController As New aipinsencController
                        Dim aipinsenc As New aipinsenc
                        aipinsenc = aipinsencController.selaipinsencxid(vi_aipinssin.idaipinsenc)

                        If (aipinsenc IsNot Nothing) Then
                            'se coloca el cerrar  para que se realice el cierre automatico de la inspeccion al momento de procesarla por la app movil de asi desearlo
                            aipinsenc.icerrarinsenc = True

                            'se realiza la actualizacion del valor de cierre en true
                            aipinsencController.modaipinsenc(aipinsenc)

                        End If

                        'respopera = EnviarFotosSistemaSir(aipinsenc.idaipinsenc, aipinsenc.idaipinsintext, aipinsenc.itipoinsenc)

                        GuardarAipLogeve(vi_aipinssin.idaipinsenc, "SINIESTRO")
                    End If

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro el siniestro"
                    respopera.xmsjtecnico = "No se encoentro el siniestro"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:GuardarInspeccionSiniestro ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ProcesarInspeccionSiniestro(vi_aipinssin As vi_aipinssin) As respopera
            Try
                Dim aipinssinController As New aipinssinController
                Dim aipinssin As New aipinssin
                Dim respopera As New respopera

                'verificar antes de enviar que tengan un  motivo de inspeccion
                'verificar antes de enviar que tengan un  motivo de inspeccion

                If vi_aipinssin IsNot Nothing Then


                    ''se verifica si envio la placa y serial carroceria
                    Dim aipmanvehController As New aipmanvehController
                    Dim aipmanveh As aipmanveh = aipmanvehController.selaipmanvehxid(vi_aipinssin.idaipmanveh)

                    If (aipmanveh Is Nothing) Then
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "Ha ocurrido un error al enviar la inspección."
                        respopera.xmsjtecnico = "No se encontro el vehiculo enc " & vi_aipinssin.idaipmanveh
                        Return respopera
                    End If
                    Dim _error As Boolean = False
                    Dim _msj As String = ""

                    If (aipmanveh.xplacamanveh = "") Then
                        _error = True
                        _msj = "<li>La placa es obligatoria.</li>"
                    End If

                    If (aipmanveh.xsercarrmanveh = "") Then
                        _error = True

                        _msj = _msj & "<li>El serial de la carroceria es obligatorio.</li>"
                    End If

                    If (_error) Then
                        _msj = "<ul>" & _msj & "</ul>"
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = _msj
                        respopera.xmsjtecnico = _msj
                        Return respopera
                    End If

                    With aipinssin
                        .idaipinssin = vi_aipinssin.idaipinssin
                        .idaipinsenc = vi_aipinssin.idaipinsenc
                        .nfactinssin = vi_aipinssin.nfactinssin
                        .irepuinssin = vi_aipinssin.irepuinssin
                        .imobrinssin = vi_aipinssin.imobrinssin
                        .xnomaseginssin = vi_aipinssin.xnomaseginssin
                        .idaipmanveh = vi_aipinssin.idaipmanveh
                        .xsucuinssin = vi_aipinssin.xsucuinssin
                        .nkiloinssin = vi_aipinssin.nkiloinssin
                        .xdescinssin = vi_aipinssin.xdescinssin
                        .iestatinssin = vi_aipinssin.iestatinssin
                        '.iestatinssin = "PROCESADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinssinmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinssinController.modaipinssin(aipinssin)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    Dim existe As Boolean = False


                    ''procesa la inspeccion enc
                    'ModificarInspeccionEstatus(vi_aipinsajusanex.idaipinsenc, "POR AUDITAR")
                    'si es exitoso se porcesa a distribuir la tarea a un auditor
                    If (respopera.irespuesta = "1") Then

                        'se verifican si existen fotos para la inspeccion
                        existe = VerificarExistenciaFotosPeritaje(vi_aipinssin.idaipinsenc)
                        If (existe) Then

                            ''adecuacion para verificar si el Perito envio la inspeccion debe verificar si los datos de la placa y carroceria estan iguales
                            ''de ser asi se elimina el log para que no le muestre esta info al auditor
                            ''Por Deivid Peña 14/12/2016

                            ''no controlo el error para evitar el envio por este caso ya que es algo adicional
                            VerificarDatosDePlacaYCarroceria(vi_aipinssin.idaipinsenc, aipmanveh.xplacamanveh, aipmanveh.xsercarrmanveh)

                            ''Fin Adecucion


                            ''procesa la inspeccion enc
                            respopera = ModificarInspeccionConDistribucionAutomaticaAuditores(vi_aipinssin.idaipinsenc)
                        Else

                            ''se buscan audios o videos para procesar la inspeccion
                            'Dim vi_aipinsarchController As New vi_aipinsarchController
                            'existe = vi_aipinsarchController.ExistePorEncActivos(vi_aipinssin.idaipinsenc)
                            'If (existe) Then
                            '    ''procesa la inspeccion enc
                            '    respopera = ModificarInspeccionConDistribucionAutomaticaAuditores(vi_aipinssin.idaipinsenc)
                            'Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "Debe enviar fotos desde la app móvil para poder enviar la inspección."
                            respopera.xmsjtecnico = "Debe enviar fotos desde la app móvil para poder enviar la inspección."

                            'End If


                        End If

                    End If

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro el siniestro"
                    respopera.xmsjtecnico = "No se encontro el siniestro"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ProcesarInspeccionSiniestro ", ex)
                Return respopera
            End Try
        End Function

        ''Funcion para eliminar el log de Placa y/o Carroceria para un encabezado, siempre y cuando la placa y/o el serial de la carroceria sean diferentes al original
        Public Function VerificarDatosDePlacaYCarroceria(idaipinsenc As Decimal, xplacamanveh As String, xsercarrmanveh As String) As respopera

            ''se realiza la busqueda del encabezado
            Dim aipinsencController As New aipinsencController
            Dim aipinsenc As aipinsenc = aipinsencController.selaipinsencxid(idaipinsenc)
            Dim deleteLogPlaca As Boolean = False
            Dim deleteLogSerCarr As Boolean = False
            Dim lista_aiplogeve As List(Of aiplogeve) = New List(Of aiplogeve)
            Dim xnomlogeve As String = ""
            Dim aiplogeveController As New aiplogeveController
            Dim respopera As New respopera
            If (aipinsenc IsNot Nothing) Then

                ''se verifican si los datos de la placa son iguales de ser asi se elimina el log de la placa
                If (RTrim(LTrim(aipinsenc.xplacinsenc.ToUpper())) = RTrim(LTrim(xplacamanveh.ToUpper()))) Then
                    deleteLogPlaca = True ''se guarda true si se debe eliminar si no se mantine false
                End If

                ''se verifican si los datos del serial de la carroceria son iguales de ser asi se elimina el log de la carroceria
                If (RTrim(LTrim(aipinsenc.xsercarrinsenc.ToUpper())) = RTrim(LTrim(xsercarrmanveh.ToUpper()))) Then
                    deleteLogSerCarr = True ''se guarda true si se debe eliminar si no se mantine false
                End If

                ''si alguno de los 2 es true se realiza la busqueda del log por encabezado
                If (deleteLogPlaca = True Or deleteLogSerCarr = True) Then
                    ''se busca el log por encabezado
                    lista_aiplogeve = ObtenerLogEvePorEnc(aipinsenc.idaipinsenc)

                    If (lista_aiplogeve.Count > 0) Then
                        ''se recorre el Log
                        For i As Integer = 0 To lista_aiplogeve.Count - 1
                            ''se verifica si el log posee una palabra "placa" o "carroceria"

                            xnomlogeve = lista_aiplogeve(i).xnomlogeve.ToLower() ''se coloca minuscula todo

                            ''si encuentra una cadena con el nombre placa y la variable booleana "deleteLogPlaca" esta en true, se elimina el registro
                            ''si no existe la cadena se verifica la siguiente que seria carroceria
                            If (xnomlogeve.IndexOf("placa") <> -1 And deleteLogPlaca) Then
                                respopera = aiplogeveController.eliaiplogeve(lista_aiplogeve(i).idaiplogeve)

                                ''si encuentra una cadena con el nombre carroceria y la variable booleana "deleteLogSerCarr" esta en true, se elimina el registro
                            ElseIf (xnomlogeve.IndexOf("carroceria") <> -1 And deleteLogSerCarr) Then

                                respopera = aiplogeveController.eliaiplogeve(lista_aiplogeve(i).idaiplogeve)

                            End If
                        Next
                    End If


                End If

            End If


        End Function

        <HttpPost()> _
        Public Function RechazarInspeccionSiniestro(vi_aipinssin As vi_aipinssin) As respopera
            Try
                Dim aipinssinController As New aipinssinController
                Dim aipinssin As New aipinssin
                Dim respopera As New respopera

                If vi_aipinssin IsNot Nothing Then
                    With aipinssin
                        .idaipinssin = vi_aipinssin.idaipinssin
                        .idaipinsenc = vi_aipinssin.idaipinsenc
                        .nfactinssin = vi_aipinssin.nfactinssin
                        .irepuinssin = vi_aipinssin.irepuinssin
                        .imobrinssin = vi_aipinssin.imobrinssin
                        .xnomaseginssin = vi_aipinssin.xnomaseginssin
                        .idaipmanveh = vi_aipinssin.idaipmanveh
                        .xsucuinssin = vi_aipinssin.xsucuinssin
                        .nkiloinssin = vi_aipinssin.nkiloinssin
                        .xdescinssin = vi_aipinssin.xdescinssin
                        .iestatinssin = vi_aipinssin.iestatinssin
                        '.iestatinssin = "RECHAZADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinssinmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinssinController.modaipinssin(aipinssin)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    ''procesa la inspeccion enc
                    ''vuelve al estatus de POR PROCESAR PARA QUE EL PERITO LA VERIFIQUE
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinssin.idaipinsenc, "POR PROCESAR", "RECHAZAR")

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro el siniestro"
                    respopera.xmsjtecnico = "No se encontro el siniestro"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:RechazarInspeccionSiniestro ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function CancelarInspeccionSiniestro(vi_aipinssin As vi_aipinssin) As respopera
            Try
                Dim aipinssinController As New aipinssinController
                Dim aipinssin As New aipinssin
                Dim respopera As New respopera

                If vi_aipinssin IsNot Nothing Then
                    With aipinssin
                        .idaipinssin = vi_aipinssin.idaipinssin
                        .idaipinsenc = vi_aipinssin.idaipinsenc
                        .nfactinssin = vi_aipinssin.nfactinssin
                        .irepuinssin = vi_aipinssin.irepuinssin
                        .imobrinssin = vi_aipinssin.imobrinssin
                        .xnomaseginssin = vi_aipinssin.xnomaseginssin
                        .idaipmanveh = vi_aipinssin.idaipmanveh
                        .xsucuinssin = vi_aipinssin.xsucuinssin
                        .nkiloinssin = vi_aipinssin.nkiloinssin
                        .xdescinssin = vi_aipinssin.xdescinssin
                        .iestatinssin = vi_aipinssin.iestatinssin
                        '.iestatinssin = "NO PROCEDENTE" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinssinmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinssinController.modaipinssin(aipinssin)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinssin.idaipinsenc, "NO PROCEDENTE", "CANCELAR")

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro el siniestro"
                    respopera.xmsjtecnico = "No se encontro el siniestro"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:CancelarInspeccionSiniestro ", ex)
                Return respopera
            End Try
        End Function


        <HttpPost()> _
        Public Function Sp_ModificarDatosInspeccionSir(idaipinsenc As Decimal) As respopera

            Try

                Dim param1 As New Client.OracleParameter
                param1.OracleDbType = Client.OracleDbType.Decimal
                param1.Precision = 18
                param1.Scale = 0
                param1.Value = 0
                param1.ParameterName = "p_idsegmanusuop"

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Varchar2
                param2.Size = 20
                param2.Value = "aipauto"
                param2.ParameterName = "p_xnombrecorto"


                Dim param3 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 1
                param3.ParameterName = "p_irespuesta"
                param3.Direction = ParameterDirection.Output

                Dim param4 As New Client.OracleParameter
                param4.OracleDbType = Client.OracleDbType.Varchar2
                param4.Size = 300
                param4.ParameterName = "p_xmsjusuario"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Varchar2
                param5.Size = 300
                param5.ParameterName = "p_xmsjtecnico"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Varchar2
                param6.Size = 300
                param6.ParameterName = "p_coderrorlog"
                param6.Direction = ParameterDirection.Output


                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Decimal
                param7.Precision = 18
                param7.Scale = 0
                param7.Value = idaipinsenc
                param7.ParameterName = "p_idaipinsenc"


                Dim xdeclare As String = "DECLARE v_p_idsegmanusuop FLOAT; v_p_xnombrecorto VARCHAR2(32767); v_p_irespuesta VARCHAR2(32767); v_p_xmsjusuario VARCHAR2(32767); v_p_xmsjtecnico VARCHAR2(32767); v_p_coderrorlog VARCHAR2(32767); v_p_idaipinsenc float;"
                Dim xsp As String = "begin SP_RNMODIFDATOSORIGEN (:v_p_idsegmanusuop,:v_p_xnombrecorto,:v_p_irespuesta,:v_p_xmsjusuario,:v_p_xmsjtecnico,:v_p_coderrorlog,:v_p_idaipinsenc); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7)

                Dim respopera As New respopera
                respopera.irespuesta = param3.Value.ToString()
                respopera.xmsjusuario = param4.Value.ToString()
                respopera.xmsjtecnico = param5.Value.ToString()


                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:Sp_ObtenerBaremoManoDeObra ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function AceptarInspeccionSiniestro(vi_aipinssin As vi_aipinssin) As respopera
            Try
                Dim aipinssinController As New aipinssinController
                Dim aipinssin As New aipinssin
                Dim respopera As New respopera

                Dim xambiante As String = (ConfigurationManager.AppSettings("ambiente")) 'aqui se esta haciendo lo del ambiente para cuando este en desarrollo y de error en proceso de guardar en el sir no mande error


                If vi_aipinssin IsNot Nothing Then


                    ' aqui llamo a un metodo para verificar si en el sir cambio el numero de carroceria o placa y de ser asi cambiarlo en ela tabla aipinsenc antes de hacer la verificacion de abajo
                    Sp_ModificarDatosInspeccionSir(vi_aipinssin.idaipinsenc)


                    Dim aipinsencController As New aipinsencController
                    Dim aipinsenc As aipinsenc = aipinsencController.selaipinsencxid(vi_aipinssin.idaipinsenc)

                    If (aipinsenc IsNot Nothing) Then

                        ''se realiza la validacion de la placa y el serial de la carroceria entre el cargado por el Perito y el original almacenado en aipinsenc
                        Dim aipmanvehController As New aipmanvehController
                        Dim aipmanveh As aipmanveh = aipmanvehController.selaipmanvehxid(vi_aipinssin.idaipmanveh)

                        If (aipmanveh IsNot Nothing) Then
                            Dim _error As Boolean = False
                            Dim _msj As String = ""
                            ''se valida si las placas son diferentes
                            If (aipinsenc.xplacinsenc.Trim().ToUpper() <> aipmanveh.xplacamanveh.Trim().ToUpper()) Then
                                _error = True
                                _msj = "La placa no coincide con la original, Original: " & aipinsenc.xplacinsenc & " , Nueva: " & aipmanveh.xplacamanveh

                            End If


                            ''se valida si los seriales de la carroceria son diferentes
                            If (aipinsenc.xsercarrinsenc.Trim().ToUpper() <> aipmanveh.xsercarrmanveh.Trim().ToUpper()) Then
                                _error = True
                                If (_msj.Length > 0) Then
                                    _msj = _msj & " y "
                                End If
                                _msj = _msj & "El serial de la carroceria no coincide con el original, Original: " & aipinsenc.xsercarrinsenc & " , Nueva: " & aipmanveh.xsercarrmanveh
                            End If

                            If (_error) Then
                                respopera.irespuesta = "0"
                                respopera.xmsjusuario = "No puede cerrar la inspección ya que " & _msj
                                respopera.xmsjtecnico = respopera.xmsjusuario
                                Return respopera
                            End If
                        End If


                        'primero transfiero las fotos antes de llamar al transferir sir
                        respopera = EnviarFotosSistemaSir(aipinsenc.idaipinsenc, aipinsenc.idaipinsintext, aipinsenc.itipoinsenc)
                        'respopera.irespuesta = "1"                         
                        If (respopera.irespuesta = "0") And xambiante = "prod" Then 'si es desa no mandar error esto claro esta lo pueda cambiar dependiendo de lo que quieran probar
                            ' para desa esto se agrego dado que existen problemas para guardar las imagenes en la ruta de red desde el servidor de desa  

                            'If (respopera.irespuesta = "0") Then 'esta es la forma correcta sin importar el ambiente
                            respopera.xmsjusuario = "Ha ocurrido un error con la transferencia de la fotos al SIR."
                            respopera.xmsjtecnico = "Ha ocurrido un error con la transferencia de la fotos al SIR."
                        Else
                            ''se llama al SP para realizar la transferencia de la inspeccion a su sistema interno
                            respopera = Sp_TranferenciaCierreInspeccion(0, aipinsenc.idaipinsintext, aipinsenc.itipoinsenc)

                            ''se verifica el proceso de transferencia
                            If (respopera.irespuesta = "0") And xambiante = "prod" Then 'si es desa no mandar error esto claro esta lo pueda cambiar dependiendo de lo que quieran probar
                                ' para desa esto se agrego dado que existen problemas para guardar las imagenes en la ruta de red desde el servidor de desa  

                                'If (respopera.irespuesta = "0") then 'esta es la forma correcta sin importar el ambiente
                                ''se retorna operacion existosa del cierre pero error de la transferencia interna
                                'respopera.xmsjusuario = "Ha ocurrido un error con la transferencia interna de la inspección."
                                'respopera.xmsjtecnico = "Ha ocurrido un error con la transferencia interna de la inspección SIR."
                            Else
                                With aipinssin
                                    .idaipinssin = vi_aipinssin.idaipinssin
                                    .idaipinsenc = vi_aipinssin.idaipinsenc
                                    .nfactinssin = vi_aipinssin.nfactinssin
                                    .irepuinssin = vi_aipinssin.irepuinssin
                                    .imobrinssin = vi_aipinssin.imobrinssin
                                    .xnomaseginssin = vi_aipinssin.xnomaseginssin
                                    .idaipmanveh = vi_aipinssin.idaipmanveh
                                    .xsucuinssin = vi_aipinssin.xsucuinssin
                                    .nkiloinssin = vi_aipinssin.nkiloinssin
                                    .xdescinssin = vi_aipinssin.xdescinssin
                                    .iestatinssin = vi_aipinssin.iestatinssin
                                    '.iestatinssin = "ACEPTADA" '-->VERIFICAR
                                    .idseglogreg = 0
                                End With

                                'lista_aipinssinmobr(i).iestatinsenc = "PROCEDENTE"
                                respopera = aipinssinController.modaipinssin(aipinssin)
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id

                                ''procesa la inspeccion enc
                                ModificarInspeccionEstatusYTipoAccion(vi_aipinssin.idaipinsenc, "PROCEDENTE", "ACEPTAR")

                                'respopera.xmsjusuario = "Operación realizada satisfactoriamente."
                                'respopera.xmsjtecnico = "Operación realizada satisfactoriamente."                            
                            End If 'transferir sir
                        End If 'transferir sir fotos
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro el siniestro"
                    respopera.xmsjtecnico = "No se encontro el siniestro"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AceptarInspeccionSiniestro ", ex)
                Return respopera
            End Try
        End Function

        '<HttpPost()> _
        'Public Function AceptarInspeccionSiniestro(vi_aipinssin As vi_aipinssin) As respopera
        '    Try
        '        Dim aipinssinController As New aipinssinController
        '        Dim aipinssin As New aipinssin
        '        Dim respopera As New respopera

        '        If vi_aipinssin IsNot Nothing Then

        '            Dim aipinsencController As New aipinsencController
        '            Dim aipinsenc As aipinsenc = aipinsencController.selaipinsencxid(vi_aipinssin.idaipinsenc)

        '            If (aipinsenc IsNot Nothing) Then
        '                ''se llama al SP para realizar la transferencia de la inspeccion a su sistema interno
        '                respopera = Sp_TranferenciaCierreInspeccion(0, aipinsenc.idaipinsintext, aipinsenc.itipoinsenc)

        '                ''se verifica el proceso de transferencia
        '                If (respopera.irespuesta = "0") Then
        '                    ''se retorna operacion existosa del cierre pero error de la transferencia interna
        '                    respopera.xmsjusuario = "Ha ocurrido un error con la transferencia interna de la inspección."
        '                    respopera.xmsjtecnico = "Ha ocurrido un error con la transferencia interna de la inspección SIR."
        '                Else

        '                    With aipinssin
        '                        .idaipinssin = vi_aipinssin.idaipinssin
        '                        .idaipinsenc = vi_aipinssin.idaipinsenc
        '                        .nfactinssin = vi_aipinssin.nfactinssin
        '                        .irepuinssin = vi_aipinssin.irepuinssin
        '                        .imobrinssin = vi_aipinssin.imobrinssin
        '                        .xnomaseginssin = vi_aipinssin.xnomaseginssin
        '                        .idaipmanveh = vi_aipinssin.idaipmanveh
        '                        .xsucuinssin = vi_aipinssin.xsucuinssin
        '                        .nkiloinssin = vi_aipinssin.nkiloinssin
        '                        .xdescinssin = vi_aipinssin.xdescinssin
        '                        .iestatinssin = vi_aipinssin.iestatinssin
        '                        '.iestatinssin = "ACEPTADA" '-->VERIFICAR
        '                        .idseglogreg = 0
        '                    End With

        '                    'lista_aipinssinmobr(i).iestatinsenc = "PROCEDENTE"
        '                    respopera = aipinssinController.modaipinssin(aipinssin)
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id

        '                    ''procesa la inspeccion enc
        '                    ModificarInspeccionEstatusYTipoAccion(vi_aipinssin.idaipinsenc, "PROCEDENTE", "ACEPTAR")

        '                    'respopera.xmsjusuario = "Operación realizada satisfactoriamente."
        '                    'respopera.xmsjtecnico = "Operación realizada satisfactoriamente."
        '                End If
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro el siniestro"
        '            respopera.xmsjtecnico = "No se encontro el siniestro"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function

        <HttpPost()> _
        Public Function ActualizarRepuestosLimpiezaSuscripcion(lista_vi_aipinslimsusrepu As List(Of vi_aipinslimsusrepu)) As respopera
            Try
                'Dim aipinslimsusrepuController As New aipinslimsusrepuController
                Dim respopera As New respopera

                If lista_vi_aipinslimsusrepu IsNot Nothing Then

                    If lista_vi_aipinslimsusrepu.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinslimsusrepu.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinslimsusrepu.Count - 1
                                'lista_aipinslimsusrepu(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsLimsusRepu(lista_vi_aipinslimsusrepu(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registro actualizado con éxito"
                            respopera.xmsjtecnico = "Registro actualizado con éxito"
                            respopera.id = 0
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun repuesto"
                        respopera.xmsjtecnico = "la lista lista_aipinslimsusrepu llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinslimsusrepu llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarRepuestosLimpiezaSuscripcion ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ObtenerRepuestosLimpiezaSuscripcion(idaipinslimsus As Decimal) As List(Of vi_aipinslimsusrepu)

            Dim vi_aipinslimsusrepuController As New vi_aipinslimsusrepuController
            Dim lista_vi_aipinslimsusrepu As List(Of vi_aipinslimsusrepu) = vi_aipinslimsusrepuController.selvi_aipinslimsusrepuxidaipinslimsus(idaipinslimsus)


            Return lista_vi_aipinslimsusrepu

        End Function

        <HttpPost()> _
        Public Function ObtenerPrecioTotalRepuestosLimpiezaSuscripcion(idaipinslimsus As Decimal) As Decimal

            Dim vi_aipinslimsusrepuController As New vi_aipinslimsusrepuController
            Dim totalnprecfininslimsusrepu As Decimal = vi_aipinslimsusrepuController.selnprecfininslimsusrepuxidaipinslimsus(idaipinslimsus)


            Return totalnprecfininslimsusrepu

        End Function

        <HttpPost()> _
        Public Function ObtenerMobrLimpiezaSuscripcion(idaipinslimsus As Decimal) As List(Of vi_aipinslimsusmobr)

            Dim vi_aipinslimsusmobrController As New vi_aipinslimsusmobrController
            Dim lista_vi_aipinslimsusmobr As List(Of vi_aipinslimsusmobr) = vi_aipinslimsusmobrController.selvi_aipinslimsusmobrxidaipinslimsus(idaipinslimsus)


            Return lista_vi_aipinslimsusmobr

        End Function

        <HttpPost()> _
        Public Function ObtenerPrecioTotalMobrLimpiezaSuscripcion(idaipinslimsus As Decimal) As Decimal

            Dim vi_aipinslimsusmobrController As New vi_aipinslimsusmobrController
            Dim totalnprecfininslimsusmobr As Decimal = vi_aipinslimsusmobrController.selnprecfininslimsusmobrxidaipinslimsus(idaipinslimsus)


            Return totalnprecfininslimsusmobr

        End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ActualizarRepuestosLimpiezaSiniestro(lista_aipinslimsinrepu As List(Of aipinslimsinrepu)) As respopera
        '    Try
        '        Dim aipinslimsinrepuController As New aipinslimsinrepuController
        '        Dim respopera As New respopera

        '        If lista_aipinslimsinrepu.Count > 0 Then
        '            Dim respopera2 As respopera
        '            If lista_aipinslimsinrepu.Count > 0 Then
        '                For i As Integer = 0 To lista_aipinslimsinrepu.Count - 1
        '                    'lista_aipinslimsinrepu(i).iestatinsenc = "PROCEDENTE"
        '                    respopera2 = aipinslimsinrepuController.modaipinslimsinrepu(lista_aipinslimsinrepu(i))
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id
        '                Next
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ningun repuesto"
        '            respopera.xmsjtecnico = "la lista lista_aipinslimsinrepu llego sin registros"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ActualizarMobrsLimpiezaSuscripcion(lista_aipinslimsusmobr As List(Of aipinslimsusmobr)) As respopera
        '    Try
        '        Dim aipinslimsusmobrController As New aipinslimsusmobrController
        '        Dim respopera As New respopera

        '        If lista_aipinslimsusmobr.Count > 0 Then
        '            Dim respopera2 As respopera
        '            If lista_aipinslimsusmobr.Count > 0 Then
        '                For i As Integer = 0 To lista_aipinslimsusmobr.Count - 1
        '                    'lista_aipinslimsusmobr(i).iestatinsenc = "PROCEDENTE"
        '                    respopera2 = aipinslimsusmobrController.modaipinslimsusmobr(lista_aipinslimsusmobr(i))
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id
        '                Next
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ningun repuesto"
        '            respopera.xmsjtecnico = "la lista lista_aipinslimsusmobr llego sin registros"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function ActualizarRepuestosLimpiezaSiniestro(lista_vi_aipinslimsinrepu As List(Of vi_aipinslimsinrepu)) As respopera
            Try
                'Dim aipinslimsinrepuController As New aipinslimsinrepuController
                Dim respopera As New respopera

                If lista_vi_aipinslimsinrepu IsNot Nothing Then
                    If lista_vi_aipinslimsinrepu.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinslimsinrepu.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinslimsinrepu.Count - 1
                                'lista_aipinslimsinrepu(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsLimSinRepu(lista_vi_aipinslimsinrepu(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registro actualizado con éxito"
                            respopera.xmsjtecnico = "Registro actualizado con éxito"
                            respopera.id = 0
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun repuesto"
                        respopera.xmsjtecnico = "la lista lista_aipinslimsinrepu llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinslimsinrepu llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarRepuestosLimpiezaSiniestro ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function GuardarInspeccionLimpiezaSuscripcion(vi_aipinslimsus As vi_aipinslimsus) As respopera
            Try
                Dim aipinslimsusController As New aipinslimsusController
                Dim aipinslimsus As New aipinslimsus
                Dim respopera As New respopera

                If vi_aipinslimsus IsNot Nothing Then
                    With aipinslimsus
                        .idaipinslimsus = vi_aipinslimsus.idaipinslimsus
                        .idaipinsenc = vi_aipinslimsus.idaipinsenc
                        .nfactinslimsus = vi_aipinslimsus.nfactinslimsus
                        .irepuinslimsus = vi_aipinslimsus.irepuinslimsus
                        .imobrinslimsus = vi_aipinslimsus.imobrinslimsus
                        .xnomaseginslimsus = vi_aipinslimsus.xnomaseginslimsus
                        .idaipmanveh = vi_aipinslimsus.idaipmanveh
                        .xsucuinslimsus = vi_aipinslimsus.xsucuinslimsus
                        .nkiloinslimsus = vi_aipinslimsus.nkiloinslimsus
                        .xdescinslimsus = vi_aipinslimsus.xdescinslimsus
                        .iestatinslimsus = vi_aipinslimsus.iestatinslimsus
                        .idseglogreg = 0
                    End With

                    'lista_aipinslimsusmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinslimsusController.modaipinslimsus(aipinslimsus)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    If (respopera.irespuesta = "1") Then

                        Dim aipinsencController As New aipinsencController
                        Dim aipinsenc As New aipinsenc
                        aipinsenc = aipinsencController.selaipinsencxid(vi_aipinslimsus.idaipinsenc)

                        If (aipinsenc IsNot Nothing) Then
                            'se coloca el cerrar  para que se realice el cierre automatico de la inspeccion al momento de procesarla por la app movil de asi desearlo
                            aipinsenc.icerrarinsenc = True

                            'se realiza la actualizacion del valor de cierre en true
                            aipinsencController.modaipinsenc(aipinsenc)

                        End If

                        GuardarAipLogeve(vi_aipinslimsus.idaipinsenc, "LIMPIEZA DE DAÑOS POR SUSCRIPCION")
                    End If

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinslimsusmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:GuardarInspeccionLimpiezaSuscripcion ", ex)
                Return respopera
            End Try
        End Function
        <HttpPost()> _
        Public Function ActualizarMobrsLimpiezaSuscripcion(lista_vi_aipinslimsusmobr As List(Of vi_aipinslimsusmobr)) As respopera
            Try
                'Dim aipinslimsusmobrController As New aipinslimsusmobrController
                Dim respopera As New respopera

                If lista_vi_aipinslimsusmobr IsNot Nothing Then
                    If lista_vi_aipinslimsusmobr.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinslimsusmobr.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinslimsusmobr.Count - 1
                                'lista_aipinslimsusmobr(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsLimsusMobr(lista_vi_aipinslimsusmobr(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registro actualizado con éxito"
                            respopera.xmsjtecnico = "Registro actualizado con éxito"
                            respopera.id = 0
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun repuesto"
                        respopera.xmsjtecnico = "la lista lista_aipinslimsusmobr llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinslimsusmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarMobrsLimpiezaSuscripcion ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function ProcesarInspeccionLimpiezaSuscripcion(vi_aipinslimsus As vi_aipinslimsus) As respopera
            Try
                Dim aipinslimsusController As New aipinslimsusController
                Dim aipinslimsus As New aipinslimsus
                Dim respopera As New respopera

                If vi_aipinslimsus IsNot Nothing Then
                    With aipinslimsus
                        .idaipinslimsus = vi_aipinslimsus.idaipinslimsus
                        .idaipinsenc = vi_aipinslimsus.idaipinsenc
                        .nfactinslimsus = vi_aipinslimsus.nfactinslimsus
                        .irepuinslimsus = vi_aipinslimsus.irepuinslimsus
                        .imobrinslimsus = vi_aipinslimsus.imobrinslimsus
                        .xnomaseginslimsus = vi_aipinslimsus.xnomaseginslimsus
                        .idaipmanveh = vi_aipinslimsus.idaipmanveh
                        .xsucuinslimsus = vi_aipinslimsus.xsucuinslimsus
                        .nkiloinslimsus = vi_aipinslimsus.nkiloinslimsus
                        .xdescinslimsus = vi_aipinslimsus.xdescinslimsus
                        .iestatinslimsus = vi_aipinslimsus.iestatinslimsus
                        '.iestatinslimsus = "PROCESADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinslimsusmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinslimsusController.modaipinslimsus(aipinslimsus)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    Dim existe As Boolean = False


                    ''procesa la inspeccion enc
                    'ModificarInspeccionEstatus(vi_aipinsajusanex.idaipinsenc, "POR AUDITAR")
                    'si es exitoso se porcesa a distribuir la tarea a un auditor
                    If (respopera.irespuesta = "1") Then

                        'se verifican si existen fotos para la inspeccion
                        existe = VerificarExistenciaFotosPeritaje(vi_aipinslimsus.idaipinsenc)
                        If (existe) Then
                            ''procesa la inspeccion enc
                            respopera = ModificarInspeccionConDistribucionAutomaticaAuditores(vi_aipinslimsus.idaipinsenc)
                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "Debe enviar fotos desde la app móvil para poder enviar la inspección."
                            respopera.xmsjtecnico = "Debe enviar fotos desde la app móvil para poder enviar la inspección."
                        End If


                    End If

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinslimsusmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ProcesarInspeccionLimpiezaSuscripcion ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function RechazarInspeccionLimpiezaSuscripcion(vi_aipinslimsus As vi_aipinslimsus) As respopera
            Try
                Dim aipinslimsusController As New aipinslimsusController
                Dim aipinslimsus As New aipinslimsus
                Dim respopera As New respopera

                If vi_aipinslimsus IsNot Nothing Then
                    With aipinslimsus
                        .idaipinslimsus = vi_aipinslimsus.idaipinslimsus
                        .idaipinsenc = vi_aipinslimsus.idaipinsenc
                        .nfactinslimsus = vi_aipinslimsus.nfactinslimsus
                        .irepuinslimsus = vi_aipinslimsus.irepuinslimsus
                        .imobrinslimsus = vi_aipinslimsus.imobrinslimsus
                        .xnomaseginslimsus = vi_aipinslimsus.xnomaseginslimsus
                        .idaipmanveh = vi_aipinslimsus.idaipmanveh
                        .xsucuinslimsus = vi_aipinslimsus.xsucuinslimsus
                        .nkiloinslimsus = vi_aipinslimsus.nkiloinslimsus
                        .xdescinslimsus = vi_aipinslimsus.xdescinslimsus
                        .iestatinslimsus = vi_aipinslimsus.iestatinslimsus
                        ' .iestatinslimsus = "RECHAZADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinslimsusmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinslimsusController.modaipinslimsus(aipinslimsus)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinslimsus.idaipinsenc, "POR PROCESAR", "RECHAZAR")

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinslimsusmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:RechazarInspeccionLimpiezaSuscripcion ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function CancelarInspeccionLimpiezaSuscripcion(vi_aipinslimsus As vi_aipinslimsus) As respopera
            Try
                Dim aipinslimsusController As New aipinslimsusController
                Dim aipinslimsus As New aipinslimsus
                Dim respopera As New respopera

                If vi_aipinslimsus IsNot Nothing Then
                    With aipinslimsus
                        .idaipinslimsus = vi_aipinslimsus.idaipinslimsus
                        .idaipinsenc = vi_aipinslimsus.idaipinsenc
                        .nfactinslimsus = vi_aipinslimsus.nfactinslimsus
                        .irepuinslimsus = vi_aipinslimsus.irepuinslimsus
                        .imobrinslimsus = vi_aipinslimsus.imobrinslimsus
                        .xnomaseginslimsus = vi_aipinslimsus.xnomaseginslimsus
                        .idaipmanveh = vi_aipinslimsus.idaipmanveh
                        .xsucuinslimsus = vi_aipinslimsus.xsucuinslimsus
                        .nkiloinslimsus = vi_aipinslimsus.nkiloinslimsus
                        .xdescinslimsus = vi_aipinslimsus.xdescinslimsus
                        .iestatinslimsus = vi_aipinslimsus.iestatinslimsus
                        '.iestatinslimsus = "NO PROCEDENTE" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinslimsusmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinslimsusController.modaipinslimsus(aipinslimsus)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinslimsus.idaipinsenc, "NO PROCEDENTE", "CANCELAR")

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinslimsusmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:CancelarInspeccionLimpiezaSuscripcion ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function AceptarInspeccionLimpiezaSuscripcion(vi_aipinslimsus As vi_aipinslimsus) As respopera
            Try
                Dim aipinslimsusController As New aipinslimsusController
                Dim aipinslimsus As New aipinslimsus
                Dim respopera As New respopera

                If vi_aipinslimsus IsNot Nothing Then
                    With aipinslimsus
                        .idaipinslimsus = vi_aipinslimsus.idaipinslimsus
                        .idaipinsenc = vi_aipinslimsus.idaipinsenc
                        .nfactinslimsus = vi_aipinslimsus.nfactinslimsus
                        .irepuinslimsus = vi_aipinslimsus.irepuinslimsus
                        .imobrinslimsus = vi_aipinslimsus.imobrinslimsus
                        .xnomaseginslimsus = vi_aipinslimsus.xnomaseginslimsus
                        .idaipmanveh = vi_aipinslimsus.idaipmanveh
                        .xsucuinslimsus = vi_aipinslimsus.xsucuinslimsus
                        .nkiloinslimsus = vi_aipinslimsus.nkiloinslimsus
                        .xdescinslimsus = vi_aipinslimsus.xdescinslimsus
                        .iestatinslimsus = vi_aipinslimsus.iestatinslimsus
                        '.iestatinslimsus = "ACEPTADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinslimsusmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinslimsusController.modaipinslimsus(aipinslimsus)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinslimsus.idaipinsenc, "PROCEDENTE", "ACEPTAR")
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinslimsusmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AceptarInspeccionLimpiezaSuscripcion ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function GuardarInspeccionLimpiezaSiniestro(vi_aipinslimsin As vi_aipinslimsin) As respopera
            Try
                Dim aipinslimsinController As New aipinslimsinController
                Dim aipinslimsin As New aipinslimsin
                Dim respopera As New respopera

                If vi_aipinslimsin IsNot Nothing Then
                    With aipinslimsin
                        .idaipinslimsin = vi_aipinslimsin.idaipinslimsin
                        .idaipinsenc = vi_aipinslimsin.idaipinsenc
                        .nfactinslimsin = vi_aipinslimsin.nfactinslimsin
                        .irepuinslimsin = vi_aipinslimsin.irepuinslimsin
                        .imobrinslimsin = vi_aipinslimsin.imobrinslimsin
                        .xnomaseginslimsin = vi_aipinslimsin.xnomaseginslimsin
                        .idaipmanveh = vi_aipinslimsin.idaipmanveh
                        .xsucuinslimsin = vi_aipinslimsin.xsucuinslimsin
                        .nkiloinslimsin = vi_aipinslimsin.nkiloinslimsin
                        .xdescinslimsin = vi_aipinslimsin.xdescinslimsin
                        .iestatinslimsin = vi_aipinslimsin.iestatinslimsin
                        .idseglogreg = 0
                    End With

                    'lista_aipinslimsinmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinslimsinController.modaipinslimsin(aipinslimsin)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    If (respopera.irespuesta = "1") Then

                        Dim aipinsencController As New aipinsencController
                        Dim aipinsenc As New aipinsenc
                        aipinsenc = aipinsencController.selaipinsencxid(vi_aipinslimsin.idaipinsenc)

                        If (aipinsenc IsNot Nothing) Then
                            'se coloca el cerrar  para que se realice el cierre automatico de la inspeccion al momento de procesarla por la app movil de asi desearlo
                            aipinsenc.icerrarinsenc = True

                            'se realiza la actualizacion del valor de cierre en true
                            aipinsencController.modaipinsenc(aipinsenc)

                        End If

                        GuardarAipLogeve(vi_aipinslimsin.idaipinsenc, "LIMPIEZA DE DAÑOS POR SINIESTRO")
                    End If

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinslimsinmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:GuardarInspeccionLimpiezaSiniestro ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function ProcesarInspeccionLimpiezaSiniestro(vi_aipinslimsin As vi_aipinslimsin) As respopera
            Try
                Dim aipinslimsinController As New aipinslimsinController
                Dim aipinslimsin As New aipinslimsin
                Dim respopera As New respopera

                If vi_aipinslimsin IsNot Nothing Then
                    With aipinslimsin
                        .idaipinslimsin = vi_aipinslimsin.idaipinslimsin
                        .idaipinsenc = vi_aipinslimsin.idaipinsenc
                        .nfactinslimsin = vi_aipinslimsin.nfactinslimsin
                        .irepuinslimsin = vi_aipinslimsin.irepuinslimsin
                        .imobrinslimsin = vi_aipinslimsin.imobrinslimsin
                        .xnomaseginslimsin = vi_aipinslimsin.xnomaseginslimsin
                        .idaipmanveh = vi_aipinslimsin.idaipmanveh
                        .xsucuinslimsin = vi_aipinslimsin.xsucuinslimsin
                        .nkiloinslimsin = vi_aipinslimsin.nkiloinslimsin
                        .xdescinslimsin = vi_aipinslimsin.xdescinslimsin
                        .iestatinslimsin = vi_aipinslimsin.iestatinslimsin
                        '.iestatinslimsin = "PROCESADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinslimsinmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinslimsinController.modaipinslimsin(aipinslimsin)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    Dim existe As Boolean = False


                    ''procesa la inspeccion enc
                    'ModificarInspeccionEstatus(vi_aipinsajusanex.idaipinsenc, "POR AUDITAR")
                    'si es exitoso se porcesa a distribuir la tarea a un auditor
                    If (respopera.irespuesta = "1") Then

                        'se verifican si existen fotos para la inspeccion
                        existe = VerificarExistenciaFotosPeritaje(vi_aipinslimsin.idaipinsenc)
                        If (existe) Then
                            ''procesa la inspeccion enc
                            respopera = ModificarInspeccionConDistribucionAutomaticaAuditores(vi_aipinslimsin.idaipinsenc)
                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "Debe enviar fotos desde la app móvil para poder enviar la inspección."
                            respopera.xmsjtecnico = "Debe enviar fotos desde la app móvil para poder enviar la inspección."
                        End If


                    End If

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinslimsinmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ProcesarInspeccionLimpiezaSiniestro ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function RechazarInspeccionLimpiezaSiniestro(vi_aipinslimsin As vi_aipinslimsin) As respopera
            Try
                Dim aipinslimsinController As New aipinslimsinController
                Dim aipinslimsin As New aipinslimsin
                Dim respopera As New respopera

                If vi_aipinslimsin IsNot Nothing Then
                    With aipinslimsin
                        .idaipinslimsin = vi_aipinslimsin.idaipinslimsin
                        .idaipinsenc = vi_aipinslimsin.idaipinsenc
                        .nfactinslimsin = vi_aipinslimsin.nfactinslimsin
                        .irepuinslimsin = vi_aipinslimsin.irepuinslimsin
                        .imobrinslimsin = vi_aipinslimsin.imobrinslimsin
                        .xnomaseginslimsin = vi_aipinslimsin.xnomaseginslimsin
                        .idaipmanveh = vi_aipinslimsin.idaipmanveh
                        .xsucuinslimsin = vi_aipinslimsin.xsucuinslimsin
                        .nkiloinslimsin = vi_aipinslimsin.nkiloinslimsin
                        .xdescinslimsin = vi_aipinslimsin.xdescinslimsin
                        .iestatinslimsin = vi_aipinslimsin.iestatinslimsin
                        '.iestatinslimsin = "RECHAZADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinslimsinmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinslimsinController.modaipinslimsin(aipinslimsin)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinslimsin.idaipinsenc, "POR PROCESAR", "RECHAZAR")

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinslimsinmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:RechazarInspeccionLimpiezaSiniestro ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function CancelarInspeccionLimpiezaSiniestro(vi_aipinslimsin As vi_aipinslimsin) As respopera
            Try
                Dim aipinslimsinController As New aipinslimsinController
                Dim aipinslimsin As New aipinslimsin
                Dim respopera As New respopera

                If vi_aipinslimsin IsNot Nothing Then
                    With aipinslimsin
                        .idaipinslimsin = vi_aipinslimsin.idaipinslimsin
                        .idaipinsenc = vi_aipinslimsin.idaipinsenc
                        .nfactinslimsin = vi_aipinslimsin.nfactinslimsin
                        .irepuinslimsin = vi_aipinslimsin.irepuinslimsin
                        .imobrinslimsin = vi_aipinslimsin.imobrinslimsin
                        .xnomaseginslimsin = vi_aipinslimsin.xnomaseginslimsin
                        .idaipmanveh = vi_aipinslimsin.idaipmanveh
                        .xsucuinslimsin = vi_aipinslimsin.xsucuinslimsin
                        .nkiloinslimsin = vi_aipinslimsin.nkiloinslimsin
                        .xdescinslimsin = vi_aipinslimsin.xdescinslimsin
                        .iestatinslimsin = vi_aipinslimsin.iestatinslimsin
                        '.iestatinslimsin = "NO PROCEDENTE" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinslimsinmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinslimsinController.modaipinslimsin(aipinslimsin)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinslimsin.idaipinsenc, "NO PROCEDENTE", "CANCELAR")

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinslimsinmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:CancelarInspeccionLimpiezaSiniestro ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function AceptarInspeccionLimpiezaSiniestro(vi_aipinslimsin As vi_aipinslimsin) As respopera
            Try
                Dim aipinslimsinController As New aipinslimsinController
                Dim aipinslimsin As New aipinslimsin
                Dim respopera As New respopera

                If vi_aipinslimsin IsNot Nothing Then
                    With aipinslimsin
                        .idaipinslimsin = vi_aipinslimsin.idaipinslimsin
                        .idaipinsenc = vi_aipinslimsin.idaipinsenc
                        .nfactinslimsin = vi_aipinslimsin.nfactinslimsin
                        .irepuinslimsin = vi_aipinslimsin.irepuinslimsin
                        .imobrinslimsin = vi_aipinslimsin.imobrinslimsin
                        .xnomaseginslimsin = vi_aipinslimsin.xnomaseginslimsin
                        .idaipmanveh = vi_aipinslimsin.idaipmanveh
                        .xsucuinslimsin = vi_aipinslimsin.xsucuinslimsin
                        .nkiloinslimsin = vi_aipinslimsin.nkiloinslimsin
                        .xdescinslimsin = vi_aipinslimsin.xdescinslimsin
                        .iestatinslimsin = vi_aipinslimsin.iestatinslimsin
                        '.iestatinslimsin = "ACEPTADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinslimsinmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinslimsinController.modaipinslimsin(aipinslimsin)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinslimsin.idaipinsenc, "PROCEDENTE", "ACEPTAR")
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinslimsinmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AceptarInspeccionLimpiezaSiniestro ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function ActualizarMobrsLimpiezaSiniestro(lista_vi_aipinslimsinmobr As List(Of vi_aipinslimsinmobr)) As respopera
            Try
                'Dim aipinslimsinmobrController As New aipinslimsinmobrController
                Dim respopera As New respopera

                If lista_vi_aipinslimsinmobr IsNot Nothing Then
                    If lista_vi_aipinslimsinmobr.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinslimsinmobr.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinslimsinmobr.Count - 1
                                'lista_aipinslimsinmobr(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsLimSinMobr(lista_vi_aipinslimsinmobr(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registro actualizado con éxito"
                            respopera.xmsjtecnico = "Registro actualizado con éxito"
                            respopera.id = 0
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun repuesto"
                        respopera.xmsjtecnico = "la lista lista_aipinslimsinmobr llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinslimsinmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarMobrsLimpiezaSiniestro ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ObtenerRepuestosLimpiezaSiniestro(idaipinslimsin As Decimal) As List(Of vi_aipinslimsinrepu)

            Dim vi_aipinslimsinrepuController As New vi_aipinslimsinrepuController
            Dim lista_vi_aipinslimsinrepu As List(Of vi_aipinslimsinrepu) = vi_aipinslimsinrepuController.selvi_aipinslimsinrepuxidaipinslimsin(idaipinslimsin)


            Return lista_vi_aipinslimsinrepu

        End Function

        <HttpPost()> _
        Public Function ObtenerRepuestosSiniestro(idaipinssin As Decimal) As List(Of vi_aipinssinrepu)

            Dim vi_aipinssinrepuController As New vi_aipinssinrepuController
            Dim lista_vi_aipinssinrepu As List(Of vi_aipinssinrepu) = vi_aipinssinrepuController.selvi_aipinssinrepuxidaipinssin(idaipinssin)


            Return lista_vi_aipinssinrepu

        End Function

        <HttpPost()> _
        Public Function ObtenerPrecioTotalRepuestosLimpiezaSiniestro(idaipinslimsin As Decimal) As Decimal

            Dim vi_aipinslimsinrepuController As New vi_aipinslimsinrepuController
            Dim totalnprecfininslimsinrepu As Decimal = vi_aipinslimsinrepuController.selnprecfininslimsinrepuxidaipinslimsin(idaipinslimsin)


            Return totalnprecfininslimsinrepu

        End Function

        <HttpPost()> _
        Public Function ObtenerMobrLimpiezaSiniestro(idaipinslimsin As Decimal) As List(Of vi_aipinslimsinmobr)

            Dim vi_aipinslimsinmobrController As New vi_aipinslimsinmobrController
            Dim lista_vi_aipinslimsinmobr As List(Of vi_aipinslimsinmobr) = vi_aipinslimsinmobrController.selvi_aipinslimsinmobrxidaipinslimsin(idaipinslimsin)


            Return lista_vi_aipinslimsinmobr

        End Function

        <HttpPost()> _
        Public Function ObtenerMobrSiniestro(idaipinssin As Decimal) As List(Of vi_aipinssinmobr)

            Dim vi_aipinssinmobrController As New vi_aipinssinmobrController
            Dim lista_vi_aipinssinmobr As List(Of vi_aipinssinmobr) = vi_aipinssinmobrController.selvi_aipinssinmobrxidaipinssin(idaipinssin)


            Return lista_vi_aipinssinmobr

        End Function

        <HttpPost()> _
        Public Function ObtenerPrecioTotalMobrLimpiezaSiniestro(idaipinslimsin As Decimal) As Decimal

            Dim vi_aipinslimsinmobrController As New vi_aipinslimsinmobrController
            Dim totalnprecfininslimsinmobr As Decimal = vi_aipinslimsinmobrController.selnprecfininslimsinmobrxidaipinslimsin(idaipinslimsin)


            Return totalnprecfininslimsinmobr

        End Function


        'ajustes
        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ActualizarRepuestosAjusteSiniestro(lista_aipinsajussinrepu As List(Of aipinsajussinrepu)) As respopera
        '    Try
        '        Dim aipinsajussinrepuController As New aipinsajussinrepuController
        '        Dim respopera As New respopera

        '        If lista_aipinsajussinrepu.Count > 0 Then
        '            Dim respopera2 As respopera
        '            If lista_aipinsajussinrepu.Count > 0 Then
        '                For i As Integer = 0 To lista_aipinsajussinrepu.Count - 1
        '                    'lista_aipinsajussinrepu(i).iestatinsenc = "PROCEDENTE"
        '                    respopera2 = aipinsajussinrepuController.modaipinsajussinrepu(lista_aipinsajussinrepu(i))
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id
        '                Next
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ningun repuesto"
        '            respopera.xmsjtecnico = "la lista lista_aipinsajussinrepu llego sin registros"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function
        <HttpPost()> _
        Public Function ActualizarRepuestosAjusteSiniestro(lista_vi_aipinsajussinrepu As List(Of vi_aipinsajussinrepu)) As respopera
            Try
                'Dim aipinsajussinrepuController As New aipinsajussinrepuController
                Dim respopera As New respopera

                If lista_vi_aipinsajussinrepu IsNot Nothing Then
                    If lista_vi_aipinsajussinrepu.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinsajussinrepu.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinsajussinrepu.Count - 1
                                'lista_aipinsajussinrepu(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsAjusSinRepu(lista_vi_aipinsajussinrepu(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registro actualizado con éxito"
                            respopera.xmsjtecnico = "Registro actualizado con éxito"
                            respopera.id = 0
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun repuesto"
                        respopera.xmsjtecnico = "la lista lista_aipinsajussinrepu llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsajussinrepu llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarRepuestosAjusteSiniestro ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ObtenerRepuestosAjusteSiniestro(idaipinsajussin As Decimal) As List(Of vi_aipinsajussinrepu)            

            Dim vi_aipinsajussinrepuController As New vi_aipinsajussinrepuController
            Dim lista_vi_aipinsajussinrepu As List(Of vi_aipinsajussinrepu) = vi_aipinsajussinrepuController.selvi_aipinsajussinrepuxidaipinsajussin(idaipinsajussin)


            Return lista_vi_aipinsajussinrepu

        End Function

        <HttpPost()> _
        Public Function ObtenerPrecioTotalRepuestosAjusteSiniestro(idaipinsajussin As Decimal) As Decimal

            Dim vi_aipinsajussinrepuController As New vi_aipinsajussinrepuController
            Dim totalnprecfininsajussinrepu As Decimal = vi_aipinsajussinrepuController.selnprecfininsajussinrepuxidaipinsajussin(idaipinsajussin)


            Return totalnprecfininsajussinrepu

        End Function

        <HttpPost()> _
        Public Function ObtenerMobrAjusteSiniestro(idaipinsajussin As Decimal) As List(Of vi_aipinsajussinmobr)                        

            Dim vi_aipinsajussinmobrController As New vi_aipinsajussinmobrController
            Dim lista_vi_aipinsajussinmobr As List(Of vi_aipinsajussinmobr) = vi_aipinsajussinmobrController.selvi_aipinsajussinmobrxidaipinsajussin(idaipinsajussin)


            Return lista_vi_aipinsajussinmobr

        End Function

        <HttpPost()> _
        Public Function ObtenerMobrAjusteSiniestroXRepuesto(idaipinsajussin As Decimal, idaipinsenc As Decimal, idaipmanrepu As Decimal) As List(Of vi_aipinsajussinmobr)

            Dim vi_aipinsajussinmobrController As New vi_aipinsajussinmobrController
            Dim lista_vi_aipinsajussinmobr As List(Of vi_aipinsajussinmobr) = vi_aipinsajussinmobrController.selvi_aipinsajussinmobrxidaipinsajussinAndRepuesto(idaipinsajussin, idaipinsenc, idaipmanrepu)


            Return lista_vi_aipinsajussinmobr

        End Function

        <HttpPost()> _
        Public Function ObtenerPrecioTotalMobrAjusteSiniestro(idaipinsajussin As Decimal) As Decimal

            Dim vi_aipinsajussinmobrController As New vi_aipinsajussinmobrController
            Dim totalnprecfininsajussinmobr As Decimal = vi_aipinsajussinmobrController.selnprecfininsajussinmobrxidaipinsajussin(idaipinsajussin)


            Return totalnprecfininsajussinmobr

        End Function

        <HttpPost()> _
        Public Function ObtenerMobrAjusteSiniestroAgrup(idaipinsajussin As Decimal) As List(Of vi_aipinsajussinmobragrup)

            Dim vi_aipinsajussinmobragrupController As New vi_aipinsajussinmobragrupController
            Dim lista_vi_aipinsajussinmobragrup As List(Of vi_aipinsajussinmobragrup) = vi_aipinsajussinmobragrupController.selvi_aipinsajussinmobragrup(idaipinsajussin)


            Return lista_vi_aipinsajussinmobragrup

        End Function

        <HttpPost()> _
        Public Function ObtenerMobrAjusteAnexoAgrup(idaipinsajusanex As Decimal) As List(Of vi_aipinsajusanexmobragrup)

            Dim vi_aipinsajusanexmobragrupController As New vi_aipinsajusanexmobragrupController
            Dim lista_vi_aipinsajusanexmobragrup As List(Of vi_aipinsajusanexmobragrup) = vi_aipinsajusanexmobragrupController.selvi_aipinsajusanexmobragrup(idaipinsajusanex)


            Return lista_vi_aipinsajusanexmobragrup

        End Function

        <HttpPost()> _
        Public Function ObtenerMobrAjusteAnexoXRepuesto(idaipinsajusanex As Decimal, idaipinsenc As Decimal, idaipmanrepu As Decimal) As List(Of vi_aipinsajusanexmobr)

            Dim vi_aipinsajusanexmobrController As New vi_aipinsajusanexmobrController
            Dim lista_vi_aipinsajusanexmobr As List(Of vi_aipinsajusanexmobr) = vi_aipinsajusanexmobrController.selvi_aipinsajusanexmobrxidaipinsajussinAndRepuesto(idaipinsajusanex, idaipinsenc, idaipmanrepu)

            Return lista_vi_aipinsajusanexmobr

        End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ActualizarMobrsAjusteSiniestro(lista_aipinsajussinmobr As List(Of aipinsajussinmobr)) As respopera
        '    Try
        '        Dim aipinsajussinmobrController As New aipinsajussinmobrController
        '        Dim respopera As New respopera

        '        If lista_aipinsajussinmobr.Count > 0 Then
        '            Dim respopera2 As respopera
        '            If lista_aipinsajussinmobr.Count > 0 Then
        '                For i As Integer = 0 To lista_aipinsajussinmobr.Count - 1
        '                    'lista_aipinsajussinmobr(i).iestatinsenc = "PROCEDENTE"
        '                    respopera2 = aipinsajussinmobrController.modaipinsajussinmobr(lista_aipinsajussinmobr(i))
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id
        '                Next
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ningun repuesto"
        '            respopera.xmsjtecnico = "la lista lista_aipinsajussinmobr llego sin registros"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function

        <HttpPost()> _
        Public Function ActualizarMobrsAjusteSiniestro(lista_vi_aipinsajussinmobr As List(Of vi_aipinsajussinmobr)) As respopera
            Try
                'Dim aipinsajussinmobrController As New aipinsajussinmobrController
                Dim respopera As New respopera
                If lista_vi_aipinsajussinmobr IsNot Nothing Then
                    If lista_vi_aipinsajussinmobr.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinsajussinmobr.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinsajussinmobr.Count - 1
                                'lista_aipinsajussinmobr(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsAjusSinMobr(lista_vi_aipinsajussinmobr(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registro actualizado con éxito"
                            respopera.xmsjtecnico = "Registro actualizado con éxito"
                            respopera.id = 0
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun repuesto"
                        respopera.xmsjtecnico = "la lista lista_aipinsajussinmobr llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsajussinmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarMobrsAjusteSiniestro ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function GuardarInspeccionAjusteSiniestro(vi_aipinsajussin As vi_aipinsajussin) As respopera
            Try
                Dim aipinsajussinController As New aipinsajussinController
                Dim aipinsajussin As New aipinsajussin
                Dim respopera As New respopera

                If vi_aipinsajussin IsNot Nothing Then
                    With aipinsajussin
                        .idaipinsajussin = vi_aipinsajussin.idaipinsajussin
                        .idaipinsenc = vi_aipinsajussin.idaipinsenc
                        .isininsajussin = vi_aipinsajussin.isininsajussin
                        .irecupinsajussin = vi_aipinsajussin.irecupinsajussin
                        .itercinsajussin = vi_aipinsajussin.itercinsajussin
                        .xnomaseginsajussin = vi_aipinsajussin.xnomaseginsajussin
                        .idaipmanveh = vi_aipinsajussin.idaipmanveh
                        .xsucuinsajussin = vi_aipinsajussin.xsucuinsajussin
                        .nkiloinsajussin = vi_aipinsajussin.nkiloinsajussin
                        .xdescinsajussin = vi_aipinsajussin.xdescinsajussin
                        .iestatinsajussin = vi_aipinsajussin.iestatinsajussin
                        .idseglogreg = 0
                    End With

                    'lista_aipinsajussinmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinsajussinController.modaipinsajussin(aipinsajussin)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id


                    If (respopera.irespuesta = "1") Then

                        Dim aipinsencController As New aipinsencController
                        Dim aipinsenc As New aipinsenc
                        aipinsenc = aipinsencController.selaipinsencxid(vi_aipinsajussin.idaipinsenc)

                        If (aipinsenc IsNot Nothing) Then
                            'se coloca el cerrar  para que se realice el cierre automatico de la inspeccion al momento de procesarla por la app movil de asi desearlo
                            aipinsenc.icerrarinsenc = True

                            'se realiza la actualizacion del valor de cierre en true
                            aipinsencController.modaipinsenc(aipinsenc)

                        End If

                        GuardarAipLogeve(vi_aipinsajussin.idaipinsenc, "AJUSTES POR SINIESTRO")
                    End If

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsajussinmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:GuardarInspeccionAjusteSiniestro ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function ProcesarInspeccionAjusteSiniestro(vi_aipinsajussin As vi_aipinsajussin) As respopera
            Try
                Dim aipinsajussinController As New aipinsajussinController
                Dim aipinsajussin As New aipinsajussin
                Dim respopera As New respopera

                If vi_aipinsajussin IsNot Nothing Then
                    With aipinsajussin
                        .idaipinsajussin = vi_aipinsajussin.idaipinsajussin
                        .idaipinsenc = vi_aipinsajussin.idaipinsenc
                        .isininsajussin = vi_aipinsajussin.isininsajussin
                        .irecupinsajussin = vi_aipinsajussin.irecupinsajussin
                        .itercinsajussin = vi_aipinsajussin.itercinsajussin
                        .xnomaseginsajussin = vi_aipinsajussin.xnomaseginsajussin
                        .idaipmanveh = vi_aipinsajussin.idaipmanveh
                        .xsucuinsajussin = vi_aipinsajussin.xsucuinsajussin
                        .nkiloinsajussin = vi_aipinsajussin.nkiloinsajussin
                        .xdescinsajussin = vi_aipinsajussin.xdescinsajussin
                        .iestatinsajussin = vi_aipinsajussin.iestatinsajussin
                        '.iestatinsajussin = "PROCESADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinsajussinmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinsajussinController.modaipinsajussin(aipinsajussin)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    Dim existe As Boolean = False


                    ''procesa la inspeccion enc
                    'ModificarInspeccionEstatus(vi_aipinsajusanex.idaipinsenc, "POR AUDITAR")
                    'si es exitoso se porcesa a distribuir la tarea a un auditor
                    If (respopera.irespuesta = "1") Then

                        'se verifican si existen fotos para la inspeccion
                        existe = VerificarExistenciaFotosPeritaje(vi_aipinsajussin.idaipinsenc)
                        If (existe) Then
                            ''procesa la inspeccion enc
                            respopera = ModificarInspeccionConDistribucionAutomaticaAuditores(vi_aipinsajussin.idaipinsenc)
                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "Debe enviar fotos desde la app móvil para poder enviar la inspección."
                            respopera.xmsjtecnico = "Debe enviar fotos desde la app móvil para poder enviar la inspección."
                        End If


                    End If

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsajussinmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ProcesarInspeccionAjusteSiniestro ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function RechazarInspeccionAjusteSiniestro(vi_aipinsajussin As vi_aipinsajussin) As respopera
            Try
                Dim aipinsajussinController As New aipinsajussinController
                Dim aipinsajussin As New aipinsajussin
                Dim respopera As New respopera

                If vi_aipinsajussin IsNot Nothing Then
                    With aipinsajussin
                        .idaipinsajussin = vi_aipinsajussin.idaipinsajussin
                        .idaipinsenc = vi_aipinsajussin.idaipinsenc
                        .isininsajussin = vi_aipinsajussin.isininsajussin
                        .irecupinsajussin = vi_aipinsajussin.irecupinsajussin
                        .itercinsajussin = vi_aipinsajussin.itercinsajussin
                        .xnomaseginsajussin = vi_aipinsajussin.xnomaseginsajussin
                        .idaipmanveh = vi_aipinsajussin.idaipmanveh
                        .xsucuinsajussin = vi_aipinsajussin.xsucuinsajussin
                        .nkiloinsajussin = vi_aipinsajussin.nkiloinsajussin
                        .xdescinsajussin = vi_aipinsajussin.xdescinsajussin
                        .iestatinsajussin = vi_aipinsajussin.iestatinsajussin
                        '.iestatinsajussin = "RECHAZADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinsajussinmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinsajussinController.modaipinsajussin(aipinsajussin)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinsajussin.idaipinsenc, "POR PROCESAR", "RECHAZAR")

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsajussinmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:RechazarInspeccionAjusteSiniestro ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function CancelarInspeccionAjusteSiniestro(vi_aipinsajussin As vi_aipinsajussin) As respopera
            Try
                Dim aipinsajussinController As New aipinsajussinController
                Dim aipinsajussin As New aipinsajussin
                Dim respopera As New respopera

                If vi_aipinsajussin IsNot Nothing Then
                    With aipinsajussin
                        .idaipinsajussin = vi_aipinsajussin.idaipinsajussin
                        .idaipinsenc = vi_aipinsajussin.idaipinsenc
                        .isininsajussin = vi_aipinsajussin.isininsajussin
                        .irecupinsajussin = vi_aipinsajussin.irecupinsajussin
                        .itercinsajussin = vi_aipinsajussin.itercinsajussin
                        .xnomaseginsajussin = vi_aipinsajussin.xnomaseginsajussin
                        .idaipmanveh = vi_aipinsajussin.idaipmanveh
                        .xsucuinsajussin = vi_aipinsajussin.xsucuinsajussin
                        .nkiloinsajussin = vi_aipinsajussin.nkiloinsajussin
                        .xdescinsajussin = vi_aipinsajussin.xdescinsajussin
                        .iestatinsajussin = vi_aipinsajussin.iestatinsajussin
                        '.iestatinsajussin = "NO PROCEDENTE" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinsajussinmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinsajussinController.modaipinsajussin(aipinsajussin)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinsajussin.idaipinsenc, "NO PROCEDENTE", "CANCELAR")

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsajussinmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:CancelarInspeccionAjusteSiniestro ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function AceptarInspeccionAjusteSiniestro(vi_aipinsajussin As vi_aipinsajussin) As respopera
            Try
                Dim aipinsajussinController As New aipinsajussinController
                Dim aipinsajussin As New aipinsajussin
                Dim respopera As New respopera

                If vi_aipinsajussin IsNot Nothing Then
                    With aipinsajussin
                        .idaipinsajussin = vi_aipinsajussin.idaipinsajussin
                        .idaipinsenc = vi_aipinsajussin.idaipinsenc
                        .isininsajussin = vi_aipinsajussin.isininsajussin
                        .irecupinsajussin = vi_aipinsajussin.irecupinsajussin
                        .itercinsajussin = vi_aipinsajussin.itercinsajussin
                        .xnomaseginsajussin = vi_aipinsajussin.xnomaseginsajussin
                        .idaipmanveh = vi_aipinsajussin.idaipmanveh
                        .xsucuinsajussin = vi_aipinsajussin.xsucuinsajussin
                        .nkiloinsajussin = vi_aipinsajussin.nkiloinsajussin
                        .xdescinsajussin = vi_aipinsajussin.xdescinsajussin
                        .iestatinsajussin = vi_aipinsajussin.iestatinsajussin
                        '.iestatinsajussin = "ACEPTADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinsajussinmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinsajussinController.modaipinsajussin(aipinsajussin)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinsajussin.idaipinsenc, "PROCEDENTE", "ACEPTAR")

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsajussinmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AceptarInspeccionAjusteSiniestro ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ActualizarRepuestosAjusteAnexo(lista_aipinsajusanexrepu As List(Of aipinsajusanexrepu)) As respopera
        '    Try
        '        Dim aipinsajusanexrepuController As New aipinsajusanexrepuController
        '        Dim respopera As New respopera

        '        If lista_aipinsajusanexrepu.Count > 0 Then
        '            Dim respopera2 As respopera
        '            If lista_aipinsajusanexrepu.Count > 0 Then
        '                For i As Integer = 0 To lista_aipinsajusanexrepu.Count - 1
        '                    'lista_aipinsajusanexrepu(i).iestatinsenc = "PROCEDENTE"
        '                    respopera2 = aipinsajusanexrepuController.modaipinsajusanexrepu(lista_aipinsajusanexrepu(i))
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id
        '                Next
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ningun repuesto"
        '            respopera.xmsjtecnico = "la lista lista_aipinsajusanexrepu llego sin registros"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function
        <HttpPost()> _
        Public Function ActualizarRepuestosAjusteAnexo(lista_vi_aipinsajusanexrepu As List(Of vi_aipinsajusanexrepu)) As respopera
            Try
                'Dim aipinsajusanexrepuController As New aipinsajusanexrepuController
                Dim respopera As New respopera

                If lista_vi_aipinsajusanexrepu IsNot Nothing Then
                    If lista_vi_aipinsajusanexrepu.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinsajusanexrepu.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinsajusanexrepu.Count - 1
                                'lista_aipinsajusanexrepu(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsAjusAnexRepu(lista_vi_aipinsajusanexrepu(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registro actualizado con éxito"
                            respopera.xmsjtecnico = "Registro actualizado con éxito"
                            respopera.id = 0
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun repuesto"
                        respopera.xmsjtecnico = "la lista lista_aipinsajusanexrepu llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsajusanexrepu llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarRepuestosAjusteAnexo ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ObtenerRepuestosAjusteAnexo(idaipinsajusanex As Decimal) As List(Of vi_aipinsajusanexrepu)

            Dim vi_aipinsajusanexrepuController As New vi_aipinsajusanexrepuController
            Dim lista_vi_aipinsajusanexrepu As List(Of vi_aipinsajusanexrepu) = vi_aipinsajusanexrepuController.selvi_aipinsajusanexrepuxidaipinsajusanex(idaipinsajusanex)


            Return lista_vi_aipinsajusanexrepu

        End Function

        <HttpPost()> _
        Public Function ObtenerPrecioTotalRepuestosAjusteAnexo(idaipinsajusanex As Decimal) As Decimal

            Dim vi_aipinsajusanexrepuController As New vi_aipinsajusanexrepuController
            Dim totalnprecfininsajusanexrepu As Decimal = vi_aipinsajusanexrepuController.selnprecfininsajusanexrepuxidaipinsajusanex(idaipinsajusanex)


            Return totalnprecfininsajusanexrepu

        End Function


        <HttpPost()> _
        Public Function ObtenerMobrAjusteAnexo(idaipinsajusanex As Decimal) As List(Of vi_aipinsajusanexmobr)

            Dim vi_aipinsajusanexmobrController As New vi_aipinsajusanexmobrController
            Dim lista_vi_aipinsajusanexmobr As List(Of vi_aipinsajusanexmobr) = vi_aipinsajusanexmobrController.selvi_aipinsajusanexmobrxidaipinsajusanex(idaipinsajusanex)


            Return lista_vi_aipinsajusanexmobr

        End Function

        <HttpPost()> _
        Public Function ObtenerPrecioTotalMobrAjusteAnexo(idaipinsajusanex As Decimal) As Decimal

            Dim vi_aipinsajusanexmobrController As New vi_aipinsajusanexmobrController
            Dim totalnprecfininsajusanexmobr As Decimal = vi_aipinsajusanexmobrController.selnprecfininsajusanexmobrxidaipinsajusanex(idaipinsajusanex)


            Return totalnprecfininsajusanexmobr

        End Function

        'desarrollar metodo veriricar
        '<HttpPost()> _
        'Public Function ActualizarMobrsAjusteAnexo(lista_aipinsajusanexmobr As List(Of aipinsajusanexmobr)) As respopera
        '    Try
        '        Dim aipinsajusanexmobrController As New aipinsajusanexmobrController
        '        Dim respopera As New respopera

        '        If lista_aipinsajusanexmobr.Count > 0 Then
        '            Dim respopera2 As respopera
        '            If lista_aipinsajusanexmobr.Count > 0 Then
        '                For i As Integer = 0 To lista_aipinsajusanexmobr.Count - 1
        '                    'lista_aipinsajusanexmobr(i).iestatinsenc = "PROCEDENTE"
        '                    respopera2 = aipinsajusanexmobrController.modaipinsajusanexmobr(lista_aipinsajusanexmobr(i))
        '                    respopera.irespuesta = respopera.irespuesta
        '                    respopera.xmsjusuario = respopera.xmsjusuario
        '                    respopera.xmsjtecnico = respopera.xmsjtecnico
        '                    respopera.id = respopera.id
        '                Next
        '            End If
        '        Else
        '            respopera.irespuesta = 0
        '            respopera.xmsjusuario = "No se encontro ningun repuesto"
        '            respopera.xmsjtecnico = "la lista lista_aipinsajusanexmobr llego sin registros"
        '            respopera.id = 0
        '        End If

        '        Return respopera

        '    Catch ex As Exception

        '        Dim respopera As New respopera
        '        respopera.irespuesta = 0
        '        respopera.xmsjusuario = "Error Comuniquese con Sistemas"
        '        respopera.xmsjtecnico = ex.Message
        '        Return respopera
        '    End Try
        'End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function ActualizarMobrsAjusteAnexo(lista_vi_aipinsajusanexmobr As List(Of vi_aipinsajusanexmobr)) As respopera
            Try
                'Dim aipinsajusanexmobrController As New aipinsajusanexmobrController
                Dim respopera As New respopera

                If lista_vi_aipinsajusanexmobr IsNot Nothing Then
                    If lista_vi_aipinsajusanexmobr.Count > 0 Then
                        Dim respopera2 As respopera
                        If lista_vi_aipinsajusanexmobr.Count > 0 Then
                            For i As Integer = 0 To lista_vi_aipinsajusanexmobr.Count - 1
                                'lista_aipinsajusanexmobr(i).iestatinsenc = "PROCEDENTE"
                                respopera2 = ActualizarAipInsAjusAnexMobr(lista_vi_aipinsajusanexmobr(i))
                                respopera.irespuesta = respopera.irespuesta
                                respopera.xmsjusuario = respopera.xmsjusuario
                                respopera.xmsjtecnico = respopera.xmsjtecnico
                                respopera.id = respopera.id
                            Next
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = "Registro actualizado con éxito"
                            respopera.xmsjtecnico = "Registro actualizado con éxito"
                            respopera.id = 0
                        End If
                    Else
                        respopera.irespuesta = 0
                        respopera.xmsjusuario = "No se encontro ningun repuesto"
                        respopera.xmsjtecnico = "la lista lista_aipinsajusanexmobr llego sin registros"
                        respopera.id = 0
                    End If
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsajusanexmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarMobrsAjusteAnexo ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function GuardarInspeccionAjusteAnexo(vi_aipinsajusanex As vi_aipinsajusanex) As respopera
            Try
                Dim aipinsajusanexController As New aipinsajusanexController
                Dim aipinsajusanex As New aipinsajusanex
                Dim respopera As New respopera

                If vi_aipinsajusanex IsNot Nothing Then
                    With aipinsajusanex
                        .idaipinsajusanex = vi_aipinsajusanex.idaipinsajusanex
                        .idaipinsenc = vi_aipinsajusanex.idaipinsenc
                        .isininsajusanex = vi_aipinsajusanex.isininsajusanex
                        .irecupinsajusanex = vi_aipinsajusanex.irecupinsajusanex
                        .itercinsajusanex = vi_aipinsajusanex.itercinsajusanex
                        .xnomaseginsajusanex = vi_aipinsajusanex.xnomaseginsajusanex
                        .idaipmanveh = vi_aipinsajusanex.idaipmanveh
                        .xsucuinsajusanex = vi_aipinsajusanex.xsucuinsajusanex
                        .nkiloinsajusanex = vi_aipinsajusanex.nkiloinsajusanex
                        .xdescinsajusanex = vi_aipinsajusanex.xdescinsajusanex
                        .iestatinsajusanex = vi_aipinsajusanex.iestatinsajusanex
                        .idseglogreg = 0
                    End With

                    'lista_aipinsajusanexmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinsajusanexController.modaipinsajusanex(aipinsajusanex)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    If (respopera.irespuesta = "1") Then

                        Dim aipinsencController As New aipinsencController
                        Dim aipinsenc As New aipinsenc
                        aipinsenc = aipinsencController.selaipinsencxid(vi_aipinsajusanex.idaipinsenc)

                        If (aipinsenc IsNot Nothing) Then
                            'se coloca el cerrar  para que se realice el cierre automatico de la inspeccion al momento de procesarla por la app movil de asi desearlo
                            aipinsenc.icerrarinsenc = True

                            'se realiza la actualizacion del valor de cierre en true
                            aipinsencController.modaipinsenc(aipinsenc)

                        End If

                        GuardarAipLogeve(vi_aipinsajusanex.idaipinsenc, "AJUSTES POR ANEXO")
                    End If

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsajusanexmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:GuardarInspeccionAjusteAnexo ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function ProcesarInspeccionAjusteAnexo(vi_aipinsajusanex As vi_aipinsajusanex) As respopera
            Try
                Dim aipinsajusanexController As New aipinsajusanexController
                Dim aipinsajusanex As New aipinsajusanex
                Dim respopera As New respopera

                If vi_aipinsajusanex IsNot Nothing Then
                    With aipinsajusanex
                        .idaipinsajusanex = vi_aipinsajusanex.idaipinsajusanex
                        .idaipinsenc = vi_aipinsajusanex.idaipinsenc
                        .isininsajusanex = vi_aipinsajusanex.isininsajusanex
                        .irecupinsajusanex = vi_aipinsajusanex.irecupinsajusanex
                        .itercinsajusanex = vi_aipinsajusanex.itercinsajusanex
                        .xnomaseginsajusanex = vi_aipinsajusanex.xnomaseginsajusanex
                        .idaipmanveh = vi_aipinsajusanex.idaipmanveh
                        .xsucuinsajusanex = vi_aipinsajusanex.xsucuinsajusanex
                        .nkiloinsajusanex = vi_aipinsajusanex.nkiloinsajusanex
                        .xdescinsajusanex = vi_aipinsajusanex.xdescinsajusanex
                        .iestatinsajusanex = vi_aipinsajusanex.iestatinsajusanex
                        '.iestatinsajusanex = "PROCESADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinsajusanexmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinsajusanexController.modaipinsajusanex(aipinsajusanex)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id
                    Dim existe As Boolean = False


                    ''procesa la inspeccion enc
                    'ModificarInspeccionEstatus(vi_aipinsajusanex.idaipinsenc, "POR AUDITAR")
                    'si es exitoso se porcesa a distribuir la tarea a un auditor
                    If (respopera.irespuesta = "1") Then

                        'se verifican si existen fotos para la inspeccion
                        existe = VerificarExistenciaFotosPeritaje(vi_aipinsajusanex.idaipinsenc)
                        If (existe) Then
                            ''procesa la inspeccion enc
                            respopera = ModificarInspeccionConDistribucionAutomaticaAuditores(vi_aipinsajusanex.idaipinsenc)
                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "Debe enviar fotos desde la app móvil para poder enviar la inspección."
                            respopera.xmsjtecnico = "Debe enviar fotos desde la app móvil para poder enviar la inspección."
                        End If
                        

                    End If

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsajusanexmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ProcesarInspeccionAjusteAnexo ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function RechazarInspeccionAjusteAnexo(vi_aipinsajusanex As vi_aipinsajusanex) As respopera
            Try
                Dim aipinsajusanexController As New aipinsajusanexController
                Dim aipinsajusanex As New aipinsajusanex
                Dim respopera As New respopera

                If vi_aipinsajusanex IsNot Nothing Then
                    With aipinsajusanex
                        .idaipinsajusanex = vi_aipinsajusanex.idaipinsajusanex
                        .idaipinsenc = vi_aipinsajusanex.idaipinsenc
                        .isininsajusanex = vi_aipinsajusanex.isininsajusanex
                        .irecupinsajusanex = vi_aipinsajusanex.irecupinsajusanex
                        .itercinsajusanex = vi_aipinsajusanex.itercinsajusanex
                        .xnomaseginsajusanex = vi_aipinsajusanex.xnomaseginsajusanex
                        .idaipmanveh = vi_aipinsajusanex.idaipmanveh
                        .xsucuinsajusanex = vi_aipinsajusanex.xsucuinsajusanex
                        .nkiloinsajusanex = vi_aipinsajusanex.nkiloinsajusanex
                        .xdescinsajusanex = vi_aipinsajusanex.xdescinsajusanex
                        .iestatinsajusanex = vi_aipinsajusanex.iestatinsajusanex
                        '.iestatinsajusanex = "RECHAZADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinsajusanexmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinsajusanexController.modaipinsajusanex(aipinsajusanex)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinsajusanex.idaipinsenc, "POR PROCESAR", "RECHAZAR")

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsajusanexmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:RechazarInspeccionAjusteAnexo ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function CancelarInspeccionAjusteAnexo(vi_aipinsajusanex As vi_aipinsajusanex) As respopera
            Try
                Dim aipinsajusanexController As New aipinsajusanexController
                Dim aipinsajusanex As New aipinsajusanex
                Dim respopera As New respopera

                If vi_aipinsajusanex IsNot Nothing Then
                    With aipinsajusanex
                        .idaipinsajusanex = vi_aipinsajusanex.idaipinsajusanex
                        .idaipinsenc = vi_aipinsajusanex.idaipinsenc
                        .isininsajusanex = vi_aipinsajusanex.isininsajusanex
                        .irecupinsajusanex = vi_aipinsajusanex.irecupinsajusanex
                        .itercinsajusanex = vi_aipinsajusanex.itercinsajusanex
                        .xnomaseginsajusanex = vi_aipinsajusanex.xnomaseginsajusanex
                        .idaipmanveh = vi_aipinsajusanex.idaipmanveh
                        .xsucuinsajusanex = vi_aipinsajusanex.xsucuinsajusanex
                        .nkiloinsajusanex = vi_aipinsajusanex.nkiloinsajusanex
                        .xdescinsajusanex = vi_aipinsajusanex.xdescinsajusanex
                        .iestatinsajusanex = vi_aipinsajusanex.iestatinsajusanex
                        '.iestatinsajusanex = "NO PROCEDENTE" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinsajusanexmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinsajusanexController.modaipinsajusanex(aipinsajusanex)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinsajusanex.idaipinsenc, "NO PROCEDENTE", "CANCELAR")
                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsajusanexmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:CancelarInspeccionAjusteAnexo ", ex)
                Return respopera
            End Try
        End Function

        'desarrollar metodo veriricar
        <HttpPost()> _
        Public Function AceptarInspeccionAjusteAnexo(vi_aipinsajusanex As vi_aipinsajusanex) As respopera
            Try
                Dim aipinsajusanexController As New aipinsajusanexController
                Dim aipinsajusanex As New aipinsajusanex
                Dim respopera As New respopera

                If vi_aipinsajusanex IsNot Nothing Then
                    With aipinsajusanex
                        .idaipinsajusanex = vi_aipinsajusanex.idaipinsajusanex
                        .idaipinsenc = vi_aipinsajusanex.idaipinsenc
                        .isininsajusanex = vi_aipinsajusanex.isininsajusanex
                        .irecupinsajusanex = vi_aipinsajusanex.irecupinsajusanex
                        .itercinsajusanex = vi_aipinsajusanex.itercinsajusanex
                        .xnomaseginsajusanex = vi_aipinsajusanex.xnomaseginsajusanex
                        .idaipmanveh = vi_aipinsajusanex.idaipmanveh
                        .xsucuinsajusanex = vi_aipinsajusanex.xsucuinsajusanex
                        .nkiloinsajusanex = vi_aipinsajusanex.nkiloinsajusanex
                        .xdescinsajusanex = vi_aipinsajusanex.xdescinsajusanex
                        .iestatinsajusanex = vi_aipinsajusanex.iestatinsajusanex
                        '.iestatinsajusanex = "ACEPTADA" '-->VERIFICAR
                        .idseglogreg = 0
                    End With

                    'lista_aipinsajusanexmobr(i).iestatinsenc = "PROCEDENTE"
                    respopera = aipinsajusanexController.modaipinsajusanex(aipinsajusanex)
                    respopera.irespuesta = respopera.irespuesta
                    respopera.xmsjusuario = respopera.xmsjusuario
                    respopera.xmsjtecnico = respopera.xmsjtecnico
                    respopera.id = respopera.id

                    ''procesa la inspeccion enc
                    ModificarInspeccionEstatusYTipoAccion(vi_aipinsajusanex.idaipinsenc, "PROCEDENTE", "ACEPTAR")

                Else
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "No se encontro ningun repuesto"
                    respopera.xmsjtecnico = "la lista lista_aipinsajusanexmobr llego sin registros"
                    respopera.id = 0
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AceptarInspeccionAjusteAnexo ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ModificarInspeccionEstatus(idaipinsenc As Decimal, iestatinsenc As String) As respopera
            Try
                Dim aipinsencController As New aipinsencController
                Dim aipinsenc As aipinsenc = aipinsencController.selaipinsencxid(idaipinsenc)
                Dim respopera As New respopera
                aipinsenc.iestatinsenc = iestatinsenc

                respopera = aipinsencController.modaipinsenc(aipinsenc) '-->verificar


                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ModificarInspeccionEstatus ", ex)
                Return respopera
            End Try
        End Function



        <HttpPost()> _
        Public Function ModificarInspeccionEstatusYTipoAccion(idaipinsenc As Decimal, iestatinsenc As String, itipoaccion As String) As respopera
            Try
                Dim vi_aipinsencController As New vi_aipinsencController
                Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(idaipinsenc)
                Dim aipinsenc As New aipinsenc
                Dim respopera As New respopera

                Using trans As New TransactionScope

                    If (vi_aipinsenc IsNot Nothing) Then

                        ObjectMapperManager.DefaultInstance.GetMapper(Of vi_aipinsenc, aipinsenc).Map(vi_aipinsenc, aipinsenc)
                        Dim aipinsencController As New aipinsencController
                        aipinsenc.iestatinsenc = iestatinsenc

                        If (itipoaccion = "ACEPTAR") Then
                            aipinsenc.facepinsenc = DateTime.Now
                            aipinsenc.faudinsenc = DateTime.Now
                        ElseIf (itipoaccion = "RECHAZAR") Then
                            aipinsenc.fultrechinsenc = DateTime.Now
                            aipinsenc.irechinsenc = True
                        ElseIf (itipoaccion = "CANCELAR") Then
                            aipinsenc.fcancinsenc = DateTime.Now
                        End If

                        respopera = aipinsencController.modaipinsenc(aipinsenc) '-->verificar

                        If (respopera.irespuesta = "1") Then
                            respopera = ModificarEstatusIntermediacionExterna(aipinsenc.idaipinsintext, iestatinsenc, vi_aipinsenc.idsegmanusuperit, vi_aipinsenc.xnombrecompletoperit)
                            If (respopera.irespuesta = "1") Then
                                trans.Complete()
                                respopera.irespuesta = "1"
                                respopera.xmsjusuario = "Operación realizada satisfactoriamente."
                                respopera.xmsjtecnico = "Operación realizada satisfactoriamente."
                                Return respopera
                            Else
                                respopera.irespuesta = "0"
                                respopera.xmsjusuario = "Ha ocurrido un error al actualizar la inspección"
                                Return respopera
                            End If
                        End If

                    Else
                        respopera.irespuesta = "0"
                        respopera.xmsjusuario = "Ha ocurrido un error con la inspección"
                        respopera.xmsjtecnico = "No se ha podido encontrar la inspeccion " & idaipinsenc
                        Return respopera
                    End If

                End Using
                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ModificarInspeccionEstatusYTipoAccion ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ModificarInspeccionConDistribucionAutomaticaAuditores(idaipinsenc As Decimal) As respopera
            Try
                Dim vi_aipinsencController As New vi_aipinsencController
                Dim aipinsencController As New aipinsencController
                Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(idaipinsenc)
                Dim respopera As New respopera

                'verificar antes de enviar que tengan un  motivo de inspeccion
                If vi_aipinsenc.idaipinsmotiv <= 0 Then
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "No se puede enviar al auditor la inspección sin indicar el motivo."
                    respopera.xmsjtecnico = "No se puede enviar al auditor la inspección sin indicar el motivo."
                End If
                'verificar antes de enviar que tengan un  motivo de inspeccion

                'verificar que tenga placa, serial de carroceria y serial carroceria

                'buscar segun el tipo siniestro o suscripcion
                Dim idaipmanveh As Decimal = 0
                If vi_aipinsenc.itipoinsenc = "SINIESTRO" Then
                    Dim aipinssinController As New aipinssinController
                    Dim aipinssin As aipinssin = aipinssinController.selaipinssinxidenc(idaipinsenc)
                    If aipinssin IsNot Nothing Then
                        idaipmanveh = aipinssin.idaipmanveh


                        If (RTrim(LTrim(aipinssin.xdescinssin)) = "") Then
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "No se puede enviar al auditor la inspección sin indicar las observaciones."
                            respopera.xmsjtecnico = "No se puede enviar al auditor la inspección sin indicar las observaciones."
                        End If
                    End If


                End If
                If vi_aipinsenc.itipoinsenc = "SUSCRIPCION" Then
                    Dim aipinssusController As New aipinssusController
                    Dim aipinssus As aipinssus = aipinssusController.selaipinssusxidenc(idaipinsenc)
                    If aipinssus IsNot Nothing Then
                        idaipmanveh = aipinssus.idaipmanveh

                        If (RTrim(LTrim(aipinssus.xdictinssus)) = "") Then
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "No se puede enviar al auditor la inspección sin indicar las observaciones."
                            respopera.xmsjtecnico = "No se puede enviar al auditor la inspección sin indicar las observaciones."
                        End If
                    End If


                End If

                Dim aipmanvehController As New aipmanvehController
                Dim aipmanveh As aipmanveh = aipmanvehController.selaipmanvehxid(idaipmanveh)
                If aipmanveh IsNot Nothing Then
                    If (aipmanveh.xplacamanveh.Trim() = "" Or aipmanveh.xplacamanveh.Trim() = " ") Or (aipmanveh.xsercarrmanveh.Trim() = "" Or aipmanveh.xsercarrmanveh.Trim() = " ") Then
                        respopera.xmsjusuario = ""
                        If (aipmanveh.xplacamanveh.Trim() = "" Or aipmanveh.xplacamanveh.Trim() = " ") Then
                            respopera.irespuesta = "0"

                            respopera.xmsjusuario = "<li> No se puede enviar al auditor sin el número de placa.  </li>"
                            respopera.xmsjtecnico = "No se puede enviar al auditor sin el número de placa"
                        End If
                        If (aipmanveh.xsercarrmanveh.Trim() = "" Or aipmanveh.xsercarrmanveh.Trim() = " ") Then
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = respopera.xmsjusuario & "<li> No se puede enviar al auditor sin el serial de carrocería.  </li>"
                            respopera.xmsjtecnico = "No se puede enviar al auditor sin el serial de carrocería."
                        End If
                    End If
                    respopera.xmsjusuario = "<lu> " & respopera.xmsjusuario & " </lu>"
                Else

                End If
                'FIN verificar que tenga placa, serial de carroceria y serial carroceria

                If respopera.irespuesta <> "0" Then

                    Dim segmanusuController As New segmanusuController

                    Dim idsegmanorg As Decimal = segmanusuController.selsegmanusuidsegmanorg(vi_aipinsenc.idsegmanusuperit)

                    'se verifica si no esta rechazado esto es para no hacer una distribucion automatica de auditores ya que no aplica
                    If (vi_aipinsenc.irechinsenc = False) Then

                        respopera = ObtenerAuditorPorDistribucionAutomatica(idsegmanorg)

                        If (respopera.irespuesta = "1") Then
                            vi_aipinsenc.idsegmanusuaudit = respopera.id
                        ElseIf (respopera.irespuesta = "2") Then
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "Disculpe para esta sucursal no existen auditores para asignarle la inspección."
                            respopera.xmsjusuario = "La inspección no puede enviarse ya que no existen auditores para asignarle la inspección."
                            Return respopera
                        ElseIf (respopera.irespuesta = "0") Then
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = respopera.xmsjtecnico
                            respopera.xmsjusuario = "ERR-DIST01: Ha ocurrido un error al intentar enviar la inspección."
                            Return respopera
                        End If

                        'si el auditor es cero no se realiza ninguna accion
                        If (vi_aipinsenc.idsegmanusuaudit = 0) Then
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = respopera.xmsjtecnico
                            respopera.xmsjusuario = "ERR-DIST02: Ha ocurrido un error al intentar enviar la inspección."
                            Return respopera
                        End If
                    End If

                    Dim aipinsenc As New aipinsenc
                    ObjectMapperManager.DefaultInstance.GetMapper(Of vi_aipinsenc, aipinsenc).Map(vi_aipinsenc, aipinsenc)


                    aipinsenc.iestatinsenc = "POR AUDITAR"
                    aipinsenc.fprocinsenc = DateTime.Now

                    respopera = aipinsencController.modaipinsenc(aipinsenc) '-->verificar
                    If (respopera.irespuesta = "1") Then
                        ModificarEstatusIntermediacionExterna(aipinsenc.idaipinsintext, aipinsenc.iestatinsenc, aipinsenc.idsegmanusuperit, vi_aipinsenc.xnombrecompletoperit)
                    End If

                    Return respopera
                Else
                    Return respopera
                End If 'If respopera.irespuesta = "1" Then
            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ModificarInspeccionConDistribucionAutomaticaAuditores ", ex)
                Return respopera
            End Try
        End Function



        '---ACTAULIZAR------------
        'metodos para los actualizar
        <HttpPost()> _
        Public Function ActualizarAipInsSusMotiv(vi_aipinssusmotiv As vi_aipinssusmotiv) As respopera
            Try
                Dim aipinssusmotiv As New aipinssusmotiv
                ObjectMapperManager.DefaultInstance.GetMapper(Of vi_aipinssusmotiv, aipinssusmotiv).Map(vi_aipinssusmotiv, aipinssusmotiv)

                Dim aipinssusmotivController As New aipinssusmotivController
                Dim respopera As respopera = aipinssusmotivController.modaipinssusmotiv(aipinssusmotiv)
                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsSusMotiv ", ex)
                Return respopera
            End Try
        End Function


        <HttpPost()> _
        Public Function ActualizarAipInsSinMotiv(vi_aipinssinmotiv As vi_aipinssinmotiv) As respopera
            Try

                Dim aipinssinmotiv As New aipinssinmotiv
                With aipinssinmotiv
                    .idaipinssinmotiv = vi_aipinssinmotiv.idaipinssinmotiv
                    .idaipinsmotiv = vi_aipinssinmotiv.idaipinsmotiv
                    .idaipinssin = vi_aipinssinmotiv.idaipinssin
                    .itilinssinmotiv = vi_aipinssinmotiv.itilinssinmotiv
                    .idseglogreg = vi_aipinssinmotiv.idseglogreg
                End With

                Dim respopera As New respopera
                Dim aipinssinmotivController As New aipinssinmotivController
                respopera = aipinssinmotivController.modaipinssinmotiv(aipinssinmotiv)
                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsSinMotiv ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsSusRepuest(vi_aipinssusrepuest As vi_aipinssusrepuest) As respopera
            Try

                Dim aipinssusrepuest As New aipinssusrepuest
                ObjectMapperManager.DefaultInstance.GetMapper(Of vi_aipinssusrepuest, aipinssusrepuest).Map(vi_aipinssusrepuest, aipinssusrepuest)

                Dim aipinssusrepuestController As New aipinssusrepuestController
                Dim respopera As respopera = aipinssusrepuestController.modaipinssusrepuest(aipinssusrepuest)

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsSusRepuest ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsSusAcc(vi_aipinssusacc As vi_aipinssusacc) As respopera
            Try


                Dim aipinssusacc As New aipinssusacc
                ObjectMapperManager.DefaultInstance.GetMapper(Of vi_aipinssusacc, aipinssusacc).Map(vi_aipinssusacc, aipinssusacc)

                Dim aipinssusaccController As New aipinssusaccController
                Dim respopera As respopera = aipinssusaccController.modaipinssusacc(aipinssusacc)

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsSusAcc ", ex)
                Return respopera
            End Try
        End Function


        <HttpPost()> _
        Public Function ActualizarAipInsSusInfComp(vi_aipinssusinfcomp As vi_aipinssusinfcomp) As respopera
            Try
                Dim aipinssusinfcomp As New aipinssusinfcomp
                ObjectMapperManager.DefaultInstance.GetMapper(Of vi_aipinssusinfcomp, aipinssusinfcomp).Map(vi_aipinssusinfcomp, aipinssusinfcomp)

                Dim aipinssusinfcompController As New aipinssusinfcompController
                Dim respopera As respopera = aipinssusinfcompController.modaipinssusinfcomp(aipinssusinfcomp)
                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsSusInfComp ", ex)
                Return respopera
            End Try
        End Function




        <HttpPost()> _
        Public Function ActualizarAipInsSusSsm(vi_aipinssusssm As vi_aipinssusssm) As respopera
            Try

                Dim aipinssusssm As New aipinssusssm
                ObjectMapperManager.DefaultInstance.GetMapper(Of vi_aipinssusssm, aipinssusssm).Map(vi_aipinssusssm, aipinssusssm)

                Dim aipinssusssmController As New aipinssusssmController
                Dim respopera As respopera = aipinssusssmController.modaipinssusssm(aipinssusssm)

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsSusSsm ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsSusSse(vi_aipinssussse As vi_aipinssussse) As respopera
            Try

                Dim aipinssussse As New aipinssussse
                ObjectMapperManager.DefaultInstance.GetMapper(Of vi_aipinssussse, aipinssussse).Map(vi_aipinssussse, aipinssussse)

                Dim aipinssussseController As New aipinssussseController
                Dim respopera As respopera = aipinssussseController.modaipinssussse(aipinssussse)

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsSusSse ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsRestSsm(vi_aipinsrestssm As vi_aipinsrestssm) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "actualizar"
                param1.ParameterName = "p_ioperacion"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = vi_aipinsrestssm.idaipinsrestssm
                param8.ParameterName = "p_idaipinsrestssm"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = vi_aipinsrestssm.idaipinsrest
                param9.ParameterName = "p_idaipinsrest"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = vi_aipinsrestssm.idaipmanvehssm
                param10.ParameterName = "p_idaipmanvehssm"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.Int
                param11.Value = vi_aipinsrestssm.iexisinsrestssm
                param11.ParameterName = "p_iexisinsrestssm"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.Decimal
                param12.Precision = 18
                param12.Scale = 0
                param12.Value = vi_aipinsrestssm.idseglogreg
                param12.ParameterName = "p_idseglogreg"
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_aipinsrestssm @p_ioperacion,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinsrestssm output,@p_idaipinsrest,@p_idaipmanvehssm,@p_iexisinsrestssm,@p_idseglogreg", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsRestSsm ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsRestRepuest(vi_aipinsrestrepuest As vi_aipinsrestrepuest) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "actualizar"
                param1.ParameterName = "p_ioperacion"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = ""
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = vi_aipinsrestrepuest.idaipinsrestrepuest
                param8.ParameterName = "p_idaipinsrestrepuest"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = vi_aipinsrestrepuest.idaipinsrest
                param9.ParameterName = "p_idaipinsrest"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = vi_aipinsrestrepuest.idaipmanrepu
                param10.ParameterName = "p_idaipmanrepu"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.VarChar
                param11.Size = 50
                If vi_aipinsrestrepuest.xnominsrestrepuest IsNot Nothing Then
                    param11.Value = vi_aipinsrestrepuest.xnominsrestrepuest
                Else
                    param11.Value = ""
                End If
                param11.ParameterName = "p_xnominsrestrepuest"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.Bit
                param12.Value = vi_aipinsrestrepuest.iexisinsrestrepuest
                param12.ParameterName = "p_iexisinsrestrepuest"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.Bit
                param13.Value = vi_aipinsrestrepuest.ibueinsrestrepuest
                param13.ParameterName = "p_ibueinsrestrepuest"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.Bit
                param14.Value = vi_aipinsrestrepuest.ireginsrestrepuest
                param14.ParameterName = "p_ireginsrestrepuest"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.Bit
                param15.Value = vi_aipinsrestrepuest.imalinsrestrepuest
                param15.ParameterName = "p_imalinsrestrepuest"

                Dim param16 As New SqlClient.SqlParameter
                param16.SqlDbType = SqlDbType.VarChar
                param16.Size = 20
                If vi_aipinsrestrepuest.iestinsrestrepuest IsNot Nothing Then
                    param16.Value = vi_aipinsrestrepuest.iestinsrestrepuest
                Else
                    param16.Value = ""
                End If
                param16.ParameterName = "p_iestinsrestrepuest"

                Dim param17 As New SqlClient.SqlParameter
                param17.SqlDbType = SqlDbType.VarChar
                param17.Size = 500
                If vi_aipinsrestrepuest.xdescinsrestrepuest IsNot Nothing Then
                    param17.Value = vi_aipinsrestrepuest.xdescinsrestrepuest
                Else
                    param17.Value = ""
                End If
                param17.ParameterName = "p_xdescinsrestrepuest"

                Dim param18 As New SqlClient.SqlParameter
                param18.SqlDbType = SqlDbType.Decimal
                param18.Precision = 18
                param18.Scale = 0
                param18.Value = vi_aipinsrestrepuest.idseglogreg
                param18.ParameterName = "p_idseglogreg"
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_aipinsrestrepuest @p_ioperacion,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinsrestrepuest output,@p_idaipinsrest,@p_idaipmanrepu,@p_xnominsrestrepuest,@p_iexisinsrestrepuest,@p_ibueinsrestrepuest,@p_ireginsrestrepuest,@p_imalinsrestrepuest,@p_iestinsrestrepuest,@p_xdescinsrestrepuest,@p_idseglogreg", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsRestRepuest ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsLimsusRepu(vi_aipinslimsusrepu As vi_aipinslimsusrepu) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "actualizar"
                param1.ParameterName = "p_ioperacion"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = vi_aipinslimsusrepu.idaipinslimsusrepu
                param8.ParameterName = "p_idaipinslimsusrepu"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = vi_aipinslimsusrepu.idaipinslimsus
                param9.ParameterName = "p_idaipinslimsus"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = vi_aipinslimsusrepu.idaipbarerepu
                param10.ParameterName = "p_idaipbarerepu"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.SmallInt
                param11.Value = vi_aipinslimsusrepu.ncantinslimsusrepu
                param11.ParameterName = "p_ncantinslimsusrepu"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.Decimal
                param12.Precision = 18
                param12.Scale = 2
                param12.Value = vi_aipinslimsusrepu.nprecfininslimsusrepu
                param12.ParameterName = "p_nprecfininslimsusrepu"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.VarChar
                param13.Size = 500
                If vi_aipinslimsusrepu.xdescinslimsusrepu IsNot Nothing Then
                    param13.Value = vi_aipinslimsusrepu.xdescinslimsusrepu
                Else
                    param13.Value = ""
                End If
                param13.ParameterName = "p_xdescinslimsusrepu"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 20
                If vi_aipinslimsusrepu.iestatinslimsusrepu IsNot Nothing Then
                    param14.Value = vi_aipinslimsusrepu.iestatinslimsusrepu
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_iestatinslimsusrepu"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.Decimal
                param15.Precision = 18
                param15.Scale = 0
                param15.Value = vi_aipinslimsusrepu.idseglogreg
                param15.ParameterName = "p_idseglogreg"
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_aipinslimsusrepu @p_ioperacion,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinslimsusrepu output,@p_idaipinslimsus,@p_idaipbarerepu,@p_ncantinslimsusrepu,@p_nprecfininslimsusrepu,@p_xdescinslimsusrepu,@p_iestatinslimsusrepu,@p_idseglogreg", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsLimsusRepu ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsLimsusMobr(vi_aipinslimsusmobr As vi_aipinslimsusmobr) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "actualizar"
                param1.ParameterName = "p_ioperacion"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = vi_aipinslimsusmobr.idaipinslimsusmobr
                param8.ParameterName = "p_idaipinslimsusmobr"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = vi_aipinslimsusmobr.idaipinslimsus
                param9.ParameterName = "p_idaipinslimsus"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = vi_aipinslimsusmobr.idaipbaremobr
                param10.ParameterName = "p_idaipbaremobr"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.SmallInt
                param11.Value = vi_aipinslimsusmobr.ncantinslimsusmobr
                param11.ParameterName = "p_ncantinslimsusmobr"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.Decimal
                param12.Precision = 18
                param12.Scale = 2
                param12.Value = vi_aipinslimsusmobr.nprecfininslimsusmobr
                param12.ParameterName = "p_nprecfininslimsusmobr"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.VarChar
                param13.Size = 500
                If vi_aipinslimsusmobr.xdescinslimsusmobr IsNot Nothing Then
                    param13.Value = vi_aipinslimsusmobr.xdescinslimsusmobr
                Else
                    param13.Value = ""
                End If
                param13.ParameterName = "p_xdescinslimsusmobr"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 20
                If vi_aipinslimsusmobr.iestatinslimsusmobr IsNot Nothing Then
                    param14.Value = vi_aipinslimsusmobr.iestatinslimsusmobr
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_iestatinslimsusmobr"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.Decimal
                param15.Precision = 18
                param15.Scale = 0
                param15.Value = vi_aipinslimsusmobr.idseglogreg
                param15.ParameterName = "p_idseglogreg"
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_aipinslimsusmobr @p_ioperacion,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinslimsusmobr output,@p_idaipinslimsus,@p_idaipbaremobr,@p_ncantinslimsusmobr,@p_nprecfininslimsusmobr,@p_xdescinslimsusmobr,@p_iestatinslimsusmobr,@p_idseglogreg", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsLimsusMobr ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsLimSinRepu(vi_aipinslimsinrepu As vi_aipinslimsinrepu) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "actualizar"
                param1.ParameterName = "p_ioperacion"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = vi_aipinslimsinrepu.idaipinslimsinrepu
                param8.ParameterName = "p_idaipinslimsinrepu"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = vi_aipinslimsinrepu.idaipinslimsin
                param9.ParameterName = "p_idaipinslimsin"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = vi_aipinslimsinrepu.idaipbarerepu
                param10.ParameterName = "p_idaipbarerepu"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.SmallInt
                param11.Value = vi_aipinslimsinrepu.ncantinslimsinrepu
                param11.ParameterName = "p_ncantinslimsinrepu"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.Decimal
                param12.Precision = 18
                param12.Scale = 2
                param12.Value = vi_aipinslimsinrepu.nprecfininslimsinrepu
                param12.ParameterName = "p_nprecfininslimsinrepu"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.VarChar
                param13.Size = 500
                If vi_aipinslimsinrepu.xdescinslimsinrepu IsNot Nothing Then
                    param13.Value = vi_aipinslimsinrepu.xdescinslimsinrepu
                Else
                    param13.Value = ""
                End If
                param13.ParameterName = "p_xdescinslimsinrepu"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 20
                If vi_aipinslimsinrepu.iestatinslimsinrepu IsNot Nothing Then
                    param14.Value = vi_aipinslimsinrepu.iestatinslimsinrepu
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_iestatinslimsinrepu"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.Decimal
                param15.Precision = 18
                param15.Scale = 0
                param15.Value = vi_aipinslimsinrepu.idseglogreg
                param15.ParameterName = "p_idseglogreg"
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_aipinslimsinrepu @p_ioperacion,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinslimsinrepu output,@p_idaipinslimsin,@p_idaipbarerepu,@p_ncantinslimsinrepu,@p_nprecfininslimsinrepu,@p_xdescinslimsinrepu,@p_iestatinslimsinrepu,@p_idseglogreg", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsLimSinRepu ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsSinRepu(vi_aipinssinrepu As vi_aipinssinrepu) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "actualizar"
                param1.ParameterName = "p_ioperacion"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = vi_aipinssinrepu.idaipinssinrepu
                param8.ParameterName = "p_idaipinssinrepu"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = vi_aipinssinrepu.idaipinssin
                param9.ParameterName = "p_idaipinssin"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = vi_aipinssinrepu.idaipmanrepu
                param10.ParameterName = "p_idaipmanrepu"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.SmallInt
                param11.Value = vi_aipinssinrepu.ncantinssinrepu
                param11.ParameterName = "p_ncantinssinrepu"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.VarChar
                param12.Size = 20
                If vi_aipinssinrepu.iorigrepuinssinrepu IsNot Nothing Then
                    param12.Value = vi_aipinssinrepu.iorigrepuinssinrepu
                Else
                    param12.Value = ""
                End If
                param12.ParameterName = "p_iorigrepuinssinrepu"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.Decimal
                param13.Precision = 18
                param13.Scale = 2
                param13.Value = vi_aipinssinrepu.nprecfininssinrepu
                param13.ParameterName = "p_nprecfininssinrepu"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 500
                If vi_aipinssinrepu.xdescinssinrepu IsNot Nothing Then
                    param14.Value = vi_aipinssinrepu.xdescinssinrepu
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_xdescinssinrepu"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.VarChar
                param15.Size = 20
                If vi_aipinssinrepu.iestatinssinrepu IsNot Nothing Then
                    param15.Value = vi_aipinssinrepu.iestatinssinrepu
                Else
                    param15.Value = ""
                End If
                param15.ParameterName = "p_iestatinssinrepu"

                Dim param16 As New SqlClient.SqlParameter
                param16.SqlDbType = SqlDbType.Decimal
                param16.Precision = 18
                param16.Scale = 0
                param16.Value = vi_aipinssinrepu.idseglogreg
                param16.ParameterName = "p_idseglogreg"
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_aipinssinrepu @p_ioperacion,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinssinrepu output,@p_idaipinssin,@p_idaipmanrepu,@p_ncantinssinrepu,@p_iorigrepuinssinrepu,@p_nprecfininssinrepu,@p_xdescinssinrepu,@p_iestatinssinrepu,@p_idseglogreg", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsSinRepu ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsSinMObra(vi_aipinssinmobr As vi_aipinssinmobr) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "actualizar"
                param1.ParameterName = "p_ioperacion"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = vi_aipinssinmobr.idaipinssinmobr
                param8.ParameterName = "p_idaipinssinmobr"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = vi_aipinssinmobr.idaipinssin
                param9.ParameterName = "p_idaipinssin"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = vi_aipinssinmobr.idaipmanrepu
                param10.ParameterName = "p_idaipmanrepu"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.SmallInt
                param11.Value = vi_aipinssinmobr.ncantinssinmobr
                param11.ParameterName = "p_ncantinssinmobr"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.VarChar
                param12.Size = 20
                If vi_aipinssinmobr.iorigrepuinssinmobr IsNot Nothing Then
                    param12.Value = vi_aipinssinmobr.iorigrepuinssinmobr
                Else
                    param12.Value = ""
                End If
                param12.ParameterName = "p_iorigrepuinssinmobr"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.VarChar
                param13.Size = 20
                If vi_aipinssinmobr.itaminssinmobr IsNot Nothing Then
                    param13.Value = vi_aipinssinmobr.itaminssinmobr
                Else
                    param13.Value = ""
                End If
                param13.ParameterName = "p_itaminssinmobr"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 50
                If vi_aipinssinmobr.itipomatinssinmobr IsNot Nothing Then
                    param14.Value = vi_aipinssinmobr.itipomatinssinmobr
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_itipomatinssinmobr"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.Decimal
                param15.Precision = 18
                param15.Scale = 2
                param15.Value = vi_aipinssinmobr.nprecfininssinmobr
                param15.ParameterName = "p_nprecfininssinmobr"

                Dim param16 As New SqlClient.SqlParameter
                param16.SqlDbType = SqlDbType.VarChar
                param16.Size = 500
                If vi_aipinssinmobr.xdescinssinmobr IsNot Nothing Then
                    param16.Value = vi_aipinssinmobr.xdescinssinmobr
                Else
                    param16.Value = ""
                End If
                param16.ParameterName = "p_xdescinssinmobr"

                Dim param17 As New SqlClient.SqlParameter
                param17.SqlDbType = SqlDbType.VarChar
                param17.Size = 20
                If vi_aipinssinmobr.iestatinssinmobr IsNot Nothing Then
                    param17.Value = vi_aipinssinmobr.iestatinssinmobr
                Else
                    param17.Value = ""
                End If
                param17.ParameterName = "p_iestatinssinmobr"

                Dim param18 As New SqlClient.SqlParameter
                param18.SqlDbType = SqlDbType.Decimal
                param18.Precision = 18
                param18.Scale = 0
                param18.Value = vi_aipinssinmobr.idseglogreg
                param18.ParameterName = "p_idseglogreg"
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_aipinssinmobr @p_ioperacion,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinssinmobr output,@p_idaipinssin,@p_idaipmanrepu,@p_ncantinssinmobr,@p_iorigrepuinssinmobr,@p_itaminssinmobr,@p_itipomatinssinmobr,@p_nprecfininssinmobr,@p_xdescinssinmobr,@p_iestatinssinmobr,@p_idseglogreg", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsSinMObra ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsLimSinMobr(vi_aipinslimsinmobr As vi_aipinslimsinmobr) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "actualizar"
                param1.ParameterName = "p_ioperacion"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = vi_aipinslimsinmobr.idaipinslimsinmobr
                param8.ParameterName = "p_idaipinslimsinmobr"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = vi_aipinslimsinmobr.idaipinslimsin
                param9.ParameterName = "p_idaipinslimsin"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = vi_aipinslimsinmobr.idaipbaremobr
                param10.ParameterName = "p_idaipbaremobr"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.SmallInt
                param11.Value = vi_aipinslimsinmobr.ncantinslimsinmobr
                param11.ParameterName = "p_ncantinslimsinmobr"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.Decimal
                param12.Precision = 18
                param12.Scale = 2
                param12.Value = vi_aipinslimsinmobr.nprecfininslimsinmobr
                param12.ParameterName = "p_nprecfininslimsinmobr"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.VarChar
                param13.Size = 500
                If vi_aipinslimsinmobr.xdescinslimsinmobr IsNot Nothing Then
                    param13.Value = vi_aipinslimsinmobr.xdescinslimsinmobr
                Else
                    param13.Value = ""
                End If
                param13.ParameterName = "p_xdescinslimsinmobr"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 20
                If vi_aipinslimsinmobr.iestatinslimsinmobr IsNot Nothing Then
                    param14.Value = vi_aipinslimsinmobr.iestatinslimsinmobr
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_iestatinslimsinmobr"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.Decimal
                param15.Precision = 18
                param15.Scale = 0
                param15.Value = vi_aipinslimsinmobr.idseglogreg
                param15.ParameterName = "p_idseglogreg"
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_aipinslimsinmobr @p_ioperacion,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinslimsinmobr output,@p_idaipinslimsin,@p_idaipbaremobr,@p_ncantinslimsinmobr,@p_nprecfininslimsinmobr,@p_xdescinslimsinmobr,@p_iestatinslimsinmobr,@p_idseglogreg", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsLimSinMobr ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsAjusSinRepu(vi_aipinsajussinrepu As vi_aipinsajussinrepu) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "actualizar"
                param1.ParameterName = "p_ioperacion"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = vi_aipinsajussinrepu.idaipinsajussinrepu
                param8.ParameterName = "p_idaipinsajussinrepu"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = vi_aipinsajussinrepu.idaipinsajussin
                param9.ParameterName = "p_idaipinsajussin"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = vi_aipinsajussinrepu.idaipbarerepu
                param10.ParameterName = "p_idaipbarerepu"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.SmallInt
                param11.Value = vi_aipinsajussinrepu.ncantinsajussinrepu
                param11.ParameterName = "p_ncantinsajussinrepu"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.Decimal
                param12.Precision = 18
                param12.Scale = 2
                param12.Value = vi_aipinsajussinrepu.nprecfininsajussinrepu
                param12.ParameterName = "p_nprecfininsajussinrepu"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.VarChar
                param13.Size = 500
                If vi_aipinsajussinrepu.xdescinsajussinrepu IsNot Nothing Then
                    param13.Value = vi_aipinsajussinrepu.xdescinsajussinrepu
                Else
                    param13.Value = ""
                End If
                param13.ParameterName = "p_xdescinsajussinrepu"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 20
                If vi_aipinsajussinrepu.iestatinsajussinrepu IsNot Nothing Then
                    param14.Value = vi_aipinsajussinrepu.iestatinsajussinrepu
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_iestatinsajussinrepu"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.Decimal
                param15.Precision = 18
                param15.Scale = 0
                param15.Value = vi_aipinsajussinrepu.idseglogreg
                param15.ParameterName = "p_idseglogreg"
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_aipinsajussinrepu @p_ioperacion,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinsajussinrepu output,@p_idaipinsajussin,@p_idaipbarerepu,@p_ncantinsajussinrepu,@p_nprecfininsajussinrepu,@p_xdescinsajussinrepu,@p_iestatinsajussinrepu,@p_idseglogreg", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsAjusSinRepu ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsAjusSinMobr(vi_aipinsajussinmobr As vi_aipinsajussinmobr) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "actualizar"
                param1.ParameterName = "p_ioperacion"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = vi_aipinsajussinmobr.idaipinsajussinmobr
                param8.ParameterName = "p_idaipinsajussinmobr"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = vi_aipinsajussinmobr.idaipinsajussin
                param9.ParameterName = "p_idaipinsajussin"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = vi_aipinsajussinmobr.idaipbaremobr
                param10.ParameterName = "p_idaipbaremobr"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.SmallInt
                param11.Value = vi_aipinsajussinmobr.ncantinsajussinmobr
                param11.ParameterName = "p_ncantinsajussinmobr"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.Decimal
                param12.Precision = 18
                param12.Scale = 2
                param12.Value = vi_aipinsajussinmobr.nprecfininsajussinmobr
                param12.ParameterName = "p_nprecfininsajussinmobr"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.VarChar
                param13.Size = 500
                If vi_aipinsajussinmobr.xdescinsajussinmobr IsNot Nothing Then
                    param13.Value = vi_aipinsajussinmobr.xdescinsajussinmobr
                Else
                    param13.Value = ""
                End If
                param13.ParameterName = "p_xdescinsajussinmobr"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 20
                If vi_aipinsajussinmobr.iestatinsajussinmobr IsNot Nothing Then
                    param14.Value = vi_aipinsajussinmobr.iestatinsajussinmobr
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_iestatinsajussinmobr"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.Decimal
                param15.Precision = 18
                param15.Scale = 0
                param15.Value = vi_aipinsajussinmobr.idseglogreg
                param15.ParameterName = "p_idseglogreg"
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_aipinsajussinmobr @p_ioperacion,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinsajussinmobr output,@p_idaipinsajussin,@p_idaipbaremobr,@p_ncantinsajussinmobr,@p_nprecfininsajussinmobr,@p_xdescinsajussinmobr,@p_iestatinsajussinmobr,@p_idseglogreg", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsAjusSinMobr ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsAjusAnexRepu(vi_aipinsajusanexrepu As vi_aipinsajusanexrepu) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "actualizar"
                param1.ParameterName = "p_ioperacion"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = vi_aipinsajusanexrepu.idaipinsajusanexrepu
                param8.ParameterName = "p_idaipinsajusanexrepu"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = vi_aipinsajusanexrepu.idaipinsajusanex
                param9.ParameterName = "p_idaipinsajusanex"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = vi_aipinsajusanexrepu.idaipbarerepu
                param10.ParameterName = "p_idaipbarerepu"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.SmallInt
                param11.Value = vi_aipinsajusanexrepu.ncantinsajusanexrepu
                param11.ParameterName = "p_ncantinsajusanexrepu"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.Decimal
                param12.Precision = 18
                param12.Scale = 2
                param12.Value = vi_aipinsajusanexrepu.nprecfininsajusanexrepu
                param12.ParameterName = "p_nprecfininsajusanexrepu"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.VarChar
                param13.Size = 500
                If vi_aipinsajusanexrepu.xdescinsajusanexrepu IsNot Nothing Then
                    param13.Value = vi_aipinsajusanexrepu.xdescinsajusanexrepu
                Else
                    param13.Value = ""
                End If
                param13.ParameterName = "p_xdescinsajusanexrepu"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 20
                If vi_aipinsajusanexrepu.iestatinsajusanexrepu IsNot Nothing Then
                    param14.Value = vi_aipinsajusanexrepu.iestatinsajusanexrepu
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_iestatinsajusanexrepu"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.Decimal
                param15.Precision = 18
                param15.Scale = 0
                param15.Value = vi_aipinsajusanexrepu.idseglogreg
                param15.ParameterName = "p_idseglogreg"
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_aipinsajusanexrepu @p_ioperacion,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinsajusanexrepu output,@p_idaipinsajusanex,@p_idaipbarerepu,@p_ncantinsajusanexrepu,@p_nprecfininsajusanexrepu,@p_xdescinsajusanexrepu,@p_iestatinsajusanexrepu,@p_idseglogreg", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsAjusAnexRepu ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarAipInsAjusAnexMobr(vi_aipinsajusanexmobr As vi_aipinsajusanexmobr) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "actualizar"
                param1.ParameterName = "p_ioperacion"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = vi_aipinsajusanexmobr.idaipinsajusanexmobr
                param8.ParameterName = "p_idaipinsajusanexmobr"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = vi_aipinsajusanexmobr.idaipinsajusanex
                param9.ParameterName = "p_idaipinsajusanex"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = vi_aipinsajusanexmobr.idaipbaremobr
                param10.ParameterName = "p_idaipbaremobr"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.SmallInt
                param11.Value = vi_aipinsajusanexmobr.ncantinsajusanexmobr
                param11.ParameterName = "p_ncantinsajusanexmobr"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.Decimal
                param12.Precision = 18
                param12.Scale = 2
                param12.Value = vi_aipinsajusanexmobr.nprecfininsajusanexmobr
                param12.ParameterName = "p_nprecfininsajusanexmobr"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.VarChar
                param13.Size = 500
                If vi_aipinsajusanexmobr.xdescinsajusanexmobr IsNot Nothing Then
                    param13.Value = vi_aipinsajusanexmobr.xdescinsajusanexmobr
                Else
                    param13.Value = ""
                End If
                param13.ParameterName = "p_xdescinsajusanexmobr"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 20
                If vi_aipinsajusanexmobr.iestatinsajusanexmobr IsNot Nothing Then
                    param14.Value = vi_aipinsajusanexmobr.iestatinsajusanexmobr
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_iestatinsajusanexmobr"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.Decimal
                param15.Precision = 18
                param15.Scale = 0
                param15.Value = vi_aipinsajusanexmobr.idseglogreg
                param15.ParameterName = "p_idseglogreg"
                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_aipinsajusanexmobr @p_ioperacion,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinsajusanexmobr output,@p_idaipinsajusanex,@p_idaipbaremobr,@p_ncantinsajusanexmobr,@p_nprecfininsajusanexmobr,@p_xdescinsajusanexmobr,@p_iestatinsajusanexmobr,@p_idseglogreg", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ActualizarAipInsAjusAnexMobr ", ex)
                Return respopera
            End Try
        End Function
        '---ACTAULIZAR------------
        'metodos para los actualizar


        ''--imprimir
        Public Function celldas(xtexto As String, color1 As Integer, color2 As Integer, color3 As Integer, colspan As Integer, ndireccion As Integer, nbasecolor As System.Drawing.Color, nborder As Integer, ntamletra As Single, nborde_arriba As Single, nborde_abajo As Single, nborde_derecha As Single, nborde_izquierda As Single) As iTextSharp.text.pdf.PdfPCell
            Dim cell As New iTextSharp.text.pdf.PdfPCell(New iTextSharp.text.Phrase(xtexto, New iTextSharp.text.Font(iTextSharp.text.Font.FontFamily.HELVETICA, ntamletra, iTextSharp.text.Font.NORMAL, New iTextSharp.text.BaseColor(nbasecolor))))
            cell.Colspan = colspan
            cell.HorizontalAlignment = ndireccion '0=Left, 1=Centre, 2=Right
            If color1 <> 0 And color2 <> 0 And color3 <> 0 Then
                cell.BackgroundColor = New iTextSharp.text.BaseColor(color1, color2, color3)
            End If
            cell.BorderWidthBottom = nborde_abajo
            cell.BorderWidthTop = nborde_arriba
            cell.BorderWidthLeft = nborde_izquierda
            cell.BorderWidthRight = nborde_derecha

            'Select Case nborder
            '    Case 1  'quitar el borde de abajo   
            '        cell.BorderWidthBottom = 2
            '    Case 2 'quitar el borde de arriba
            '        cell.BorderWidthTop = 2

            'End Select
            'If nborder <> -1 Then
            '    'cell.Border = nborder
            '    'cell.BorderWidthRight = -1
            '    cell.UseVariableBorders = False
            '    'cell.BorderColorRight = New iTextSharp.text.BaseColor(0, 0, 0)
            '    'cell.BorderColorBottom = New iTextSharp.text.BaseColor(0, 0, 0)
            'End If
            'cell.Border = 0
            Return cell
        End Function

        <HttpGet()> _
        Public Function ImprimirInspeccionSuscripcion(idaipinssus As Decimal) As DownloadFilesResult
            Try

                Dim vi_aipinssusController As New vi_aipinssusController
                Dim vi_aipinssus As vi_aipinssus = vi_aipinssusController.selvi_aipinssusxid(idaipinssus)

                Dim comunconfvalorController As New comunconfvalorController
                Dim lista_comunconfvalor As New List(Of comunconfvalor)


                Dim xvalor As String = " ()"
                Dim xvalor2 As String = " ()"
                Dim xvalor3 As String = " ()"
                Dim xvalor4 As String = " ()"

                Dim xvaloresdrescripcion As String = ""

                Dim ms As New MemoryStream
                Dim doc As New iTextSharp.text.Document(iTextSharp.text.PageSize.A4)
                Dim writer As iTextSharp.text.pdf.PdfWriter = iTextSharp.text.pdf.PdfWriter.GetInstance(doc, ms)
                'Dim ev As New itsEvents
                'writer.PageEvent = ev
                doc.Open()
                Dim table0 As New iTextSharp.text.pdf.PdfPTable(2)
                table0.SetWidths(New Integer() {600, 250})
                table0.WidthPercentage = 100
                Dim img1 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "logo_federal.png")
                img1.ScalePercent(100.0F)
                'img2.SetAbsolutePosition(300, 800)                
                img1.SpacingBefore = 60
                Dim cell2 As New iTextSharp.text.pdf.PdfPCell((img1))
                cell2.Colspan = 1
                cell2.HorizontalAlignment = 0 '0=Left, 1=Centre, 2=Right
                cell2.Border = 0
                table0.AddCell(cell2)
                cell2 = celldas("                   INSPECCIÓN                      DE VEHICULOS TERRESTRES", 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                'cell2 = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                'table0.AddCell(cell2)
                'cell2 = celldas(" DE VEHICULOS TERRESTRES", 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                'table0.AddCell(cell2)


                Dim vi_aipinsencController As New vi_aipinsencController
                Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(vi_aipinssus.idaipinsenc)
                Dim table1 As New iTextSharp.text.pdf.PdfPTable(4)
                table1.SetWidths(New Integer() {120, 90, 90, 200})
                table1.WidthPercentage = 100
                Dim cell As New iTextSharp.text.pdf.PdfPCell
                'cell = celldas(" ", 59, 89, 152, 4, 0, System.Drawing.Color.White, -1, 10.0F,0.5,0.5,0.5,0.5)
                'table1.AddCell(cell)
                cell = celldas("Fecha de la Inspección:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas("Póliza N°", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas("Código", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas("Nombre del Intermediario:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinsenc.fcreainsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinsenc.xnumpolinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinsenc.xnumsininsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinssus.xnomsolinssus, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)

                Dim lista_vi_aipinssusmotiv As List(Of vi_aipinssusmotiv) = ObtenerMotivosInspeccionSusActivos(vi_aipinssus.idaipinssus)
                Dim table2 As New iTextSharp.text.pdf.PdfPTable(3)
                table2.SetWidths(New Integer() {70, 70, 70})
                table2.WidthPercentage = 100
                cell = celldas(UCase("Motivo de la inspección:"), 107, 104, 98, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table2.AddCell(cell)
                Dim nborde_arriba As Single = 0.5
                Dim nborde_abajo As Single = 0.5
                Dim nborde_derecha As Single = 0.5
                Dim nborde_izquierda As Single = 0.5

                Dim lugar_colspan As Integer = 0
                If lista_vi_aipinssusmotiv.Count > 0 Then
                    For i As Integer = 0 To lista_vi_aipinssusmotiv.Count - 1
                        xvalor = " ()"
                        If lista_vi_aipinssusmotiv(i).itilinssusmotiv = True Then
                            xvalor = " (X)"
                        End If
                        lugar_colspan = lugar_colspan + 1
                        Select Case lugar_colspan
                            Case 1
                                nborde_arriba = 0
                                nborde_abajo = 0
                                nborde_derecha = 0
                                nborde_izquierda = 0.5
                            Case 2
                                nborde_arriba = 0
                                nborde_abajo = 0
                                nborde_derecha = 0
                                nborde_izquierda = 0
                            Case 3
                                nborde_arriba = 0
                                nborde_abajo = 0
                                nborde_derecha = 0.5
                                nborde_izquierda = 0
                                lugar_colspan = 0
                        End Select
                        cell = celldas("   " & i + 1 & ". " & lista_vi_aipinssusmotiv(i).xnominsmotiv & xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, nborde_arriba, nborde_abajo, nborde_derecha, nborde_izquierda)
                        table2.AddCell(cell)
                    Next
                    Dim nmultiplo As Integer = esmultiplo(lista_vi_aipinssusmotiv.Count, 3)
                    If nmultiplo <> 0 Then
                        cell = celldas(" ", 0, 0, 0, 3 - nmultiplo, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                        table2.AddCell(cell)
                    End If
                    cell = celldas("", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                    table2.AddCell(cell)
                End If

                Dim table2_2 As New iTextSharp.text.pdf.PdfPTable(3)
                table2_2.SetWidths(New Integer() {70, 70, 70})
                table2_2.WidthPercentage = 100
                cell = celldas("Solicitante:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table2_2.AddCell(cell)
                cell = celldas("Cédula de Identidad:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table2_2.AddCell(cell)
                cell = celldas(vi_aipinssus.xnomsolinssus, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table2_2.AddCell(cell)
                cell = celldas(vi_aipinsenc.xcedulaperit, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table2_2.AddCell(cell)
                'cell = celldas("Lugar de inspección:", 0, 0, 0, 3, 0, System.Drawing.Color.Black,1,10.0F)
                'table2_2.AddCell(cell)
                lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("ILUGINSSUS")
                xvaloresdrescripcion = "Lugar de inspección:"
                For i As Integer = 0 To lista_comunconfvalor.Count - 1
                    If lista_comunconfvalor(i).xvalordescripcion <> "SELECCIONE..." Then
                        xvalor = (" ()")
                        If lista_comunconfvalor(i).xvalordescripcion = vi_aipinssus.iluginssus Then
                            xvalor = (" (X)")
                        End If
                        xvaloresdrescripcion = xvaloresdrescripcion & xvalor & " " & lista_comunconfvalor(i).xvalordescripcion & " "
                    End If
                Next
                cell = celldas(xvaloresdrescripcion, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table2_2.AddCell(cell)
                'cell = celldas(vi_aipinssus.xvalordescripcion, 0, 0, 0, 1, 0, System.Drawing.Color.Black)
                'table2_2.AddCell(cell)

                Dim table3 As New iTextSharp.text.pdf.PdfPTable(5)
                table3.SetWidths(New Integer() {70, 70, 70, 70, 70})
                table3.WidthPercentage = 100
                cell = celldas(UCase("Características del vehículo:"), 107, 104, 98, 5, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                Dim vi_aipmanvehController As New vi_aipmanvehController
                Dim vi_aipmanveh As vi_aipmanveh = vi_aipmanvehController.selvi_aipmanvehxid(vi_aipinssus.idaipmanveh)
                cell = celldas("Marca:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Modelo", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Versión", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Año:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.xnommanvehmar, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.xnommanvehmod, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.xnommanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                'Dim aipmanvehverController As New aipmanvehverController
                'Dim naniomanvehver As Decimal = aipmanvehverController.selnaniomanvehverxid(vi_aipmanveh.idaipmanvehver)
                cell = celldas(vi_aipmanveh.naniomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)

                'cell = celldas("Marca:", 0, 0, 0, 1, 0, System.Drawing.Color.Black)
                'table3.AddCell(cell)
                'cell = celldas("Modelo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black)
                'table3.AddCell(cell)
                'cell = celldas("Versión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black)
                'table3.AddCell(cell)
                'cell = celldas(vi_aipmanveh.xnommanvehmar, 0, 0, 0, 1, 0, System.Drawing.Color.Black)
                'table3.AddCell(cell)
                'cell = celldas(vi_aipmanveh.xnommanvehmod, 0, 0, 0, 1, 0, System.Drawing.Color.Black)
                'table3.AddCell(cell)
                'cell = celldas(vi_aipmanveh.xnommanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black)
                'table3.AddCell(cell)
                cell = celldas("Tipo de transmisión:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Clase:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Color principal:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Placa:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0.5)
                table3.AddCell(cell)

                lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("ITIPOTRANSMANVEH")
                xvaloresdrescripcion = ""
                For i As Integer = 0 To lista_comunconfvalor.Count - 1
                    If lista_comunconfvalor(i).xvalordescripcion <> "SELECCIONE..." Then
                        xvalor = (" ()")
                        If lista_comunconfvalor(i).xvalordescripcion = vi_aipmanveh.itipotransmanveh Then
                            xvalor = (" (X)")
                        End If
                        xvaloresdrescripcion = xvaloresdrescripcion & xvalor & " " & lista_comunconfvalor(i).xvalordescripcion & " "
                    End If
                Next
                cell = celldas(xvaloresdrescripcion, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.iclasemanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.icolormanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.xplacamanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)


                cell = celldas("Serial de carrocería:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Serial del motor:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Tracción:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Kilometraje:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Vehículo importado:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas(vi_aipmanveh.xsercarrmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.xsermotmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("ITRACCMANVEH")
                xvaloresdrescripcion = ""
                For i As Integer = 0 To lista_comunconfvalor.Count - 1
                    If lista_comunconfvalor(i).xvalordescripcion <> "SELECCIONE..." Then
                        xvalor = (" ()")
                        If lista_comunconfvalor(i).xvalordescripcion = vi_aipmanveh.itraccmanveh Then
                            xvalor = (" (X)")
                        End If
                        xvaloresdrescripcion = xvaloresdrescripcion & xvalor & " " & lista_comunconfvalor(i).xvalordescripcion & " "
                    End If
                Next
                cell = celldas(xvaloresdrescripcion, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas(vi_aipinssus.nkiloinssus, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                xvaloresdrescripcion = ""
                If vi_aipinssus.iimpmanveh = True Then
                    xvaloresdrescripcion = " (X)SI  ()NO"
                Else
                    xvaloresdrescripcion = " ()SI  (X)NO"
                End If
                cell = celldas(xvaloresdrescripcion, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                'ITRACCMANVEH
                'cell = celldas(vi_aipmanveh.iimpmanveh, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F,0.5,0.5,0.5,0.5)
                'table3.AddCell(cell)


                Dim lista_vi_aipinssusrepuest As List(Of vi_aipinssusrepuest) = ObtenerRepuestosSuscripcionEstadGen(vi_aipinssus.idaipinssus)
                Dim table4 As New iTextSharp.text.pdf.PdfPTable(6)
                table4.SetWidths(New Integer() {70, 40, 70, 40, 70, 40})
                table4.WidthPercentage = 100
                cell = celldas(UCase("Estado general:"), 107, 104, 98, 6, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table4.AddCell(cell)
                If lista_vi_aipinssusrepuest.Count > 0 Then
                    lugar_colspan = 0
                    For i As Integer = 0 To lista_vi_aipinssusrepuest.Count - 1
                        xvalor = " L()"
                        xvalor2 = " M()"
                        xvalor3 = " F()"
                        xvalor4 = " B()"
                        If lista_vi_aipinssusrepuest(i).ileveinssusrepuest = True Then
                            'If lista_vi_aipinssusrepuest(i).iestinssusrepuest = "B" Then
                            xvalor = " L(X)"
                        End If
                        If lista_vi_aipinssusrepuest(i).imedinssusrepuest = True Then
                            'If lista_vi_aipinssusrepuest(i).iestinssusrepuest = "R" Then
                            xvalor2 = " M(X)"
                        End If
                        If lista_vi_aipinssusrepuest(i).ifueinssusrepuest = True Then
                            'If lista_vi_aipinssusrepuest(i).iestinssusrepuest = "M" Then
                            xvalor3 = " F(X)"
                        End If

                        If lista_vi_aipinssusrepuest(i).ibueestinssusrepuest = True Then
                            'If lista_vi_aipinssusrepuest(i).iestinssusrepuest = "M" Then
                            xvalor3 = " B(X)"
                        End If

                        lugar_colspan = lugar_colspan + 1
                        Select Case lugar_colspan
                            Case 2
                                nborde_arriba = 0
                                nborde_abajo = 0.5
                                nborde_derecha = 0.5
                                nborde_izquierda = 0
                            Case 4
                                nborde_arriba = 0
                                nborde_abajo = 0.5
                                nborde_derecha = 0.5
                                nborde_izquierda = 0
                            Case 6
                                nborde_arriba = 0
                                nborde_abajo = 0.5
                                nborde_derecha = 0.5
                                nborde_izquierda = 0
                                lugar_colspan = 0
                            Case Else
                                nborde_arriba = 0
                                nborde_abajo = 0.5
                                nborde_derecha = 0
                                nborde_izquierda = 0.5
                        End Select
                        cell = celldas(lista_vi_aipinssusrepuest(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0, 0.5)
                        table4.AddCell(cell)
                        cell = celldas(xvalor & xvalor2 & xvalor3, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                        table4.AddCell(cell)
                    Next
                    Dim nmultiplo As Integer = esmultiplo(lista_vi_aipinssusrepuest.Count, 3)
                    If nmultiplo <> 0 Then
                        cell = celldas(" ", 0, 0, 0, 3 - nmultiplo, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                        table4.AddCell(cell)
                    End If
                End If


                Dim lista_vi_aipinssusacc As List(Of vi_aipinssusacc) = ObtenerSuscripcionAccVeh(vi_aipinssus.idaipinssus)
                Dim table5 As New iTextSharp.text.pdf.PdfPTable(6)
                table5.SetWidths(New Integer() {70, 40, 70, 40, 70, 40})
                table5.WidthPercentage = 100
                cell = celldas(UCase("Accesorios:"), 107, 104, 98, 6, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                If lista_vi_aipinssusacc.Count > 0 Then
                    For i As Integer = 0 To lista_vi_aipinssusacc.Count - 1
                        xvalor = " N() "
                        xvalor2 = " O() "
                        xvalor3 = " NO() "
                        If lista_vi_aipinssusacc(i).inoexistinssusacc = True Then
                            xvalor = " N(X) "
                        End If

                        If lista_vi_aipinssusacc(i).ioriginssusacc = True Then
                            xvalor2 = " O(X) "
                        End If

                        If lista_vi_aipinssusacc(i).inooriginssusacc = True Then
                            xvalor3 = " NO(X) "
                        End If

                        cell = celldas(lista_vi_aipinssusacc(i).xnommanvehacc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                        table5.AddCell(cell)
                        cell = celldas(xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                        table5.AddCell(cell)
                    Next
                    Dim nmultiplo As Integer = esmultiplo(lista_vi_aipinssusacc.Count, 3)
                    If nmultiplo <> 0 Then
                        cell = celldas(" ", 0, 0, 0, 6 - nmultiplo, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                        table5.AddCell(cell)
                    End If
                    cell = celldas(" B (Bueno) R (Regular) M (Malo)", 0, 0, 0, 6, 2, System.Drawing.Color.Black, -1, 8.0F, 0, 0, 0, 0)
                    table5.AddCell(cell)
                End If


                Dim lista_vi_aipinssussse As List(Of vi_aipinssussse) = ObtenerSuscripcionSseVeh(vi_aipinssus.idaipinssus)
                Dim table6 As New iTextSharp.text.pdf.PdfPTable(6)
                table6.SetWidths(New Integer() {70, 40, 70, 40, 70, 40})
                table6.WidthPercentage = 100
                cell = celldas(UCase("Sistemas de seguridad electrónicos:"), 107, 104, 98, 6, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                If lista_vi_aipinssussse.Count > 0 Then
                    For i As Integer = 0 To lista_vi_aipinssussse.Count - 1
                        'xvalor = " ()"
                        xvalor = " SI() NO(X) "
                        If lista_vi_aipinssussse(i).iexisinssussse = 1 Then
                            'xvalor = " (X)"
                            xvalor = " SI(X) NO() "
                        End If

                        cell = celldas(lista_vi_aipinssussse(i).xnommanvehsse, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                        table6.AddCell(cell)
                        cell = celldas(xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                        table6.AddCell(cell)
                    Next
                    Dim nmultiplo As Integer = esmultiplo(lista_vi_aipinssussse.Count, 6)
                    If nmultiplo <> 0 Then
                        cell = celldas(" ", 0, 0, 0, 6 - nmultiplo, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                        table5.AddCell(cell)
                    End If
                End If


                Dim lista_vi_aipinssusssm As List(Of vi_aipinssusssm) = ObtenerSuscripcionSsmVeh(vi_aipinssus.idaipinssus)
                Dim table7 As New iTextSharp.text.pdf.PdfPTable(4)
                table7.SetWidths(New Integer() {70, 40, 70, 40})
                table7.WidthPercentage = 100
                cell = celldas(UCase("Sistemas de seguridad mecánicos:"), 107, 104, 98, 6, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table7.AddCell(cell)
                If lista_vi_aipinssusssm.Count > 0 Then
                    For i As Integer = 0 To lista_vi_aipinssusssm.Count - 1
                        'xvalor = " ()"
                        xvalor = " SI() NO(X) "
                        If lista_vi_aipinssusssm(i).iexisinssusssm = 1 Then
                            ' xvalor = " (X)"
                            xvalor = " SI(X) NO() "
                        End If

                        cell = celldas(lista_vi_aipinssusssm(i).xnommanvehssm, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                        table7.AddCell(cell)
                        cell = celldas(xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                        table7.AddCell(cell)
                    Next
                    Dim nmultiplo As Integer = esmultiplo(lista_vi_aipinssusssm.Count, 6)
                    If nmultiplo <> 0 Then
                        cell = celldas(" ", 0, 0, 0, 6 - nmultiplo, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                        table7.AddCell(cell)
                    End If
                End If


                Dim table7_2 As New iTextSharp.text.pdf.PdfPTable(1)
                table7_2.SetWidths(New Integer() {70})
                table7_2.WidthPercentage = 100
                Dim img2 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "carrito.png")
                img2.ScalePercent(100.0F)
                'img2.SetAbsolutePosition(300, 800)                
                img2.SpacingBefore = 60
                cell2 = New iTextSharp.text.pdf.PdfPCell((img2))
                cell2.Colspan = 1
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                cell2.Border = 0
                table7_2.AddCell(cell2)


                Dim table8 As New iTextSharp.text.pdf.PdfPTable(3)
                table8.SetWidths(New Integer() {70, 70, 70})
                table8.WidthPercentage = 100
                cell = celldas(UCase("Levantamiento del serial:"), 107, 104, 98, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table8.AddCell(cell)
                If vi_aipinssus.iserbodinssus = True Then
                    xvalor = " (X)"
                Else
                    xvalor = " ()"
                End If
                cell = celldas("Body del serial " & xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0.5)
                table8.AddCell(cell)
                If vi_aipinssus.ialarcorrinssus = True Then
                    xvalor = " (X)"
                Else
                    xvalor = " ()"
                End If
                cell = celldas("Alarma cortacorriente " & xvalor, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0)
                table8.AddCell(cell)
                cell = celldas(" " & vi_aipinssus.xserinssus, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table8.AddCell(cell)
                'cell = celldas("Serial " & xvalor, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                'table8.AddCell(cell)

                Dim table9 As New iTextSharp.text.pdf.PdfPTable(3)
                table9.SetWidths(New Integer() {70, 70, 70})
                table9.WidthPercentage = 100
                cell = celldas(UCase("Opinión del riesgo:"), 107, 104, 98, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas("Dictamen ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas(" " & vi_aipinssus.xdictinssus, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table9.AddCell(cell)
                'table0.SpacingBefore = 10
                'doc.Add(table0)

                Dim table9_2 As New iTextSharp.text.pdf.PdfPTable(7)
                table9_2.SetWidths(New Integer() {70, 100, 70, 100, 70, 100, 70})
                table9_2.WidthPercentage = 100
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table9_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table9_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table9_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table9_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table9_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table9_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table9_2.AddCell(cell)

                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table9_2.AddCell(cell)
                cell = celldas(" INSPECTOR", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                table9_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table9_2.AddCell(cell)
                cell = celldas(" SOLICITANTE", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                table9_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table9_2.AddCell(cell)
                cell = celldas(" JEFE DEL DPTO.", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                table9_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table9_2.AddCell(cell)


                'tabla de las imagenes
                Dim tableimg As New iTextSharp.text.pdf.PdfPTable(1)
                tableimg.SetWidths(New Integer() {350})
                tableimg.WidthPercentage = 100
                'cell = celldas("FOTOS ADJUNTAS", 107, 104, 98, 1, 1, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'tableimg.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                tableimg.AddCell(cell)
                Dim vi_aipinsfotoController As New vi_aipinsfotoController
                Dim lista_vi_aipinsfoto As List(Of vi_aipinsfoto) = vi_aipinsfotoController.selvi_aipinsfotoxidaipinsenc(vi_aipinsenc.idaipinsenc)
                If lista_vi_aipinsfoto.Count > 0 Then
                    Dim xrutatipoenc As String = ""

                    Dim img As iTextSharp.text.Image

                    Select Case vi_aipinsenc.itipoinsenc
                        Case "SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\suscripcion\ok\"
                        Case "SINIESTRO"
                            xrutatipoenc = "fotosmovil\siniestro\ok\"
                        Case "RESTOS Y SALVAMENTO"
                            xrutatipoenc = "fotosmovil\restos_salvamento\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\limpieza_siniestro\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\limpieza_suscripcion\ok\"
                        Case "AJUSTES POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\ajustes_sinientro\ok\"
                        Case "AJUSTES POR ANEXO"
                            xrutatipoenc = "fotosmovil\ajustes_anexo\ok\"
                    End Select
                    Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
                    Dim xruta As String = ""
                    For i As Integer = 0 To lista_vi_aipinsfoto.Count - 1
                        xruta = xrutaraiz & xrutatipoenc & lista_vi_aipinsfoto(i).xnomarchinsfoto
                        img = iTextSharp.text.Image.GetInstance(xruta)

                        img.ScalePercent(80.0F)
                        img.SpacingBefore = 30

                        cell2 = New iTextSharp.text.pdf.PdfPCell((img))
                        cell2.Colspan = 1
                        cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                        cell2.Border = 0
                        cell2.BorderWidthRight = 0
                        tableimg.AddCell(cell2)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                        tableimg.AddCell(cell)
                    Next
                End If
                'fin tabla imagenes


                table0.SpacingBefore = 10
                doc.Add(table0)

                table1.SpacingBefore = 25
                doc.Add(table1)

                table2.SpacingBefore = 25
                doc.Add(table2)

                table2_2.SpacingBefore = 5
                doc.Add(table2_2)

                table3.SpacingBefore = 15
                doc.Add(table3)

                table4.SpacingBefore = 15
                doc.Add(table4)

                table5.SpacingBefore = 15
                doc.Add(table5)

                table6.SpacingBefore = 35
                doc.Add(table6)

                table7.SpacingBefore = 15
                doc.Add(table7)

                table7_2.SpacingBefore = 15
                doc.Add(table7_2)

                table8.SpacingBefore = 50
                doc.Add(table8)

                table9.SpacingBefore = 15
                doc.Add(table9)

                table9_2.SpacingBefore = 15
                doc.Add(table9_2)

                tableimg.SpacingBefore = 60
                doc.Add(tableimg)


                doc.Close()

                'If File.Exists("C:\sitfxarchivos\sitfx20\prueba2.pdf") Then
                '    File.Delete("C:\sitfxarchivos\sitfx20\prueba2.pdf")
                'End If
                'Dim secuencia As Byte() = ms.ToArray()
                'File.WriteAllBytes("C:\sitfxarchivos\sitfx20\prueba2.pdf", secuencia)

                'Return ms.ToArray()

                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = ms.ToArray()
                DownloadFilesResult.Name = "ReporteInspeccionSuscripcion" & ".pdf"
                DownloadFilesResult.Type = "pdf"

                Return DownloadFilesResult
            Catch ex As Exception
                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                DownloadFilesResult.Name = "ReporteInspeccionSuscripcion" & ".pdf"
                DownloadFilesResult.Type = "pdf"
                Return DownloadFilesResult
            End Try
        End Function


        <HttpGet()> _
        Public Function ImprimirInspeccionSuscripcionNuevo(idaipinssus As Decimal, iimprifoto As Boolean) As DownloadFilesResult
            Try

                Dim vi_aipinssusController As New vi_aipinssusController
                Dim vi_aipinssus As vi_aipinssus = vi_aipinssusController.selvi_aipinssusxid(idaipinssus)

                Dim comunconfvalorController As New comunconfvalorController
                Dim lista_comunconfvalor As New List(Of comunconfvalor)


                Dim vi_aipinsencController As New vi_aipinsencController
                Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(vi_aipinssus.idaipinsenc)

                Dim xvalor As String = " ()"
                Dim xvalor2 As String = " ()"
                Dim xvalor3 As String = " ()"
                Dim xvalor4 As String = " ()"
                Dim xvalor5 As String = " ()"

                Dim xvaloresdrescripcion As String = ""

                Dim ms As New MemoryStream
                Dim doc As New iTextSharp.text.Document(iTextSharp.text.PageSize.A4)
                Dim writer As iTextSharp.text.pdf.PdfWriter = iTextSharp.text.pdf.PdfWriter.GetInstance(doc, ms)
                'Dim ev As New itsEvents
                'writer.PageEvent = ev
                doc.Open()
                Dim table0 As New iTextSharp.text.pdf.PdfPTable(2)
                table0.SetWidths(New Integer() {600, 250})
                table0.WidthPercentage = 100
                Dim img1 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "logo_federal.png")
                img1.ScalePercent(100.0F)
                'img2.SetAbsolutePosition(300, 800)                
                img1.SpacingBefore = 60
                Dim cell2 As New iTextSharp.text.pdf.PdfPCell((img1))
                cell2.Colspan = 2
                cell2.HorizontalAlignment = 0 '0=Left, 1=Centre, 2=Right
                cell2.Border = 0
                table0.AddCell(cell2)

                cell2 = celldas("Fecha: " & Date.Now.ToString("dd/MM/yyyy"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                table0.AddCell(cell2)
                cell2 = celldas("Hora: " & Date.Now.ToString("HH:mm:ss tt"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                table0.AddCell(cell2)


                Dim tituloins As String = "INSPECCIÓN Nro. " & vi_aipinsenc.xnuminspinsenc
                If (vi_aipinsenc.itipoinsenc = "SUSCRIPCION") Then
                    tituloins = tituloins & " Emisión"
                Else
                    tituloins = tituloins & " Siniestro"
                End If


                cell2 = celldas(tituloins, 0, 0, 0, 2, 1, System.Drawing.Color.Black, 2, 12.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                'cell2 = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                'table0.AddCell(cell2)
                'cell2 = celldas(" DE VEHICULOS TERRESTRES", 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                'table0.AddCell(cell2)



                Dim table1 As New iTextSharp.text.pdf.PdfPTable(3)
                table1.SetWidths(New Integer() {120, 120, 120})
                table1.WidthPercentage = 100
                Dim cell As New iTextSharp.text.pdf.PdfPCell
                'cell = celldas(" ", 59, 89, 152, 4, 0, System.Drawing.Color.White, -1, 10.0F,0.5,0.5,0.5,0.5)
                'table1.AddCell(cell)


                cell = celldas("Datos de la inspección", 232, 227, 227, 3, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table1.AddCell(cell)

                ''fila 1
                cell = celldas("Sucursal:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)

                cell = celldas("Inspección:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)

                cell = celldas("Fecha de la Inspección:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)

                cell = celldas(vi_aipinsenc.xnombrecomercialperit, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinsenc.xnuminspinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinsenc.fcreainsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)

                ''fila 2
                cell = celldas("Cliente:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas("Productor:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas("Ramo póliza:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinsenc.xcedpropinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinsenc.xnomprodtorinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinsenc.xnomramopolizinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)

                ''fila 3
                cell = celldas("Producto:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas("Perito:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas("Estatus:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinsenc.xnomprodinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinsenc.xnombrecompletoperit, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinsenc.iestatinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)


                cell = celldas("Deducible:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas("Restricción:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                'cell = celldas("Nro. Inspección:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                'table1.AddCell(cell)
                cell = celldas("Falta Info", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas("Falta Info", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                'cell = celldas(vi_aipinsenc.xnuminspinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table1.AddCell(cell)


                cell = celldas("Motivo:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas("Tipo de inspección:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinsenc.xnominsmotiv, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinsenc.itipoperitinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)


                'lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("ILUGINSSUS")
                'xvaloresdrescripcion = "Lugar de inspección:"
                'For i As Integer = 0 To lista_comunconfvalor.Count - 1
                '    If lista_comunconfvalor(i).xvalordescripcion <> "SELECCIONE..." Then
                '        xvalor = (" ()")
                '        If lista_comunconfvalor(i).xvalordescripcion = vi_aipinssus.iluginssus Then
                '            xvalor = (" (X)")
                '        End If
                '        xvaloresdrescripcion = xvaloresdrescripcion & xvalor & " " & lista_comunconfvalor(i).xvalordescripcion & " "
                '    End If
                'Next
                'cell = celldas(xvaloresdrescripcion, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table1.AddCell(cell)


                cell = celldas("Observaciones:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(vi_aipinsenc.xdescactivperi, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)

                ''motivos
                'Dim lista_vi_aipinssusmotiv As List(Of vi_aipinssusmotiv) = ObtenerMotivosInspeccionSusActivos(vi_aipinssus.idaipinssus)
                'Dim table2 As New iTextSharp.text.pdf.PdfPTable(3)
                'table2.SetWidths(New Integer() {70, 70, 70})
                'table2.WidthPercentage = 100
                'cell = celldas(UCase("Motivo de la inspección:"), 107, 104, 98, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                'table2.AddCell(cell)
                'Dim nborde_arriba As Single = 0.5
                'Dim nborde_abajo As Single = 0.5
                'Dim nborde_derecha As Single = 0.5
                'Dim nborde_izquierda As Single = 0.5

                'cell = celldas("Pregunta", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                'table2.AddCell(cell)
                'cell = celldas("Resp.", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                'table2.AddCell(cell)
                'cell = celldas("Observaciones", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                'table2.AddCell(cell)

                Dim lugar_colspan As Integer = 0
                'If lista_vi_aipinssusmotiv.Count > 0 Then
                '    For i As Integer = 0 To lista_vi_aipinssusmotiv.Count - 1
                '        xvalor = " ()"
                '        If lista_vi_aipinssusmotiv(i).itilinssusmotiv = True Then
                '            xvalor = " (X)"
                '        End If

                '        cell = celldas(lista_vi_aipinssusmotiv(i).xnominsmotiv, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                '        table2.AddCell(cell)

                '        If lista_vi_aipinssusmotiv(i).itilinssusmotiv = True Then
                '            cell = celldas("SI", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                '            table2.AddCell(cell)
                '        End If


                '        cell = celldas("Código", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                '        table2.AddCell(cell)
                '        cell = celldas("Descripción", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                '        table2.AddCell(cell)






                '        'lugar_colspan = lugar_colspan + 1
                '        'Select Case lugar_colspan
                '        '    Case 1
                '        '        nborde_arriba = 0
                '        '        nborde_abajo = 0
                '        '        nborde_derecha = 0
                '        '        nborde_izquierda = 0.5
                '        '    Case 2
                '        '        nborde_arriba = 0
                '        '        nborde_abajo = 0
                '        '        nborde_derecha = 0
                '        '        nborde_izquierda = 0
                '        '    Case 3
                '        '        nborde_arriba = 0
                '        '        nborde_abajo = 0
                '        '        nborde_derecha = 0.5
                '        '        nborde_izquierda = 0
                '        '        lugar_colspan = 0
                '        'End Select
                '        'cell = celldas("   " & i + 1 & ". " & lista_vi_aipinssusmotiv(i).xnominsmotiv & xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, nborde_arriba, nborde_abajo, nborde_derecha, nborde_izquierda)
                '        'table2.AddCell(cell)
                '    Next
                '    'Dim nmultiplo As Integer = esmultiplo(lista_vi_aipinssusmotiv.Count, 3)
                '    'If nmultiplo <> 0 Then
                '    '    cell = celldas(" ", 0, 0, 0, 3 - nmultiplo, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                '    '    table2.AddCell(cell)
                '    'End If
                '    'cell = celldas("", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                '    'table2.AddCell(cell)
                'End If


                ''Características
                Dim table3 As New iTextSharp.text.pdf.PdfPTable(3)
                table3.SetWidths(New Integer() {70, 40, 70})
                table3.WidthPercentage = 100
                cell = celldas("Características del vehículo:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table3.AddCell(cell)
                Dim vi_aipmanvehController As New vi_aipmanvehController
                Dim vi_aipmanveh As vi_aipmanveh = vi_aipmanvehController.selvi_aipmanvehxid(vi_aipinssus.idaipmanveh)

                cell = celldas("Datos", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Código", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Descripción", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)

                ''fila 1
                cell = celldas("Placa", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.xplacamanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas("Serial carroceria", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.xsercarrmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)


                cell = celldas("Sucursal", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipinsenc.idsegmanorgperit, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipinsenc.xnombrecomercialperit, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas("Tipo", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.itipomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas("Marca", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.idaipmanvehmar, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.xnommanvehmar, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas("Modelo", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.idaipmanvehmod, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.xnommanvehmod, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas("Versión del vehiculo", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.idaipmanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.xnommanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas("Derivado (Marca/Modelo/Transmisión)", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("0" & vi_aipmanveh.idaipmanvehmar.ToString() & "0" & vi_aipmanveh.idaipmanvehmod.ToString() & "0" & vi_aipmanveh.idaipmanvehver.ToString(), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.xnommanvehmar & " " & vi_aipmanveh.xnommanvehmod & " " & vi_aipmanveh.xnommanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)


                cell = celldas("Transmisión", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.itipotransmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas("Año:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.naniomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.naniomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas("Color principal", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.icolormanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(ObtenerNombreColorPorCod(vi_aipmanveh.icolormanveh), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas("Serial del motor", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.xsermotmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas("Kilometraje:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipinssus.nkiloinssus, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas("Número de puestos:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.xcapmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas("Tipo de vehiculo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.itipomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)

                cell = celldas("Capacidad de carga (Toneladas):", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(vi_aipmanveh.xcargmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table3.AddCell(cell)


                Dim iagrego = False

                ''estado general

                Dim lista_vi_aipinssusrepuest As List(Of vi_aipinssusrepuest) = ObtenerRepuestosSuscripcionEstadGen(vi_aipinssus.idaipinssus)
                Dim table4 As New iTextSharp.text.pdf.PdfPTable(2)
                'table4.SetWidths(New Integer() {70, 40, 70})
                table4.SetWidths(New Integer() {70, 40})
                table4.WidthPercentage = 100
                cell = celldas(UCase("Estado general:"), 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table4.AddCell(cell)
                If lista_vi_aipinssusrepuest.Count > 0 Then


                    cell = celldas("Pregunta", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                    table4.AddCell(cell)
                    cell = celldas("Respuesta", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                    table4.AddCell(cell)
                    'cell = celldas("Descripción", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                    'table4.AddCell(cell)

                    lugar_colspan = 0
                    For i As Integer = 0 To lista_vi_aipinssusrepuest.Count - 1
                        xvalor = " N/A()"
                        xvalor2 = " L()"
                        xvalor3 = " M()"
                        xvalor4 = " F()"
                        xvalor5 = " B()"

                        iagrego = False
                        cell = celldas(lista_vi_aipinssusrepuest(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                        table4.AddCell(cell)

                        If lista_vi_aipinssusrepuest(i).inoapliinssusrepuest = True Then
                            'If lista_vi_aipinssusrepuest(i).iestinssusrepuest = "B" Then
                            xvalor = " N/A(X)"
                            cell = celldas("N/A", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                            table4.AddCell(cell)
                            iagrego = True
                        End If

                        If lista_vi_aipinssusrepuest(i).ileveinssusrepuest = True Then
                            'If lista_vi_aipinssusrepuest(i).iestinssusrepuest = "B" Then
                            xvalor = " L(X)"
                            cell = celldas("Leve", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                            table4.AddCell(cell)
                            iagrego = True
                        End If
                        If lista_vi_aipinssusrepuest(i).imedinssusrepuest = True Then
                            'If lista_vi_aipinssusrepuest(i).iestinssusrepuest = "R" Then
                            xvalor2 = " M(X)"
                            cell = celldas("Medio", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                            table4.AddCell(cell)
                            iagrego = True
                        End If
                        If lista_vi_aipinssusrepuest(i).ifueinssusrepuest = True Then
                            'If lista_vi_aipinssusrepuest(i).iestinssusrepuest = "M" Then
                            xvalor3 = " F(X)"
                            cell = celldas("Fuerte", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                            table4.AddCell(cell)
                            iagrego = True
                        End If

                        If lista_vi_aipinssusrepuest(i).ibueestinssusrepuest = True Then
                            'If lista_vi_aipinssusrepuest(i).iestinssusrepuest = "M" Then
                            xvalor3 = " B(X)"
                            cell = celldas("Bueno", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                            table4.AddCell(cell)
                            iagrego = True
                        End If

                        If iagrego = False Then
                            xvalor = " N/A(X)"
                            cell = celldas("N/A", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                            table4.AddCell(cell)
                        End If

                        'cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                        'table4.AddCell(cell)
                    Next

                End If


                Dim lista_vi_aipinssusacc As List(Of vi_aipinssusacc) = ObtenerSuscripcionAccVeh(vi_aipinssus.idaipinssus)
                Dim table5 As New iTextSharp.text.pdf.PdfPTable(2)
                table5.SetWidths(New Integer() {70, 40})
                table5.WidthPercentage = 100
                cell = celldas(UCase("Accesorios:"), 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                If lista_vi_aipinssusacc.Count > 0 Then

                    cell = celldas("Pregunta", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                    table5.AddCell(cell)
                    cell = celldas("Respuesta", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                    table5.AddCell(cell)


                    For i As Integer = 0 To lista_vi_aipinssusacc.Count - 1
                        xvalor = " N() "
                        xvalor2 = " O() "
                        xvalor3 = " NO() "

                        cell = celldas(lista_vi_aipinssusacc(i).xnommanvehacc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                        table5.AddCell(cell)
                        iagrego = False

                        If lista_vi_aipinssusacc(i).inoexistinssusacc = True Then
                            xvalor = " N(X) "
                            cell = celldas("NO EXISTE", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                            table5.AddCell(cell)
                            iagrego = True
                        End If

                        If lista_vi_aipinssusacc(i).ioriginssusacc = True Then
                            xvalor2 = " O(X) "
                            cell = celldas("ORIGINAL", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                            table5.AddCell(cell)
                            iagrego = True
                        End If

                        If lista_vi_aipinssusacc(i).inooriginssusacc = True Then
                            xvalor3 = " NO(X) "
                            cell = celldas("NO ORIGINAL", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                            table5.AddCell(cell)
                            iagrego = True
                        End If

                        If iagrego = False Then
                            xvalor = " N(X) "
                            cell = celldas("N/A", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                            table5.AddCell(cell)
                        End If

                    Next

                End If


                Dim lista_vi_aipinssusinfcomp As List(Of vi_aipinssusinfcomp) = ObtenerSuscripcionInfComplementaria(vi_aipinssus.idaipinssus)
                Dim table6 As New iTextSharp.text.pdf.PdfPTable(2)
                table6.SetWidths(New Integer() {70, 40})
                table6.WidthPercentage = 100
                cell = celldas(UCase("Información complementaria:"), 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table6.AddCell(cell)
                If lista_vi_aipinssusinfcomp.Count > 0 Then

                    cell = celldas("Pregunta", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                    table6.AddCell(cell)
                    cell = celldas("Respuesta", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                    table6.AddCell(cell)
                    'cell = celldas("Descripción", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                    'table6.AddCell(cell)

                    For i As Integer = 0 To lista_vi_aipinssusinfcomp.Count - 1
                        'xvalor = " ()"
                        xvalor = "NO"



                        If lista_vi_aipinssusinfcomp(i).iexisinssusinfcomp = 1 Then
                            'xvalor = " (X)"
                            xvalor = "SI"

                        End If

                        cell = celldas(lista_vi_aipinssusinfcomp(i).xnommaninfcomp, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                        table6.AddCell(cell)
                        cell = celldas(xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                        table6.AddCell(cell)
                        'cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                        'table6.AddCell(cell)

                    Next

                End If


                Dim lista_vi_aipinssussse As List(Of vi_aipinssussse) = ObtenerSuscripcionSseVeh(vi_aipinssus.idaipinssus)
                Dim table7 As New iTextSharp.text.pdf.PdfPTable(2)
                table7.SetWidths(New Integer() {70, 40})
                table7.WidthPercentage = 100
                cell = celldas(UCase("Sistemas de seguridad electrónicos:"), 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table7.AddCell(cell)
                If lista_vi_aipinssussse.Count > 0 Then

                    cell = celldas("Pregunta", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                    table7.AddCell(cell)
                    cell = celldas("Respuesta", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                    table7.AddCell(cell)
                    'cell = celldas("Descripción", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                    'table7.AddCell(cell)

                    For i As Integer = 0 To lista_vi_aipinssussse.Count - 1
                        'xvalor = " ()"
                        xvalor = "NO"



                        If lista_vi_aipinssussse(i).iexisinssussse = 1 Then
                            'xvalor = " (X)"
                            xvalor = "SI"

                        End If

                        cell = celldas(lista_vi_aipinssussse(i).xnommanvehsse, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                        table7.AddCell(cell)
                        cell = celldas(xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                        table7.AddCell(cell)
                        'cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                        'table7.AddCell(cell)

                    Next

                End If


                Dim lista_vi_aipinssusssm As List(Of vi_aipinssusssm) = ObtenerSuscripcionSsmVeh(vi_aipinssus.idaipinssus)
                Dim table8 As New iTextSharp.text.pdf.PdfPTable(2)
                table8.SetWidths(New Integer() {70, 40})
                table8.WidthPercentage = 100
                cell = celldas(UCase("Sistemas de seguridad mecánicos:"), 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table8.AddCell(cell)
                If lista_vi_aipinssusssm.Count > 0 Then

                    cell = celldas("Pregunta", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                    table8.AddCell(cell)
                    cell = celldas("Respuesta", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                    table8.AddCell(cell)
                    'cell = celldas("Descripción", 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                    'table8.AddCell(cell)

                    For i As Integer = 0 To lista_vi_aipinssusssm.Count - 1
                        xvalor = "NO"
                        If lista_vi_aipinssusssm(i).iexisinssusssm Then
                            xvalor = "SI"
                        End If

                        cell = celldas(lista_vi_aipinssusssm(i).xnommanvehssm, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                        table8.AddCell(cell)
                        cell = celldas(xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                        table8.AddCell(cell)
                        'cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                        'table8.AddCell(cell)
                    Next

                End If


                'Dim table7_2 As New iTextSharp.text.pdf.PdfPTable(1)
                'table7_2.SetWidths(New Integer() {70})
                'table7_2.WidthPercentage = 100
                'Dim img2 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "carrito.png")
                'img2.ScalePercent(100.0F)
                ''img2.SetAbsolutePosition(300, 800)                
                'img2.SpacingBefore = 60
                'cell2 = New iTextSharp.text.pdf.PdfPCell((img2))
                'cell2.Colspan = 1
                'cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                'cell2.Border = 0
                'table7_2.AddCell(cell2)


                Dim table9 As New iTextSharp.text.pdf.PdfPTable(1)
                table9.SetWidths(New Integer() {100})
                table9.WidthPercentage = 100
                cell = celldas(UCase("Levantamiento del serial:"), 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table9.AddCell(cell)
                'If vi_aipinssus.iserbodinssus = True Then
                '    xvalor = " (X)"
                'Else
                '    xvalor = " ()"
                'End If
                'cell = celldas("Body del serial " & xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0.5)
                'table9.AddCell(cell)
                'If vi_aipinssus.ialarcorrinssus = True Then
                '    xvalor = " (X)"
                'Else
                '    xvalor = " ()"
                'End If
                cell = celldas("Serial ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas("   " & vi_aipinssus.xserinssus, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table9.AddCell(cell)
                'cell = celldas("Serial " & xvalor, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                'table9.AddCell(cell)

                Dim table10 As New iTextSharp.text.pdf.PdfPTable(1)
                table10.SetWidths(New Integer() {70})
                table10.WidthPercentage = 100
                cell = celldas(UCase("Opinión del riesgo:"), 232, 227, 227, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table10.AddCell(cell)
                cell = celldas("Observaciones ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table10.AddCell(cell)
                cell = celldas("   " & vi_aipinssus.xdictinssus, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table10.AddCell(cell)
                'table0.SpacingBefore = 10
                'doc.Add(table0)

                Dim table10_2 As New iTextSharp.text.pdf.PdfPTable(7)
                table10_2.SetWidths(New Integer() {70, 100, 70, 100, 70, 100, 70})
                table10_2.WidthPercentage = 100
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table10_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table10_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table10_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table10_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table10_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table10_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table10_2.AddCell(cell)

                'cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                'table10_2.AddCell(cell)
                'cell = celldas(" INSPECTOR", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                'table10_2.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                'table10_2.AddCell(cell)
                'cell = celldas(" SOLICITANTE", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                'table10_2.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                'table10_2.AddCell(cell)
                'cell = celldas(" JEFE DEL DPTO.", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                'table10_2.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                'table10_2.AddCell(cell)


                'tabla de las imagenes
                Dim tableimg As New iTextSharp.text.pdf.PdfPTable(1)
                If iimprifoto = True Then

                    tableimg.SetWidths(New Integer() {350})
                    tableimg.WidthPercentage = 100
                    'cell = celldas("FOTOS ADJUNTAS", 107, 104, 98, 1, 1, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                    'tableimg.AddCell(cell)
                    cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                    tableimg.AddCell(cell)
                    Dim vi_aipinsfotoController As New vi_aipinsfotoController
                    Dim lista_vi_aipinsfoto As List(Of vi_aipinsfoto) = vi_aipinsfotoController.selvi_aipinsfotoxidaipinsenc(vi_aipinsenc.idaipinsenc)
                    If lista_vi_aipinsfoto.Count > 0 Then
                        Dim xrutatipoenc As String = ""

                        Dim img As iTextSharp.text.Image

                        Select Case vi_aipinsenc.itipoinsenc
                            Case "SUSCRIPCION"
                                xrutatipoenc = "fotosmovil\suscripcion\ok\"
                            Case "SINIESTRO"
                                xrutatipoenc = "fotosmovil\siniestro\ok\"
                            Case "RESTOS Y SALVAMENTO"
                                xrutatipoenc = "fotosmovil\restos_salvamento\ok\"
                            Case "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
                                xrutatipoenc = "fotosmovil\limpieza_siniestro\ok\"
                            Case "LIMPIEZA DE DAÑOS POR SINIESTRO"
                                xrutatipoenc = "fotosmovil\limpieza_suscripcion\ok\"
                            Case "AJUSTES POR SINIESTRO"
                                xrutatipoenc = "fotosmovil\ajustes_sinientro\ok\"
                            Case "AJUSTES POR ANEXO"
                                xrutatipoenc = "fotosmovil\ajustes_anexo\ok\"
                        End Select
                        Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
                        Dim xruta As String = ""
                        For i As Integer = 0 To lista_vi_aipinsfoto.Count - 1
                            xruta = xrutaraiz & xrutatipoenc & lista_vi_aipinsfoto(i).xnomarchinsfoto
                            img = iTextSharp.text.Image.GetInstance(xruta)

                            img.ScalePercent(80.0F)
                            img.SpacingBefore = 30

                            cell2 = New iTextSharp.text.pdf.PdfPCell((img))
                            cell2.Colspan = 1
                            cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                            cell2.Border = 0
                            cell2.BorderWidthRight = 0
                            tableimg.AddCell(cell2)
                            cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                            tableimg.AddCell(cell)
                        Next
                    End If
                End If
                'fin tabla imagenes


                table0.SpacingBefore = 10
                doc.Add(table0)

                table1.SpacingBefore = 25
                doc.Add(table1)

                'table2.SpacingBefore = 25
                'doc.Add(table2)

                'table2_2.SpacingBefore = 5
                'doc.Add(table2_2)

                table3.SpacingBefore = 15
                doc.Add(table3)

                table4.SpacingBefore = 15
                doc.Add(table4)

                table5.SpacingBefore = 15
                doc.Add(table5)

                table6.SpacingBefore = 35
                doc.Add(table6)

                table7.SpacingBefore = 15
                doc.Add(table7)

                'table7_2.SpacingBefore = 15
                'doc.Add(table7_2)

                table8.SpacingBefore = 50
                doc.Add(table8)

                table9.SpacingBefore = 15
                doc.Add(table9)

                table10.SpacingBefore = 15
                doc.Add(table10)

                table10_2.SpacingBefore = 15
                doc.Add(table10_2)

                If iimprifoto = True Then
                    tableimg.SpacingBefore = 60
                    doc.Add(tableimg)
                End If


                doc.Close()

                'If File.Exists("C:\sitfxarchivos\sitfx20\prueba2.pdf") Then
                '    File.Delete("C:\sitfxarchivos\sitfx20\prueba2.pdf")
                'End If
                'Dim secuencia As Byte() = ms.ToArray()
                'File.WriteAllBytes("C:\sitfxarchivos\sitfx20\prueba2.pdf", secuencia)

                'Return ms.ToArray()

                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = ms.ToArray()
                DownloadFilesResult.Name = "ReporteInspeccionSuscripcion" & ".pdf"
                DownloadFilesResult.Type = "pdf"

                Return DownloadFilesResult
            Catch ex As Exception
                AgregarLogErrores("Metodo:ImprimirInspeccionSuscripcionNuevo ", ex)
                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                DownloadFilesResult.Name = "ReporteInspeccionSuscripcion" & ".pdf"
                DownloadFilesResult.Type = "pdf"
                Return DownloadFilesResult
            End Try
        End Function


        <HttpGet()> _
        Public Function ImprimirInspeccionSiniestro(idaipinssin As Decimal, iimprifoto As Boolean) As DownloadFilesResult
            Try

                Dim vi_aipinssinController As New vi_aipinssinController
                Dim vi_aipinssin As vi_aipinssin = vi_aipinssinController.selvi_aipinssinxid(idaipinssin)

                Dim comunconfvalorController As New comunconfvalorController
                Dim lista_comunconfvalor As New List(Of comunconfvalor)


                Dim vi_aipinsencController As New vi_aipinsencController
                Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(vi_aipinssin.idaipinsenc)

                Dim xvaloresdrescripcion As String = ""

                Dim ms As New MemoryStream
                Dim doc As New iTextSharp.text.Document(iTextSharp.text.PageSize.A4)
                Dim writer As iTextSharp.text.pdf.PdfWriter = iTextSharp.text.pdf.PdfWriter.GetInstance(doc, ms)
                'Dim ev As New itsEvents
                'writer.PageEvent = ev
                doc.Open()
                Dim table0 As New iTextSharp.text.pdf.PdfPTable(2)
                table0.SetWidths(New Integer() {600, 250})
                table0.WidthPercentage = 100
                Dim img1 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "logo_federal.png")
                img1.ScalePercent(100.0F)
                'img2.SetAbsolutePosition(300, 800)                
                img1.SpacingBefore = 60
                Dim cell2 As New iTextSharp.text.pdf.PdfPCell((img1))
                cell2.Colspan = 2
                cell2.HorizontalAlignment = 0 '0=Left, 1=Centre, 2=Right
                cell2.Border = 0
                table0.AddCell(cell2)

                cell2 = celldas("Fecha: " & Date.Now.ToString("dd/MM/yyyy"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                table0.AddCell(cell2)
                cell2 = celldas("Hora: " & Date.Now.ToString("HH:mm:ss tt"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                table0.AddCell(cell2)

                cell2 = celldas("INSPECCIÓN DE DAÑOS", 0, 0, 0, 2, 1, System.Drawing.Color.Black, 2, 12.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                'cell2 = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                'table0.AddCell(cell2)
                'cell2 = celldas(" DE VEHICULOS TERRESTRES", 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                'table0.AddCell(cell2)

                table0.SpacingBefore = 10
                doc.Add(table0)


                Dim table1 As New iTextSharp.text.pdf.PdfPTable(3)
                table1.SetWidths(New Integer() {120, 120, 120})
                table1.WidthPercentage = 100
                Dim cell As New iTextSharp.text.pdf.PdfPCell
                'cell = celldas(" ", 59, 89, 152, 4, 0, System.Drawing.Color.White, -1, 10.0F,0.5,0.5,0.5,0.5)
                'table1.AddCell(cell)


                If (vi_aipinsenc IsNot Nothing) Then


                    cell = celldas("Datos de la inspección", 232, 227, 227, 3, 1, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0.5, 0.5, 0.5)
                    table1.AddCell(cell)

                    ''fila 1
                    cell = celldas("Siniestro:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                    table1.AddCell(cell)
                    cell = celldas("Inspección:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                    table1.AddCell(cell)
                    cell = celldas("Fecha:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                    table1.AddCell(cell)

                    cell = celldas(vi_aipinsenc.xnumsininsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                    table1.AddCell(cell)
                    cell = celldas(vi_aipinsenc.xnuminspinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                    table1.AddCell(cell)
                    cell = celldas(vi_aipinsenc.fcreainsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                    table1.AddCell(cell)

                    'fila 2
                    cell = celldas("Asegurado:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                    table1.AddCell(cell)
                    cell = celldas(vi_aipinsenc.xcedpropinsenc, 0, 0, 0, 3, 0, System.Drawing.Color.Black, 2, 12.0F, 0, 0.5, 0.5, 0.5)
                    table1.AddCell(cell)

                    'fila 3
                    cell = celldas("Sucursal:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                    table1.AddCell(cell)
                    cell = celldas("Ramo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                    table1.AddCell(cell)
                    cell = celldas("Póliza:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                    table1.AddCell(cell)

                    cell = celldas(vi_aipinsenc.xnomsucinsinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                    table1.AddCell(cell)
                    cell = celldas(vi_aipinsenc.xnomramopolizinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                    table1.AddCell(cell)
                    cell = celldas(vi_aipinsenc.xnumpolinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                    table1.AddCell(cell)


                    'fila 4
                    cell = celldas("Sucursal Inspección:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                    table1.AddCell(cell)

                    cell = celldas(vi_aipinsenc.idsegmanorgperit & " " & vi_aipinsenc.xnombrecomercialperit, 0, 0, 0, 3, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                    table1.AddCell(cell)

                    'fila 4
                    cell = celldas("Tipo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                    table1.AddCell(cell)
                    cell = celldas("Motivo:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                    table1.AddCell(cell)
                    'cell = celldas("Nro. Inspección:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                    'table1.AddCell(cell)

                    cell = celldas("Falta Info.", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                    table1.AddCell(cell)
                    cell = celldas(vi_aipinsenc.xnominsmotiv, 0, 0, 0, 2, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                    table1.AddCell(cell)
                    'cell = celldas(vi_aipinsenc.xnuminspinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                    'table1.AddCell(cell)

                    table1.SpacingBefore = 10
                    doc.Add(table1)



                    Dim vi_aipmanvehController As New vi_aipmanvehController
                    Dim vi_aipmanveh As vi_aipmanveh = vi_aipmanvehController.selvi_aipmanvehxid(vi_aipinssin.idaipmanveh)

                    Dim table2 As New iTextSharp.text.pdf.PdfPTable(3)
                    table2.SetWidths(New Integer() {120, 120, 120})
                    table2.WidthPercentage = 100
                    cell = celldas("Datos del vehículo", 232, 227, 227, 3, 1, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0.5, 0.5, 0.5)
                    table2.AddCell(cell)

                    If (vi_aipmanveh IsNot Nothing) Then


                        'fila 1
                        cell = celldas("Placa:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                        table2.AddCell(cell)
                        cell = celldas("Año:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                        table2.AddCell(cell)
                        cell = celldas("Marca:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                        table2.AddCell(cell)

                        cell = celldas(vi_aipmanveh.xplacamanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                        table2.AddCell(cell)
                        cell = celldas(vi_aipmanveh.naniomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                        table2.AddCell(cell)
                        cell = celldas(vi_aipmanveh.xnommanvehmar, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                        table2.AddCell(cell)

                        'fila 2
                        cell = celldas("Modelo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                        table2.AddCell(cell)
                        cell = celldas("Versión:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                        table2.AddCell(cell)

                        cell = celldas(vi_aipmanveh.xnommanvehmod, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                        table2.AddCell(cell)
                        cell = celldas(vi_aipmanveh.xnommanvehver, 0, 0, 0, 2, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                        table2.AddCell(cell)


                        'fila 3
                        cell = celldas("Transmisión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                        table2.AddCell(cell)
                        cell = celldas("Color:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                        table2.AddCell(cell)


                        cell = celldas(vi_aipmanveh.itipotransmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                        table2.AddCell(cell)
                        cell = celldas(ObtenerNombreColorPorCod(vi_aipmanveh.icolormanveh), 0, 0, 0, 2, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                        table2.AddCell(cell)

                        'fila 4
                        cell = celldas("Serial carrocería:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                        table2.AddCell(cell)
                        cell = celldas("Kilometraje:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                        table2.AddCell(cell)

                        cell = celldas(vi_aipmanveh.xsercarrmanveh, 0, 0, 0, 2, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                        table2.AddCell(cell)
                        cell = celldas(vi_aipinssin.nkiloinssin, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                        table2.AddCell(cell)

                        'fila 4
                        cell = celldas("Monto ajustado:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                        table2.AddCell(cell)
                        cell = celldas("Monto estimado:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0, 0.5, 0.5)
                        table2.AddCell(cell)

                        cell = celldas("falta Info.", 0, 0, 0, 2, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                        table2.AddCell(cell)
                        cell = celldas("Falta Info.", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                        table2.AddCell(cell)


                        table2.SpacingBefore = 10
                        doc.Add(table2)



                        ''mano de obra
                        Dim vi_aipinssinmobrController As New vi_aipinssinmobrController
                        Dim lista_vi_aipinssinmobr As List(Of vi_aipinssinmobr) = vi_aipinssinmobrController.selvi_aipinssinmobrxidaipinssin(idaipinssin)

                        Dim table3 As New iTextSharp.text.pdf.PdfPTable(4)
                        table3.SetWidths(New Integer() {120, 120, 120, 70})
                        table3.WidthPercentage = 100
                        cell = celldas("MANO DE OBRA", 232, 227, 227, 4, 1, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0.5, 0.5, 0.5)
                        table3.AddCell(cell)

                        'fila 1
                        cell = celldas("Repuesto", 0, 0, 0, 1, 1, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0.5, 0.5, 0.5)
                        table3.AddCell(cell)
                        cell = celldas("Tipo de Daño", 0, 0, 0, 1, 1, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0.5, 0.5, 0.5)
                        table3.AddCell(cell)
                        cell = celldas("Material", 0, 0, 0, 1, 1, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0.5, 0.5, 0.5)
                        table3.AddCell(cell)
                        cell = celldas("Monto", 0, 0, 0, 1, 1, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0.5, 0.5, 0.5)
                        table3.AddCell(cell)

                        Dim mmonto As Decimal = 0
                        Dim mmontoTot As Decimal = 0
                        If (lista_vi_aipinssinmobr.Count > 0) Then

                            For i As Integer = 0 To lista_vi_aipinssinmobr.Count - 1
                                cell = celldas(lista_vi_aipinssinmobr(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                                table3.AddCell(cell)
                                cell = celldas(lista_vi_aipinssinmobr(i).itidainssinmobr, 0, 0, 0, 1, 1, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                                table3.AddCell(cell)
                                cell = celldas(lista_vi_aipinssinmobr(i).itipomatinssinmobr, 0, 0, 0, 1, 1, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                                table3.AddCell(cell)
                                cell = celldas(formateardecimalymiles(lista_vi_aipinssinmobr(i).nprecfininssinmobr, "es-VE"), 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                                table3.AddCell(cell)

                                mmonto += lista_vi_aipinssinmobr(i).nprecfininssinmobr
                            Next
                            cell = celldas("", 0, 0, 0, 4, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                            table3.AddCell(cell)

                            cell = celldas("Total Mano de obra", 0, 0, 0, 3, 2, System.Drawing.Color.Black, 2, 12.0F, 0, 0, 0, 0)
                            table3.AddCell(cell)
                            cell = celldas(formateardecimalymiles(mmonto, "es-VE"), 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 12.0F, 0, 0, 0, 0)
                            table3.AddCell(cell)

                            mmontoTot += mmonto

                        End If
                        table3.SpacingBefore = 10
                        doc.Add(table3)

                        'repuestos
                        Dim vi_aipinssinrepuController As New vi_aipinssinrepuController
                        Dim lista_vi_aipinssinrepu As List(Of vi_aipinssinrepu) = vi_aipinssinrepuController.selvi_aipinssinrepuxidaipinssin(idaipinssin)

                        Dim table4 As New iTextSharp.text.pdf.PdfPTable(3)
                        table4.SetWidths(New Integer() {120, 120, 70})
                        table4.WidthPercentage = 100
                        cell = celldas("REPUESTOS", 232, 227, 227, 3, 1, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0.5, 0.5, 0.5)
                        table4.AddCell(cell)

                        'fila 1
                        cell = celldas("Repuesto", 0, 0, 0, 2, 1, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0.5, 0.5, 0.5)
                        table4.AddCell(cell)

                        cell = celldas("Monto", 0, 0, 0, 1, 1, System.Drawing.Color.Black, 1, 12.0F, 0.5, 0.5, 0.5, 0.5)
                        table4.AddCell(cell)
                        mmonto = 0
                        If (lista_vi_aipinssinrepu.Count > 0) Then

                            For i As Integer = 0 To lista_vi_aipinssinrepu.Count - 1

                                cell = celldas(lista_vi_aipinssinrepu(i).xnommanrepu, 0, 0, 0, 2, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                                table4.AddCell(cell)
                                cell = celldas(formateardecimalymiles(lista_vi_aipinssinrepu(i).nprecfininssinrepu, "es-VE"), 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                                table4.AddCell(cell)

                                mmonto += lista_vi_aipinssinrepu(i).nprecfininssinrepu

                            Next

                            cell = celldas("", 0, 0, 0, 3, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                            table4.AddCell(cell)

                            cell = celldas("Total repuestos", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 12.0F, 0, 0, 0, 0)
                            table4.AddCell(cell)
                            cell = celldas(formateardecimalymiles(mmonto, "es-VE"), 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 12.0F, 0, 0, 0, 0)
                            table4.AddCell(cell)


                            mmontoTot += mmonto
                        End If


                        cell = celldas("", 0, 0, 0, 3, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                        table4.AddCell(cell)

                        cell = celldas("Total inspección", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 12.0F, 0, 0, 0, 0)
                        table4.AddCell(cell)
                        cell = celldas(formateardecimalymiles(mmontoTot, "es-VE"), 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 12.0F, 0, 0, 0, 0)
                        table4.AddCell(cell)


                        table4.SpacingBefore = 10
                        doc.Add(table4)


                        Dim table5 As New iTextSharp.text.pdf.PdfPTable(1)
                        table5.SetWidths(New Integer() {120})
                        table5.WidthPercentage = 100
                        cell = celldas("Perito:  " & vi_aipinsenc.xnombrecompletoperit, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 12.0F, 0, 0, 0, 0)
                        table5.AddCell(cell)

                        cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                        table5.AddCell(cell)

                        cell = celldas("Observaciones:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 12.0F, 0, 0, 0, 0)
                        table5.AddCell(cell)
                        cell = celldas(vi_aipinssin.xdescinssin, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                        table5.AddCell(cell)

                        table5.SpacingBefore = 15
                        doc.Add(table5)

                        Dim table6 As New iTextSharp.text.pdf.PdfPTable(1)
                        table6.SetWidths(New Integer() {120})
                        table6.WidthPercentage = 100
                        cell = celldas("IMPRESION DE SERIAL", 0, 0, 0, 1, 1, System.Drawing.Color.Black, 1, 12.0F, 0, 0, 0, 0)
                        table6.AddCell(cell)


                        table6.SpacingBefore = 15
                        doc.Add(table6)


                        If (iimprifoto = True) Then

                            'tabla de las imagenes
                            Dim tableimg As New iTextSharp.text.pdf.PdfPTable(1)
                            tableimg.SetWidths(New Integer() {350})
                            tableimg.WidthPercentage = 100
                            'cell = celldas("FOTOS ADJUNTAS", 107, 104, 98, 1, 1, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                            'tableimg.AddCell(cell)
                            cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                            tableimg.AddCell(cell)
                            Dim vi_aipinsfotoController As New vi_aipinsfotoController
                            Dim lista_vi_aipinsfoto As List(Of vi_aipinsfoto) = vi_aipinsfotoController.selvi_aipinsfotoxidaipinsenc(vi_aipinsenc.idaipinsenc)
                            If lista_vi_aipinsfoto.Count > 0 Then
                                Dim xrutatipoenc As String = ""

                                Dim img As iTextSharp.text.Image

                                Select Case vi_aipinsenc.itipoinsenc
                                    Case "SUSCRIPCION"
                                        xrutatipoenc = "fotosmovil\suscripcion\ok\"
                                    Case "SINIESTRO"
                                        xrutatipoenc = "fotosmovil\siniestro\ok\"
                                    Case "RESTOS Y SALVAMENTO"
                                        xrutatipoenc = "fotosmovil\restos_salvamento\ok\"
                                    Case "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
                                        xrutatipoenc = "fotosmovil\limpieza_siniestro\ok\"
                                    Case "LIMPIEZA DE DAÑOS POR SINIESTRO"
                                        xrutatipoenc = "fotosmovil\limpieza_suscripcion\ok\"
                                    Case "AJUSTES POR SINIESTRO"
                                        xrutatipoenc = "fotosmovil\ajustes_sinientro\ok\"
                                    Case "AJUSTES POR ANEXO"
                                        xrutatipoenc = "fotosmovil\ajustes_anexo\ok\"
                                End Select
                                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
                                Dim xruta As String = ""
                                For i As Integer = 0 To lista_vi_aipinsfoto.Count - 1
                                    xruta = xrutaraiz & xrutatipoenc & lista_vi_aipinsfoto(i).xnomarchinsfoto
                                    img = iTextSharp.text.Image.GetInstance(xruta)

                                    img.ScalePercent(80.0F)
                                    img.SpacingBefore = 30

                                    cell2 = New iTextSharp.text.pdf.PdfPCell((img))
                                    cell2.Colspan = 1
                                    cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                                    cell2.Border = 0
                                    cell2.BorderWidthRight = 0
                                    tableimg.AddCell(cell2)
                                    cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                                    tableimg.AddCell(cell)
                                Next
                            End If
                            'fin tabla imagenes

                            tableimg.SpacingBefore = 60
                            doc.Add(tableimg)
                        End If
                    End If
                End If



                doc.Close()

                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = ms.ToArray()
                DownloadFilesResult.Name = "ReporteInspeccionSiniestro" & ".pdf"
                DownloadFilesResult.Type = "pdf"

                Return DownloadFilesResult
            Catch ex As Exception
                AgregarLogErrores("Metodo:ImprimirInspeccionSiniestro ", ex)
                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                DownloadFilesResult.Name = "ReporteInspeccionSiniestro" & ".pdf"
                DownloadFilesResult.Type = "pdf"
                Return DownloadFilesResult
            End Try
        End Function



        '<HttpGet()> _
        'Public Function ImprimirInspeccionRestos(idaipinsrest As Decimal) As DownloadFilesResult
        '    Try

        '        Dim vi_aipinsrestController As New vi_aipinsrestController
        '        Dim vi_aipinsrest As vi_aipinsrest = vi_aipinsrestController.selvi_aipinsrestxid(idaipinsrest)

        '        Dim comunconfvalorController As New comunconfvalorController
        '        Dim lista_comunconfvalor As New List(Of comunconfvalor)


        '        Dim xvalor As String = " ()"
        '        Dim xvalor2 As String = " ()"
        '        Dim xvalor3 As String = " ()"
        '        Dim xvalor4 As String = " ()"
        '        Dim xvaloresdrescripcion As String = ""

        '        Dim ms As New MemoryStream
        '        Dim doc As New iTextSharp.text.Document(iTextSharp.text.PageSize.A4.Rotate())
        '        Dim writer As iTextSharp.text.pdf.PdfWriter = iTextSharp.text.pdf.PdfWriter.GetInstance(doc, ms)
        '        'Dim ev As New itsEvents
        '        'writer.PageEvent = ev
        '        doc.Open()
        '        Dim table0 As New iTextSharp.text.pdf.PdfPTable(2)
        '        table0.SetWidths(New Integer() {70, 600})
        '        table0.WidthPercentage = 100


        '        Dim vi_aipinsencController As New vi_aipinsencController
        '        Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(vi_aipinsrest.idaipinsenc)
        '        Dim table1 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table1.SetWidths(New Integer() {70, 70, 70})
        '        table1.WidthPercentage = 100
        '        Dim cell As New iTextSharp.text.pdf.PdfPCell
        '        cell = celldas("Datos de cabecera:", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("Fecha de la inspección:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("N° póliza:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("N° siniestro:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsenc.fcreainsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsenc.xnumpolinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsenc.xnumsininsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)

        '        Dim table3 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table3.SetWidths(New Integer() {70, 70, 70})
        '        table3.WidthPercentage = 100
        '        cell = celldas("Características del vehículo:", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        Dim vi_aipmanvehController As New vi_aipmanvehController
        '        Dim vi_aipmanveh As vi_aipmanveh = vi_aipmanvehController.selvi_aipmanvehxid(vi_aipinsrest.idaipmanveh)
        '        cell = celldas("Sucursal::", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Modelo", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Serial del motor:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipinsrest.xsucuinsrest, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xsercarrmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xsermotmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)

        '        cell = celldas("Marca:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Modelo", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Clase:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xnommanvehmar, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xnommanvehmod, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.iclasemanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)

        '        cell = celldas("Versión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Tipo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Año:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.idaipmanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)

        '        lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("ITIPOTRANSMANVEH")
        '        xvaloresdrescripcion = ""
        '        For i As Integer = 0 To lista_comunconfvalor.Count - 1
        '            If lista_comunconfvalor(i).xvalordescripcion <> "SELECCIONE..." Then
        '                xvalor = (" ()")
        '                If lista_comunconfvalor(i).xvalordescripcion = vi_aipmanveh.itipotransmanveh Then
        '                    xvalor = (" (X)")
        '                End If
        '                xvaloresdrescripcion = xvaloresdrescripcion & xvalor & " " & lista_comunconfvalor(i).xvalordescripcion & " "
        '            End If
        '        Next
        '        cell = celldas(xvaloresdrescripcion, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        Dim aipmanvehverController As New aipmanvehverController
        '        Dim naniomanvehver As Decimal = aipmanvehverController.selnaniomanvehverxid(vi_aipmanveh.idaipmanvehver)
        '        cell = celldas(naniomanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)

        '        cell = celldas("Cilindros:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Capac. Carga (ton):", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Capacidad:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.ncilinmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xcargmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xcapmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)

        '        cell = celldas("Color:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Placa:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Kilometraje:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.icolormanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xplacamanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipinsrest.nkiloinsrest, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)


        '        Dim lista_vi_aipinsrestsse As List(Of vi_aipinsrestsse) = ObtenerSseRestos(vi_aipinsrest.idaipinsrest)
        '        Dim table4 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table4.SetWidths(New Integer() {70, 70, 70})
        '        table4.WidthPercentage = 100
        '        cell = celldas("Sistemas de seguridad electronicos:", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        For i As Integer = 0 To lista_vi_aipinsrestsse.Count - 1
        '            xvalor = " ()"
        '            If lista_vi_aipinsrestsse(i).iexisinsrestsse = True Then
        '                xvalor = " (X)"
        '            End If
        '            cell = celldas(lista_vi_aipinsrestsse(i).xnommanvehsse & xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table4.AddCell(cell)
        '        Next

        '        Dim lista_vi_aipinsrestssm As List(Of vi_aipinsrestssm) = ObtenerSsmRestos(vi_aipinsrest.idaipinsrest)
        '        Dim table5 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table5.SetWidths(New Integer() {70, 70, 70})
        '        table5.WidthPercentage = 100
        '        cell = celldas("Sistemas de seguridad mecanicos:", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        For i As Integer = 0 To lista_vi_aipinsrestssm.Count - 1
        '            xvalor = " ()"
        '            If lista_vi_aipinsrestssm(i).iexisinsrestssm = True Then
        '                xvalor = " (X)"
        '            End If
        '            cell = celldas(lista_vi_aipinsrestssm(i).xnommanvehssm & xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '        Next



        '        Dim table6 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table6.SetWidths(New Integer() {70, 70, 70})
        '        table6.WidthPercentage = 100
        '        cell = celldas("Ubicacion:", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)
        '        cell = celldas("Estado:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)
        '        cell = celldas("Ciudad:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)
        '        cell = celldas(vi_aipinsrest.xnombreestado, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)
        '        cell = celldas(vi_aipinsrest.xnombrelocalid, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)
        '        cell = celldas("Direccion:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)
        '        cell = celldas(vi_aipinsrest.xdirinsrest, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)

        '        Dim lista_vi_aipinsrestrepuest As List(Of vi_aipinsrestrepuest) = ObtenerRepuestosRestosEstado(vi_aipinsrest.idaipinsrest)
        '        Dim table7 As New iTextSharp.text.pdf.PdfPTable(2)
        '        table7.SetWidths(New Integer() {150, 150})
        '        table7.WidthPercentage = 100
        '        cell = celldas("Repuestos:", 59, 89, 152, 2, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table7.AddCell(cell)
        '        For i As Integer = 0 To lista_vi_aipinsrestrepuest.Count - 1
        '            xvalor = " SI()"
        '            xvalor2 = " B()"
        '            xvalor3 = " R()"
        '            xvalor4 = " M()"
        '            'If lista_vi_aipinssusrepuest(i).ibueinssusrepuest = True Then
        '            If lista_vi_aipinsrestrepuest(i).iexisinsrestrepuest = True Then
        '                xvalor = " SI(X) NO()"
        '            Else
        '                xvalor = " SI() NO(X)"
        '            End If

        '            If lista_vi_aipinsrestrepuest(i).ibueinsrestrepuest = True Then
        '                xvalor2 = " B(X)"
        '            End If
        '            'If lista_vi_aipinssusrepuest(i).ireginssusrepuest = True Then
        '            If lista_vi_aipinsrestrepuest(i).ireginsrestrepuest = True Then
        '                xvalor3 = " R(X)"
        '            End If
        '            'If lista_vi_aipinssusrepuest(i).imalinssusrepuest = True Then
        '            If lista_vi_aipinsrestrepuest(i).imalinsrestrepuest = True Then
        '                xvalor4 = " M(X)"
        '            End If
        '            cell = celldas(lista_vi_aipinsrestrepuest(i).xnommanrepu & xvalor2 & xvalor3 & xvalor4 & " " & lista_vi_aipinsrestrepuest(i).xdescinsrestrepuest, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            'cell = celldas(lista_vi_aipinsrestrepuest(i).xnommanrepu & xvalor & xvalor2 & xvalor3 & xvalor4 & " " & lista_vi_aipinsrestrepuest(i).xdescinsrestrepuest, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F,0.5,0.5,0.5,0.5)
        '            table7.AddCell(cell)
        '        Next


        '        Dim table8 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table8.SetWidths(New Integer() {70, 70, 70})
        '        table8.WidthPercentage = 100
        '        cell = celldas("Detalles de daños", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table8.AddCell(cell)
        '        cell = celldas("Observaciones:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table8.AddCell(cell)
        '        cell = celldas(vi_aipinsrest.xdescinsrest, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table8.AddCell(cell)


        '        Dim table9 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table9.SetWidths(New Integer() {70, 70, 70})
        '        table9.WidthPercentage = 100
        '        cell = celldas("Avaluo de restos", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)
        '        cell = celldas("Suma asegurada:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)
        '        cell = celldas("75% suma asegurada:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)
        '        cell = celldas("valor inma:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)
        '        cell = celldas(formateardecimalymiles(vi_aipinsrest.msumaseginsrest, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)
        '        cell = celldas(formateardecimalymiles(vi_aipinsrest.msumaseg75insrest, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)
        '        cell = celldas(formateardecimalymiles(vi_aipinsrest.mvalinminsrest, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)

        '        cell = celldas("Monto de daño:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)
        '        cell = celldas("Monto de avaluo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)
        '        cell = celldas("Nombre del taller:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)
        '        cell = celldas(formateardecimalymiles(vi_aipinsrest.mdanoinsrest, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)
        '        cell = celldas(formateardecimalymiles(vi_aipinsrest.mavalinsrest, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)
        '        cell = celldas(vi_aipinsrest.xnomtalinsrest, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)

        '        cell = celldas("Nombre del perito:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)
        '        cell = celldas("Nombre del jefe de peritos:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)
        '        cell = celldas(vi_aipinsrest.xnomperinsrest, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)
        '        cell = celldas(vi_aipinsrest.xnomjefperinsrest, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table9.AddCell(cell)

        '        table1.SpacingBefore = 10
        '        doc.Add(table1)

        '        'table2.SpacingBefore = 10
        '        'doc.Add(table2)

        '        table3.SpacingBefore = 10
        '        doc.Add(table3)

        '        table4.SpacingBefore = 10
        '        doc.Add(table4)

        '        table5.SpacingBefore = 10
        '        doc.Add(table5)

        '        table6.SpacingBefore = 10
        '        doc.Add(table6)

        '        table7.SpacingBefore = 10
        '        doc.Add(table7)

        '        table8.SpacingBefore = 10
        '        doc.Add(table8)

        '        table9.SpacingBefore = 10
        '        doc.Add(table9)

        '        doc.Close()

        '        'If File.Exists("C:\sitfxarchivos\sitfx20\prueba2.pdf") Then
        '        '    File.Delete("C:\sitfxarchivos\sitfx20\prueba2.pdf")
        '        'End If
        '        'Dim secuencia As Byte() = ms.ToArray()
        '        'File.WriteAllBytes("C:\sitfxarchivos\sitfx20\prueba2.pdf", secuencia)

        '        'Return ms.ToArray()

        '        Dim DownloadFilesResult As New DownloadFilesResult
        '        DownloadFilesResult.ArchivoByte = ms.ToArray()
        '        DownloadFilesResult.Name = "ReporteInspeccionRestos" & ".pdf"
        '        DownloadFilesResult.Type = "pdf"

        '        Return DownloadFilesResult
        '    Catch ex As Exception
        '        Dim DownloadFilesResult As New DownloadFilesResult
        '        DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
        '        DownloadFilesResult.Name = "ReporteInspeccionRestos" & ".pdf"
        '        DownloadFilesResult.Type = "pdf"
        '        Return DownloadFilesResult
        '    End Try
        'End Function
        <HttpGet()> _
        Public Function ImprimirInspeccionRestos(idaipinsrest As Decimal) As DownloadFilesResult
            Try

                Dim vi_aipinsrestController As New vi_aipinsrestController
                Dim vi_aipinsrest As vi_aipinsrest = vi_aipinsrestController.selvi_aipinsrestxid(idaipinsrest)

                Dim comunconfvalorController As New comunconfvalorController
                Dim lista_comunconfvalor As New List(Of comunconfvalor)


                Dim xvalor As String = " ()"
                Dim xvalor2 As String = " ()"
                Dim xvalor3 As String = " ()"
                Dim xvalor4 As String = " ()"
                Dim xvaloresdrescripcion As String = ""

                Dim ms As New MemoryStream
                Dim doc As New iTextSharp.text.Document(iTextSharp.text.PageSize.A4)
                Dim writer As iTextSharp.text.pdf.PdfWriter = iTextSharp.text.pdf.PdfWriter.GetInstance(doc, ms)
                'Dim ev As New itsEvents
                'writer.PageEvent = ev
                doc.Open()
                Dim table0 As New iTextSharp.text.pdf.PdfPTable(2)
                table0.SetWidths(New Integer() {100, 600})
                table0.WidthPercentage = 100
                Dim img1 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "logo_federal.png")
                img1.ScalePercent(100.0F)
                'img2.SetAbsolutePosition(300, 800)                
                img1.SpacingBefore = 60

                Dim cell2 As New iTextSharp.text.pdf.PdfPCell((img1))
                cell2.Colspan = 1
                cell2.Rowspan = 5
                cell2.HorizontalAlignment = 0 '0=Left, 1=Centre, 2=Right
                cell2.Border = 0
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 9.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 9.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 9.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 9.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas("INVENTARIO DE SALVAMENTO", 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 9.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)


                Dim vi_aipinsencController As New vi_aipinsencController
                Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(vi_aipinsrest.idaipinsenc)
                Dim table1 As New iTextSharp.text.pdf.PdfPTable(4)
                table1.SetWidths(New Integer() {70, 70, 70, 70})
                table1.WidthPercentage = 100
                Dim cell As New iTextSharp.text.pdf.PdfPCell
                cell = celldas("Fecha", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 9.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(" Hora:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 9.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas("Nº DE POLIZA", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 9.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas("Nº DE SINIESTRO:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 9.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.fcreainsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 9.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(" " & FormatDateTime(vi_aipinsenc.fcreainsenc, DateFormat.ShortTime), 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 9.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.xnumpolinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 9.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.xnumsininsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 9.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)


                Dim table3 As New iTextSharp.text.pdf.PdfPTable(6)
                table3.SetWidths(New Integer() {70, 70, 70, 70, 70, 70})
                table3.WidthPercentage = 100
                cell = celldas("Características del vehículo:", 107, 104, 98, 6, 1, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                Dim vi_aipmanvehController As New vi_aipmanvehController
                Dim vi_aipmanveh As vi_aipmanveh = vi_aipmanvehController.selvi_aipmanvehxid(vi_aipinsrest.idaipmanveh)
                cell = celldas("Sucursal::", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("SERIAL CARROCERIA:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Serial del motor:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipinsrest.xsucuinsrest, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xsercarrmanveh, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xsermotmanveh, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)

                cell = celldas("Marca:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Modelo", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Clase:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xnommanvehmar, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xnommanvehmod, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.iclasemanveh, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)

                cell = celldas("Versión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Tipo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Tipo TRANSMISIÓN:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Año:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.idaipmanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("ITIPOTRANSMANVEH")
                xvaloresdrescripcion = ""
                For i As Integer = 0 To lista_comunconfvalor.Count - 1
                    If lista_comunconfvalor(i).xvalordescripcion <> "SELECCIONE..." Then
                        xvalor = (" ()")
                        If lista_comunconfvalor(i).xvalordescripcion = vi_aipmanveh.itipotransmanveh Then
                            xvalor = (" (X)")
                        End If
                        xvaloresdrescripcion = xvaloresdrescripcion & xvalor & " " & lista_comunconfvalor(i).xvalordescripcion & " "
                    End If
                Next
                cell = celldas(" " & xvaloresdrescripcion, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                'Dim aipmanvehverController As New aipmanvehverController
                'Dim naniomanvehver As Decimal = aipmanvehverController.selnaniomanvehverxid(vi_aipmanveh.idaipmanvehver)
                cell = celldas(" " & vi_aipmanveh.naniomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)

                cell = celldas("Cilindros:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Capac. Carga (ton):", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Capacidad:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Color:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Placa:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 9.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Kilometraje:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.ncilinmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xcargmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xcapmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.icolormanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xplacamanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipinsrest.nkiloinsrest, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)

                Dim lista_vi_aipinsrestsse As List(Of vi_aipinsrestsse) = ObtenerSseRestos(vi_aipinsrest.idaipinsrest)
                Dim table4 As New iTextSharp.text.pdf.PdfPTable(8)
                table4.SetWidths(New Integer() {70, 30, 70, 30, 70, 30, 70, 30})
                table4.WidthPercentage = 100
                'cell = celldas("Sistemas de seguridad electronicos:", 107, 104, 98, 4, 1, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                cell = celldas("Sistemas de seguridad", 107, 104, 98, 8, 1, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                table4.AddCell(cell)
                Dim lugar_colspan = 0
                Dim nborde_arriba As Single = 0.5
                Dim nborde_abajo As Single = 0.5
                Dim nborde_derecha As Single = 0.5
                Dim nborde_izquierda As Single = 0.5
                For i As Integer = 0 To lista_vi_aipinsrestsse.Count - 1
                    xvalor = " []"
                    If lista_vi_aipinsrestsse(i).iexisinsrestsse = True Then
                        xvalor = " [X]"
                    End If

                    lugar_colspan = lugar_colspan + 2

                    If lugar_colspan = 2 Then
                        cell = celldas(lista_vi_aipinsrestsse(i).xnommanvehsse, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0, 0.5)
                        table4.AddCell(cell)
                    Else
                        cell = celldas(lista_vi_aipinsrestsse(i).xnommanvehsse, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0, 0)
                        table4.AddCell(cell)
                    End If

                    'cell = celldas(lista_vi_aipinsrestsse(i).xnommanvehsse, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                    'table4.AddCell(cell)
                    'cell = celldas(xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                    'table4.AddCell(cell)

                    If lugar_colspan = 8 Then
                        cell = celldas(xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0)
                        table4.AddCell(cell)
                        lugar_colspan = 0
                    Else
                        cell = celldas(xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0, 0)
                        table4.AddCell(cell)
                    End If
                Next
                Dim lista_vi_aipinsrestssm As List(Of vi_aipinsrestssm) = ObtenerSsmRestos(vi_aipinsrest.idaipinsrest)
                'Dim table5 As New iTextSharp.text.pdf.PdfPTable(3)
                'table5.SetWidths(New Integer() {70, 70, 70})
                'table5.WidthPercentage = 100
                'cell = celldas("Sistemas de seguridad mecanicos:", 107, 104, 98, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'table5.AddCell(cell)
                For i As Integer = 0 To lista_vi_aipinsrestssm.Count - 1
                    xvalor = " []"
                    If lista_vi_aipinsrestssm(i).iexisinsrestssm = True Then
                        xvalor = " [X]"
                    End If

                    lugar_colspan = lugar_colspan + 2

                    If lugar_colspan = 2 Then
                        cell = celldas(lista_vi_aipinsrestssm(i).xnommanvehssm, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0, 0.5)
                        table4.AddCell(cell)
                    Else
                        cell = celldas(lista_vi_aipinsrestssm(i).xnommanvehssm, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0, 0)
                        table4.AddCell(cell)
                    End If

                    'cell = celldas(lista_vi_aipinsrestssm(i).xnommanvehssm, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                    'table4.AddCell(cell)
                    'cell = celldas(xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                    'table4.AddCell(cell)

                    If lugar_colspan = 8 Then
                        cell = celldas(xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0)
                        table4.AddCell(cell)
                        lugar_colspan = 0
                    Else
                        cell = celldas(xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0, 0)
                        table4.AddCell(cell)
                    End If
                Next
                Dim nmultiplo As Integer = esmultiplo(lista_vi_aipinsrestsse.Count + lista_vi_aipinsrestssm.Count, 4)
                'Dim nmultiplo As Integer = esmultiplo(lista_vi_aipinsrestsse.Count, 4)
                If nmultiplo <> 0 Then
                    cell = celldas(" ", 0, 0, 0, 4 - nmultiplo, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                    table4.AddCell(cell)
                    cell = celldas(" ", 0, 0, 0, 4 - nmultiplo, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                    table4.AddCell(cell)
                End If
                cell = celldas("", 0, 0, 0, 8, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                table4.AddCell(cell)

                'Dim lista_vi_aipinsrestssm As List(Of vi_aipinsrestssm) = ObtenerSsmRestos(vi_aipinsrest.idaipinsrest)
                'Dim table5 As New iTextSharp.text.pdf.PdfPTable(3)
                'table5.SetWidths(New Integer() {70, 70, 70})
                'table5.WidthPercentage = 100
                ''cell = celldas("Sistemas de seguridad mecanicos:", 107, 104, 98, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                ''table5.AddCell(cell)
                'For i As Integer = 0 To lista_vi_aipinsrestssm.Count - 1
                '    xvalor = " ()"
                '    If lista_vi_aipinsrestssm(i).iexisinsrestssm = True Then
                '        xvalor = " (X)"
                '    End If
                '    cell = celldas(lista_vi_aipinsrestssm(i).xnommanvehssm & xvalor, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                '    table5.AddCell(cell)
                'Next

                Dim table6 As New iTextSharp.text.pdf.PdfPTable(3)
                table6.SetWidths(New Integer() {70, 70, 70})
                table6.WidthPercentage = 100
                'cell = celldas("Ubicacion:", 107, 104, 98, 3, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)
                cell = celldas("Direccion:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0.5)
                cell.Rowspan = 2
                table6.AddCell(cell)
                cell = celldas(" " & vi_aipinsrest.xdirinsrest, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0.5)
                cell.Rowspan = 2
                table6.AddCell(cell)
                cell = celldas("Estado: " & vi_aipinsrest.xnombreestado, 0, 0, 0, 1, 2, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0, 0.5)
                table6.AddCell(cell)
                cell = celldas("Ciudad: " & vi_aipinsrest.xnombrelocalid, 0, 0, 0, 2, 1, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table6.AddCell(cell)
                'cell = celldas(" " & vi_aipinsrest.xnombreestado, 0, 0, 0, 1, 2, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0, 0.5)
                'table6.AddCell(cell)
                'cell = celldas(" " & vi_aipinsrest.xnombrelocalid, 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                'table6.AddCell(cell)

                Dim lista_vi_aipinsrestrepuest As List(Of vi_aipinsrestrepuest) = ObtenerRepuestosRestosEstado(vi_aipinsrest.idaipinsrest)
                Dim table7 As New iTextSharp.text.pdf.PdfPTable(14)
                table7.SetWidths(New Integer() {90, 20, 20, 20, 20, 20, 90, 90, 20, 20, 20, 20, 20, 90})
                table7.WidthPercentage = 100
                cell = celldas("DESCRIPCION:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0.5)
                table7.AddCell(cell)
                cell = celldas("SI", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas("NO", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas("B", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas("R", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas("M", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas("OBSERVACIONES", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas("DESCRIPCION:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas("SI", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas("NO", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas("B", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas("R", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas("M", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas("OBSERVACIONES", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0)
                table7.AddCell(cell)
                If lista_vi_aipinsrestrepuest.Count > 0 Then
                    For i As Integer = 0 To lista_vi_aipinsrestrepuest.Count - 1
                        xvalor = " SI()"
                        xvalor2 = " B()"
                        xvalor3 = " R()"
                        xvalor4 = " M()"
                        cell = celldas(lista_vi_aipinsrestrepuest(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 6.0F, 0, 0.25, 0.5, 0.5)
                        table7.AddCell(cell)
                        'If lista_vi_aipinssusrepuest(i).ibueinssusrepuest = True Then
                        If lista_vi_aipinsrestrepuest(i).iexisinsrestrepuest = True Then
                            cell = celldas(" X ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 6.0F, 0, 0.25, 0.5, 0)
                            table7.AddCell(cell)
                            cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 6.0F, 0, 0, 0.5, 0)
                            table7.AddCell(cell)
                        Else
                            cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 6.0F, 0, 0.25, 0.5, 0)
                            table7.AddCell(cell)
                            cell = celldas(" X ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 6.0F, 0, 0.25, 0.5, 0)
                            table7.AddCell(cell)
                        End If

                        If lista_vi_aipinsrestrepuest(i).ibueinsrestrepuest = True Then
                            cell = celldas(" X ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 6.0F, 0, 0.25, 0.5, 0)
                            table7.AddCell(cell)
                        Else
                            cell = celldas("  ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 6.0F, 0, 0.25, 0.5, 0)
                            table7.AddCell(cell)
                        End If
                        'If lista_vi_aipinssusrepuest(i).ireginssusrepuest = True Then
                        If lista_vi_aipinsrestrepuest(i).ireginsrestrepuest = True Then
                            cell = celldas(" X ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 6.0F, 0, 0.25, 0.5, 0)
                            table7.AddCell(cell)
                        Else
                            cell = celldas("  ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 6.0F, 0, 0.25, 0.5, 0)
                            table7.AddCell(cell)
                        End If
                        'If lista_vi_aipinssusrepuest(i).imalinssusrepuest = True Then
                        If lista_vi_aipinsrestrepuest(i).imalinsrestrepuest = True Then
                            cell = celldas(" X ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 6.0F, 0, 0.25, 0.5, 0)
                            table7.AddCell(cell)
                        Else
                            cell = celldas("  ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 6.0F, 0, 0.25, 0.5, 0)
                            table7.AddCell(cell)
                        End If
                        cell = celldas(lista_vi_aipinsrestrepuest(i).xdescinsrestrepuest, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 6.0F, 0, 0.25, 0.5, 0)
                        table7.AddCell(cell)
                        'cell = celldas(lista_vi_aipinsrestrepuest(i).xnommanrepu & xvalor & xvalor2 & xvalor3 & xvalor4 & " " & lista_vi_aipinsrestrepuest(i).xdescinsrestrepuest, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 6.0F,0.5,0.5,0.5,0.5)                    
                    Next
                    nmultiplo = esmultiplo(lista_vi_aipinsrestrepuest.Count, 14)
                    If nmultiplo <> 0 Then
                        cell = celldas(" ", 0, 0, 0, 14 - nmultiplo, 0, System.Drawing.Color.Black, -1, 6.0F, 0, 0.25, 0.5, 0)
                        table7.AddCell(cell)
                    End If
                    'cell = celldas("", 0, 0, 0, 14, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                    'table7.AddCell(cell)
                End If

                Dim table8 As New iTextSharp.text.pdf.PdfPTable(4)
                table8.SetWidths(New Integer() {70, 70, 70, 70})
                table8.WidthPercentage = 100
                cell = celldas("DETALLAR DAÑOS EN DIAGRAMA DEL VEHICULO", 107, 104, 98, 4, 1, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                table8.AddCell(cell)


                Dim img3 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "carrito.png")
                img3.ScalePercent(40.0F)
                'img3.Rotation = 80.125
                img3.SpacingBefore = 60
                cell2 = New iTextSharp.text.pdf.PdfPCell((img3))
                cell2.Colspan = 2
                cell2.Rowspan = 4
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                cell2.Border = 0
                cell2.BorderWidthRight = 0
                table8.AddCell(cell2)

                cell = celldas("Observaciones:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0, 0.5)
                table8.AddCell(cell)
                cell = celldas(" " & vi_aipinsrest.xdescinsrest, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0)
                table8.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                table8.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                table8.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                table8.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                table8.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'table8.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'table8.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'table8.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'table8.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'table8.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'table8.AddCell(cell)

                'cell = celldas(" ", 0, 0, 0, 4, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                'table8.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 4, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                'table8.AddCell(cell)


                Dim table9 As New iTextSharp.text.pdf.PdfPTable(3)
                table9.SetWidths(New Integer() {70, 70, 70})
                table9.WidthPercentage = 100
                cell = celldas("Avaluo de restos", 107, 104, 98, 3, 1, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas("Suma asegurada:", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas("75% suma asegurada:", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas("valor inma:", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas("Bs. " & formateardecimalymiles(vi_aipinsrest.msumaseginsrest, "es-VE"), 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas("Bs. " & formateardecimalymiles(vi_aipinsrest.msumaseg75insrest, "es-VE"), 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas("Bs. " & formateardecimalymiles(vi_aipinsrest.mvalinminsrest, "es-VE"), 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table9.AddCell(cell)

                cell = celldas("Monto de daño:", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas("Monto de avaluo:", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas("Nombre del taller:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas("Bs. " & formateardecimalymiles(vi_aipinsrest.mdanoinsrest, "es-VE"), 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas("Bs. " & formateardecimalymiles(vi_aipinsrest.mavalinsrest, "es-VE"), 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas(vi_aipinsrest.xnomtalinsrest, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table9.AddCell(cell)


                cell = celldas("NOMBRE DEL PERITO", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0, 0.5)
                table9.AddCell(cell)
                cell = celldas("FIRMA DEL PERITO", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0, 0.5)
                table9.AddCell(cell)
                cell = celldas("FIRMA Y SELLO DEL TALLER", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas(vi_aipinsrest.xnomperinsrest, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0, 0.5)
                table9.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0, 0.5)
                table9.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas("NOMBRE DEL JEFE DEL PERITO", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0, 0.5)
                table9.AddCell(cell)
                cell = celldas("FIRMA DEL JEFE DEL PERITO", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0, 0.5)
                table9.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas(vi_aipinsrest.xnomjefperinsrest, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0, 0.5)
                table9.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0, 0.5)
                table9.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table9.AddCell(cell)
                'cell = celldas("FIRMA Y SELLO DEL TALLER", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'cell.Rowspan = 4
                'table9.AddCell(cell)
                cell = celldas("GRUA", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas("GRUA", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0)
                table9.AddCell(cell)
                cell = celldas("GRUA", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0, 0.5, 0)
                table9.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table9.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table9.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table9.AddCell(cell)

                'tabla de las imagenes
                Dim tableimg As New iTextSharp.text.pdf.PdfPTable(1)
                tableimg.SetWidths(New Integer() {350})
                tableimg.WidthPercentage = 100
                'cell = celldas("FOTOS ADJUNTAS", 107, 104, 98, 1, 1, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'tableimg.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                tableimg.AddCell(cell)
                Dim vi_aipinsfotoController As New vi_aipinsfotoController
                Dim lista_vi_aipinsfoto As List(Of vi_aipinsfoto) = vi_aipinsfotoController.selvi_aipinsfotoxidaipinsenc(vi_aipinsenc.idaipinsenc)
                If lista_vi_aipinsfoto.Count > 0 Then
                    Dim xrutatipoenc As String = ""

                    Dim img As iTextSharp.text.Image

                    Select Case vi_aipinsenc.itipoinsenc
                        Case "SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\suscripcion\ok\"
                        Case "SINIESTRO"
                            xrutatipoenc = "fotosmovil\siniestro\ok\"
                        Case "RESTOS Y SALVAMENTO"
                            xrutatipoenc = "fotosmovil\restos_salvamento\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\limpieza_siniestro\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\limpieza_suscripcion\ok\"
                        Case "AJUSTES POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\ajustes_sinientro\ok\"
                        Case "AJUSTES POR ANEXO"
                            xrutatipoenc = "fotosmovil\ajustes_anexo\ok\"
                    End Select
                    Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
                    Dim xruta As String = ""
                    For i As Integer = 0 To lista_vi_aipinsfoto.Count - 1
                        xruta = xrutaraiz & xrutatipoenc & lista_vi_aipinsfoto(i).xnomarchinsfoto
                        img = iTextSharp.text.Image.GetInstance(xruta)

                        img.ScalePercent(80.0F)
                        img.SpacingBefore = 30

                        cell2 = New iTextSharp.text.pdf.PdfPCell((img))
                        cell2.Colspan = 1
                        cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                        cell2.Border = 0
                        cell2.BorderWidthRight = 0
                        tableimg.AddCell(cell2)

                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                        tableimg.AddCell(cell)
                    Next
                End If
                'fin tabla imagenes



                table0.SpacingBefore = 10
                doc.Add(table0)

                table1.SpacingBefore = 1
                doc.Add(table1)

                'table2.SpacingBefore = 10
                'doc.Add(table2)

                table3.SpacingBefore = 1
                doc.Add(table3)

                table4.SpacingBefore = 1
                doc.Add(table4)

                'table5.SpacingBefore = 10
                'doc.Add(table5)

                table6.SpacingBefore = 1
                doc.Add(table6)

                table7.SpacingBefore = 10
                doc.Add(table7)

                table8.SpacingBefore = 10
                doc.Add(table8)

                table9.SpacingBefore = 200
                doc.Add(table9)

                tableimg.SpacingBefore = 15
                doc.Add(tableimg)


                doc.Close()

                'If File.Exists("C:\sitfxarchivos\sitfx20\prueba2.pdf") Then
                '    File.Delete("C:\sitfxarchivos\sitfx20\prueba2.pdf")
                'End If
                'Dim secuencia As Byte() = ms.ToArray()
                'File.WriteAllBytes("C:\sitfxarchivos\sitfx20\prueba2.pdf", secuencia)

                'Return ms.ToArray()

                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = ms.ToArray()
                DownloadFilesResult.Name = "ReporteInspeccionRestos" & ".pdf"
                DownloadFilesResult.Type = "pdf"

                Return DownloadFilesResult
            Catch ex As Exception
                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                DownloadFilesResult.Name = "ReporteInspeccionRestos" & ".pdf"
                DownloadFilesResult.Type = "pdf"
                Return DownloadFilesResult
            End Try
        End Function

        '<HttpGet()> _
        'Public Function ImprimirInspeccionLimpiezaSuscripcion(idaipinslimsus As Decimal) As DownloadFilesResult
        '    Try

        '        Dim vi_aipinslimsusController As New vi_aipinslimsusController
        '        Dim vi_aipinslimsus As vi_aipinslimsus = vi_aipinslimsusController.selvi_aipinslimsusxid(idaipinslimsus)

        '        Dim comunconfvalorController As New comunconfvalorController
        '        Dim lista_comunconfvalor As New List(Of comunconfvalor)


        '        Dim xvalor As String = " ()"
        '        Dim xvalor2 As String = " ()"
        '        Dim xvalor3 As String = " ()"
        '        Dim xvaloresdrescripcion As String = ""

        '        Dim ms As New MemoryStream
        '        Dim doc As New iTextSharp.text.Document(iTextSharp.text.PageSize.A4.Rotate())
        '        Dim writer As iTextSharp.text.pdf.PdfWriter = iTextSharp.text.pdf.PdfWriter.GetInstance(doc, ms)
        '        'Dim ev As New itsEvents
        '        'writer.PageEvent = ev
        '        doc.Open()
        '        Dim table0 As New iTextSharp.text.pdf.PdfPTable(2)
        '        table0.SetWidths(New Integer() {70, 600})
        '        table0.WidthPercentage = 100


        '        Dim vi_aipinsencController As New vi_aipinsencController
        '        Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(vi_aipinslimsus.idaipinsenc)
        '        Dim table1 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table1.SetWidths(New Integer() {70, 70, 70})
        '        table1.WidthPercentage = 100
        '        Dim cell As New iTextSharp.text.pdf.PdfPCell
        '        cell = celldas("Datos de cabecera:", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("Fecha:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("N° póliza:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("N Siniestro", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsenc.fcreainsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsenc.xnumpolinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsenc.xnumsininsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)

        '        cell = celldas("Nº factura:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("Medio", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("Nombre completo del asegurado:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinslimsus.nfactinslimsus, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinslimsus.xnomaseginslimsus, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinslimsus.xnomaseginslimsus, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)

        '        cell = celldas("Código del perito", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("Nombre completo del perito", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinslimsus.idsegmanusu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinslimsus.xnombrecompleto, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)

        '        Dim table3 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table3.SetWidths(New Integer() {70, 70, 70})
        '        table3.WidthPercentage = 100
        '        cell = celldas("Datos del vehiculo:", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        Dim vi_aipmanvehController As New vi_aipmanvehController
        '        Dim vi_aipmanveh As vi_aipmanveh = vi_aipmanvehController.selvi_aipmanvehxid(vi_aipinslimsus.idaipmanveh)
        '        cell = celldas("Sucursal:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Marca:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Modelo", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipinslimsus.xsucuinslimsus, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xnommanvehmar, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xnommanvehmod, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)

        '        cell = celldas("Tipo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Año:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Color:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.itipomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        Dim aipmanvehverController As New aipmanvehverController
        '        Dim naniomanvehver As Decimal = aipmanvehverController.selnaniomanvehverxid(vi_aipmanveh.idaipmanvehver)
        '        cell = celldas(naniomanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.icolormanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)

        '        cell = celldas("Versión::", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Placa:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Serial de carrocería:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xnommanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xplacamanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xsercarrmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)

        '        cell = celldas("Serial del motor:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Tipo de transmisión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Kilometraje:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xsermotmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("ITIPOTRANSMANVEH")
        '        xvaloresdrescripcion = ""
        '        For i As Integer = 0 To lista_comunconfvalor.Count - 1
        '            If lista_comunconfvalor(i).xvalordescripcion <> "SELECCIONE..." Then
        '                xvalor = (" ()")
        '                If lista_comunconfvalor(i).xvalordescripcion = vi_aipmanveh.itipotransmanveh Then
        '                    xvalor = (" (X)")
        '                End If
        '                xvaloresdrescripcion = xvaloresdrescripcion & xvalor & " " & lista_comunconfvalor(i).xvalordescripcion & " "
        '            End If
        '        Next
        '        cell = celldas(xvaloresdrescripcion, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipinslimsus.nkiloinslimsus, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)



        '        Dim lista_vi_aipinslimsusrepu As List(Of vi_aipinslimsusrepu) = ObtenerRepuestosLimpiezaSuscripcion(vi_aipinslimsus.idaipinslimsus)
        '        Dim table4 As New iTextSharp.text.pdf.PdfPTable(4)
        '        table4.SetWidths(New Integer() {70, 70, 70, 70})
        '        table4.WidthPercentage = 100
        '        cell = celldas("Repuestos:", 59, 89, 152, 4, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        cell = celldas("Cantidad:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        cell = celldas("Repuesto:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        cell = celldas("Origen:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        cell = celldas("Precio:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        For i As Integer = 0 To lista_vi_aipinslimsusrepu.Count - 1
        '            cell = celldas(lista_vi_aipinslimsusrepu(i).ncantinslimsusrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table4.AddCell(cell)
        '            cell = celldas(lista_vi_aipinslimsusrepu(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table4.AddCell(cell)
        '            cell = celldas(lista_vi_aipinslimsusrepu(i).iorigbarerepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table4.AddCell(cell)
        '            cell = celldas(formateardecimalymiles(lista_vi_aipinslimsusrepu(i).nprecfininslimsusrepu, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table4.AddCell(cell)
        '        Next

        '        Dim lista_vi_aipinslimsusmobr As List(Of vi_aipinslimsusmobr) = ObtenerMobrLimpiezaSuscripcion(vi_aipinslimsus.idaipinslimsus)
        '        Dim table5 As New iTextSharp.text.pdf.PdfPTable(6)
        '        table5.SetWidths(New Integer() {70, 70, 70, 70, 70, 70})
        '        table5.WidthPercentage = 100
        '        cell = celldas("Mano de Obra:", 59, 89, 152, 6, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Cantidad:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Repuesto:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Tamaño:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Material:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Mano obra:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Precio:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        For i As Integer = 0 To lista_vi_aipinslimsusmobr.Count - 1
        '            cell = celldas(lista_vi_aipinslimsusmobr(i).ncantinslimsusmobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(lista_vi_aipinslimsusmobr(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(lista_vi_aipinslimsusmobr(i).itamapiezbaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(lista_vi_aipinslimsusmobr(i).imaterpiezbaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(lista_vi_aipinslimsusmobr(i).itipobaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(formateardecimalymiles(lista_vi_aipinslimsusmobr(i).nprecfininslimsusmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '        Next


        '        Dim table6 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table6.SetWidths(New Integer() {70, 70, 70})
        '        table6.WidthPercentage = 100
        '        cell = celldas("Detalle de limpieza:", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)
        '        cell = celldas("Observaciones:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)
        '        cell = celldas(vi_aipinslimsus.xdescinslimsus, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)

        '        table1.SpacingBefore = 10
        '        doc.Add(table1)

        '        'table2.SpacingBefore = 10
        '        'doc.Add(table2)

        '        table3.SpacingBefore = 10
        '        doc.Add(table3)

        '        table4.SpacingBefore = 10
        '        doc.Add(table4)

        '        table5.SpacingBefore = 10
        '        doc.Add(table5)

        '        table6.SpacingBefore = 10
        '        doc.Add(table6)

        '        'table7.SpacingBefore = 10
        '        'doc.Add(table7)

        '        'table8.SpacingBefore = 10
        '        'doc.Add(table8)

        '        'table9.SpacingBefore = 10
        '        'doc.Add(table9)

        '        doc.Close()

        '        If File.Exists("C:\sitfxarchivos\sitfx20\prueba2.pdf") Then
        '            File.Delete("C:\sitfxarchivos\sitfx20\prueba2.pdf")
        '        End If
        '        Dim secuencia As Byte() = ms.ToArray()
        '        File.WriteAllBytes("C:\sitfxarchivos\sitfx20\prueba2.pdf", secuencia)

        '        'Return ms.ToArray()

        '        Dim DownloadFilesResult As New DownloadFilesResult
        '        DownloadFilesResult.ArchivoByte = ms.ToArray()
        '        DownloadFilesResult.Name = "ReporteInspeccionLimpiezaSuscripcion" & ".pdf"
        '        DownloadFilesResult.Type = "pdf"

        '        Return DownloadFilesResult
        '    Catch ex As Exception
        '        Dim DownloadFilesResult As New DownloadFilesResult
        '        DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
        '        DownloadFilesResult.Name = "ReporteInspeccionLimpiezaSuscripcion" & ".pdf"
        '        DownloadFilesResult.Type = "pdf"
        '        Return DownloadFilesResult
        '    End Try
        'End Function

        <HttpGet()> _
        Public Function ImprimirInspeccionLimpiezaSuscripcion(idaipinslimsus As Decimal) As DownloadFilesResult
            Try

                Dim vi_aipinslimsusController As New vi_aipinslimsusController
                Dim vi_aipinslimsus As vi_aipinslimsus = vi_aipinslimsusController.selvi_aipinslimsusxid(idaipinslimsus)

                Dim comunconfvalorController As New comunconfvalorController
                Dim lista_comunconfvalor As New List(Of comunconfvalor)


                Dim xvalor As String = " ()"
                Dim xvalor2 As String = " ()"
                Dim xvalor3 As String = " ()"
                Dim xvaloresdrescripcion As String = ""

                Dim ms As New MemoryStream
                Dim doc As New iTextSharp.text.Document(iTextSharp.text.PageSize.A4)
                Dim writer As iTextSharp.text.pdf.PdfWriter = iTextSharp.text.pdf.PdfWriter.GetInstance(doc, ms)
                'Dim ev As New itsEvents
                'writer.PageEvent = ev
                doc.Open()
                Dim table0 As New iTextSharp.text.pdf.PdfPTable(2)
                table0.SetWidths(New Integer() {100, 600})
                table0.WidthPercentage = 100
                Dim img1 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "logo_federal.png")
                img1.ScalePercent(100.0F)
                'img2.SetAbsolutePosition(300, 800)                
                img1.SpacingBefore = 60

                Dim cell2 As New iTextSharp.text.pdf.PdfPCell((img1))
                cell2.Colspan = 1
                cell2.Rowspan = 5
                cell2.HorizontalAlignment = 0 '0=Left, 1=Centre, 2=Right
                cell2.Border = 0
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas("LIMPIEZA DE DAÑOS", 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(FormatDateTime(Date.Now, DateFormat.ShortDate).ToString & " " & FormatDateTime(Date.Now, DateFormat.ShortTime).ToString, 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)

                Dim vi_aipinsencController As New vi_aipinsencController
                Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(vi_aipinslimsus.idaipinsenc)
                Dim table1 As New iTextSharp.text.pdf.PdfPTable(5)
                table1.SetWidths(New Integer() {90, 90, 110, 110, 200})
                ' table1.SetWidths(New Integer() {120, 90, 90, 200})
                table1.WidthPercentage = 100
                Dim cell As New iTextSharp.text.pdf.PdfPCell
                'cell = celldas(" ", 59, 89, 152, 4, 0, System.Drawing.Color.White, -1, 10.0F,0.5,0.5,0.5,0.5)
                'table1.AddCell(cell)
                cell = celldas("Fecha", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(" N° Factura", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas("Póliza Número", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas("Siniestro Número:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas("Repuesto [] Mano de Obra[]", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.fcreainsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinslimsus.nfactinslimsus, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.xnumpolinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.xnumsininsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)


                Dim table3 As New iTextSharp.text.pdf.PdfPTable(5)
                table3.SetWidths(New Integer() {70, 70, 70, 70, 70})
                table3.WidthPercentage = 100
                'cell = celldas("Datos del vehiculo:", 107, 104, 98, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                'table3.AddCell(cell)
                Dim vi_aipmanvehController As New vi_aipmanvehController
                Dim vi_aipmanveh As vi_aipmanveh = vi_aipmanvehController.selvi_aipmanvehxid(vi_aipinslimsus.idaipmanveh)
                cell = celldas("Nombre y Apellido del Asegurado:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Sucursal:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Marca:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipinslimsus.xnomaseginslimsus, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipinslimsus.xsucuinslimsus, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xnommanvehmar, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)

                cell = celldas("Modelo", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Tipo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Año:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Color:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Versión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xnommanvehmod, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.itipomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                'Dim aipmanvehverController As New aipmanvehverController
                'Dim naniomanvehver As Decimal = aipmanvehverController.selnaniomanvehverxid(vi_aipmanveh.idaipmanvehver)
                cell = celldas(" " & vi_aipmanveh.naniomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.icolormanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xnommanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)

                cell = celldas("Placa:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Serial de carrocería:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Serial del motor:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Tipo de transmisión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Km.:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xplacamanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xsercarrmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xsermotmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("ITIPOTRANSMANVEH")
                xvaloresdrescripcion = ""
                For i As Integer = 0 To lista_comunconfvalor.Count - 1
                    If lista_comunconfvalor(i).xvalordescripcion <> "SELECCIONE..." Then
                        xvalor = ("()")
                        If lista_comunconfvalor(i).xvalordescripcion = vi_aipmanveh.itipotransmanveh Then
                            xvalor = ("(X)")
                        End If
                        xvaloresdrescripcion = xvaloresdrescripcion & lista_comunconfvalor(i).xvalordescripcion.Substring(0, 3) & "." & xvalor & " "
                    End If
                Next
                cell = celldas(" " & xvaloresdrescripcion, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipinslimsus.nkiloinslimsus, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)


                Dim table4 As New iTextSharp.text.pdf.PdfPTable(1)
                table4.SetWidths(New Integer() {70})
                table4.WidthPercentage = 100
                Dim img2 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "carrito.png")
                img2.ScalePercent(80.0F)
                img2.Rotation = 80.125
                'img2.SetAbsolutePosition(300, 800)                
                img2.SpacingBefore = 60
                cell2 = New iTextSharp.text.pdf.PdfPCell((img2))
                cell2.Colspan = 1
                cell2.HorizontalAlignment = 0 '0=Left, 1=Centre, 2=Right
                cell2.Border = 0
                table4.AddCell(cell2)

                Dim table5 As New iTextSharp.text.pdf.PdfPTable(3)
                table5.SetWidths(New Integer() {70, 70, 70})
                table5.WidthPercentage = 100
                cell = celldas("Observaciones:", 0, 0, 0, 3, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas(" " & vi_aipinslimsus.xdescinslimsus, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table5.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table5.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table5.AddCell(cell)


                Dim table6 As New iTextSharp.text.pdf.PdfPTable(5)
                table6.SetWidths(New Integer() {30, 150, 70, 30, 100})
                table6.WidthPercentage = 100
                cell = celldas("Código:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas("Nombre y Apellido del Perito", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table6.AddCell(cell)


                cell = celldas(" " & vi_aipinslimsus.idsegmanusuperit, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas(" " & vi_aipinslimsus.xnombrecompleto, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas("Firma del Perito ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table6.AddCell(cell)
                cell = celldas("Firma del jefe de Peritos ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                table6.AddCell(cell)


                'tabla de las imagenes
                Dim tableimg As New iTextSharp.text.pdf.PdfPTable(1)
                tableimg.SetWidths(New Integer() {350})
                tableimg.WidthPercentage = 100
                'cell = celldas("FOTOS ADJUNTAS", 107, 104, 98, 1, 1, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'tableimg.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                tableimg.AddCell(cell)
                Dim vi_aipinsfotoController As New vi_aipinsfotoController
                Dim lista_vi_aipinsfoto As List(Of vi_aipinsfoto) = vi_aipinsfotoController.selvi_aipinsfotoxidaipinsenc(vi_aipinsenc.idaipinsenc)
                If lista_vi_aipinsfoto.Count > 0 Then
                    Dim xrutatipoenc As String = ""

                    Dim img As iTextSharp.text.Image

                    Select Case vi_aipinsenc.itipoinsenc
                        Case "SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\suscripcion\ok\"
                        Case "SINIESTRO"
                            xrutatipoenc = "fotosmovil\siniestro\ok\"
                        Case "RESTOS Y SALVAMENTO"
                            xrutatipoenc = "fotosmovil\restos_salvamento\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\limpieza_siniestro\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\limpieza_suscripcion\ok\"
                        Case "AJUSTES POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\ajustes_sinientro\ok\"
                        Case "AJUSTES POR ANEXO"
                            xrutatipoenc = "fotosmovil\ajustes_anexo\ok\"
                    End Select
                    Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
                    Dim xruta As String = ""
                    For i As Integer = 0 To lista_vi_aipinsfoto.Count - 1
                        xruta = xrutaraiz & xrutatipoenc & lista_vi_aipinsfoto(i).xnomarchinsfoto
                        img = iTextSharp.text.Image.GetInstance(xruta)

                        img.ScalePercent(80.0F)
                        img.SpacingBefore = 30

                        cell2 = New iTextSharp.text.pdf.PdfPCell((img))
                        cell2.Colspan = 1
                        cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                        cell2.Border = 0
                        cell2.BorderWidthRight = 0
                        tableimg.AddCell(cell2)

                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                        tableimg.AddCell(cell)
                    Next
                End If
                'fin tabla imagenes


                table0.SpacingBefore = 5
                doc.Add(table0)

                table1.SpacingBefore = 5
                doc.Add(table1)

                'table2.SpacingBefore = 10
                'doc.Add(table2)

                table3.SpacingBefore = 10
                doc.Add(table3)

                table4.SpacingBefore = 35
                doc.Add(table4)

                'table5.SpacingBefore = 10
                'doc.Add(table5)

                table5.SpacingBefore = 10
                doc.Add(table5)

                table6.SpacingBefore = 10
                doc.Add(table6)

                tableimg.SpacingBefore = 60
                doc.Add(tableimg)

                'table7.SpacingBefore = 10
                'doc.Add(table7)

                'table8.SpacingBefore = 10
                'doc.Add(table8)

                'table9.SpacingBefore = 10
                'doc.Add(table9)

                doc.Close()

                'If File.Exists("C:\sitfxarchivos\sitfx20\prueba2.pdf") Then
                '    File.Delete("C:\sitfxarchivos\sitfx20\prueba2.pdf")
                'End If
                'Dim secuencia As Byte() = ms.ToArray()
                'File.WriteAllBytes("C:\sitfxarchivos\sitfx20\prueba2.pdf", secuencia)

                'Return ms.ToArray()

                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = ms.ToArray()
                DownloadFilesResult.Name = "ReporteInspeccionLimpiezaSuscripcion" & ".pdf"
                DownloadFilesResult.Type = "pdf"

                Return DownloadFilesResult
            Catch ex As Exception
                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                DownloadFilesResult.Name = "ReporteInspeccionLimpiezaSuscripcion" & ".pdf"
                DownloadFilesResult.Type = "pdf"
                Return DownloadFilesResult
            End Try
        End Function

        '<HttpGet()> _
        'Public Function ImprimirInspeccionLimpiezaSiniestro(aipinslimsin As Decimal) As DownloadFilesResult
        '    Try

        '        Dim vi_aipinslimsinController As New vi_aipinslimsinController
        '        Dim vi_aipinslimsin As vi_aipinslimsin = vi_aipinslimsinController.selvi_aipinslimsinxid(aipinslimsin)

        '        Dim comunconfvalorController As New comunconfvalorController
        '        Dim lista_comunconfvalor As New List(Of comunconfvalor)


        '        Dim xvalor As String = " ()"
        '        Dim xvalor2 As String = " ()"
        '        Dim xvalor3 As String = " ()"
        '        Dim xvaloresdrescripcion As String = ""

        '        Dim ms As New MemoryStream
        '        Dim doc As New iTextSharp.text.Document(iTextSharp.text.PageSize.A4.Rotate())
        '        Dim writer As iTextSharp.text.pdf.PdfWriter = iTextSharp.text.pdf.PdfWriter.GetInstance(doc, ms)
        '        'Dim ev As New itsEvents
        '        'writer.PageEvent = ev
        '        doc.Open()
        '        Dim table0 As New iTextSharp.text.pdf.PdfPTable(2)
        '        table0.SetWidths(New Integer() {70, 600})
        '        table0.WidthPercentage = 100


        '        Dim vi_aipinsencController As New vi_aipinsencController
        '        Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(vi_aipinslimsin.idaipinsenc)
        '        Dim table1 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table1.SetWidths(New Integer() {70, 70, 70})
        '        table1.WidthPercentage = 100
        '        Dim cell As New iTextSharp.text.pdf.PdfPCell
        '        cell = celldas("Datos de cabecera:", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("Fecha:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("N° póliza:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("N Siniestro", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsenc.fcreainsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsenc.xnumpolinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsenc.xnumsininsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)

        '        cell = celldas("Nº factura:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("Medio", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("Nombre completo del asegurado:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinslimsin.nfactinslimsin, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinslimsin.xnomaseginslimsin, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinslimsin.xnomaseginslimsin, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)

        '        cell = celldas("Código del perito", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("Nombre completo del perito", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinslimsin.idsegmanusu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinslimsin.xnombrecompleto, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)

        '        Dim table3 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table3.SetWidths(New Integer() {70, 70, 70})
        '        table3.WidthPercentage = 100
        '        cell = celldas("Datos del vehiculo:", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        Dim vi_aipmanvehController As New vi_aipmanvehController
        '        Dim vi_aipmanveh As vi_aipmanveh = vi_aipmanvehController.selvi_aipmanvehxid(vi_aipinslimsin.idaipmanveh)
        '        cell = celldas("Sucursal:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Marca:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Modelo", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipinslimsin.xsucuinslimsin, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xnommanvehmar, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xnommanvehmod, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)

        '        cell = celldas("Tipo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Año:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Color:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.itipomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        Dim aipmanvehverController As New aipmanvehverController
        '        Dim naniomanvehver As Decimal = aipmanvehverController.selnaniomanvehverxid(vi_aipmanveh.idaipmanvehver)
        '        cell = celldas(naniomanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.icolormanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)

        '        cell = celldas("Versión::", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Placa:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Serial de carrocería:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xnommanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xplacamanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xsercarrmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)

        '        cell = celldas("Serial del motor:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Tipo de transmisión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Kilometraje:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xsermotmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("ITIPOTRANSMANVEH")
        '        xvaloresdrescripcion = ""
        '        For i As Integer = 0 To lista_comunconfvalor.Count - 1
        '            If lista_comunconfvalor(i).xvalordescripcion <> "SELECCIONE..." Then
        '                xvalor = (" ()")
        '                If lista_comunconfvalor(i).xvalordescripcion = vi_aipmanveh.itipotransmanveh Then
        '                    xvalor = (" (X)")
        '                End If
        '                xvaloresdrescripcion = xvaloresdrescripcion & xvalor & " " & lista_comunconfvalor(i).xvalordescripcion & " "
        '            End If
        '        Next
        '        cell = celldas(xvaloresdrescripcion, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipinslimsin.nkiloinslimsin, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)



        '        Dim lista_vi_aipinslimsinrepu As List(Of vi_aipinslimsinrepu) = ObtenerRepuestosLimpiezaSiniestro(vi_aipinslimsin.idaipinslimsin)
        '        Dim table4 As New iTextSharp.text.pdf.PdfPTable(4)
        '        table4.SetWidths(New Integer() {70, 70, 70, 70})
        '        table4.WidthPercentage = 100
        '        cell = celldas("Repuestos:", 59, 89, 152, 4, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        cell = celldas("Cantidad:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        cell = celldas("Repuesto:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        cell = celldas("Origen:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        cell = celldas("Precio:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        For i As Integer = 0 To lista_vi_aipinslimsinrepu.Count - 1
        '            cell = celldas(lista_vi_aipinslimsinrepu(i).ncantinslimsinrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table4.AddCell(cell)
        '            cell = celldas(lista_vi_aipinslimsinrepu(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table4.AddCell(cell)
        '            cell = celldas(lista_vi_aipinslimsinrepu(i).iorigbarerepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table4.AddCell(cell)
        '            cell = celldas(formateardecimalymiles(lista_vi_aipinslimsinrepu(i).nprecfininslimsinrepu, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table4.AddCell(cell)
        '        Next

        '        Dim lista_vi_aipinslimsinmobr As List(Of vi_aipinslimsinmobr) = ObtenerMobrLimpiezaSiniestro(vi_aipinslimsin.idaipinslimsin)
        '        Dim table5 As New iTextSharp.text.pdf.PdfPTable(6)
        '        table5.SetWidths(New Integer() {70, 70, 70, 70, 70, 70})
        '        table5.WidthPercentage = 100
        '        cell = celldas("Mano de Obra:", 59, 89, 152, 6, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Cantidad:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Repuesto:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Tamaño:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Material:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Mano obra:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Precio:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        For i As Integer = 0 To lista_vi_aipinslimsinmobr.Count - 1
        '            cell = celldas(lista_vi_aipinslimsinmobr(i).ncantinslimsinmobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(lista_vi_aipinslimsinmobr(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(lista_vi_aipinslimsinmobr(i).itamapiezbaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(lista_vi_aipinslimsinmobr(i).imaterpiezbaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(lista_vi_aipinslimsinmobr(i).itipobaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(formateardecimalymiles(lista_vi_aipinslimsinmobr(i).nprecfininslimsinmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '        Next


        '        Dim table6 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table6.SetWidths(New Integer() {70, 70, 70})
        '        table6.WidthPercentage = 100
        '        cell = celldas("Detalle de limpieza:", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)
        '        cell = celldas("Observaciones:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)
        '        cell = celldas(vi_aipinslimsin.xdescinslimsin, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)

        '        table1.SpacingBefore = 10
        '        doc.Add(table1)

        '        'table2.SpacingBefore = 10
        '        'doc.Add(table2)

        '        table3.SpacingBefore = 10
        '        doc.Add(table3)

        '        table4.SpacingBefore = 10
        '        doc.Add(table4)

        '        table5.SpacingBefore = 10
        '        doc.Add(table5)

        '        table6.SpacingBefore = 10
        '        doc.Add(table6)

        '        'table7.SpacingBefore = 10
        '        'doc.Add(table7)

        '        'table8.SpacingBefore = 10
        '        'doc.Add(table8)

        '        'table9.SpacingBefore = 10
        '        'doc.Add(table9)

        '        doc.Close()

        '        If File.Exists("C:\sitfxarchivos\sitfx20\prueba2.pdf") Then
        '            File.Delete("C:\sitfxarchivos\sitfx20\prueba2.pdf")
        '        End If
        '        Dim secuencia As Byte() = ms.ToArray()
        '        File.WriteAllBytes("C:\sitfxarchivos\sitfx20\prueba2.pdf", secuencia)

        '        'Return ms.ToArray()

        '        Dim DownloadFilesResult As New DownloadFilesResult
        '        DownloadFilesResult.ArchivoByte = ms.ToArray()
        '        DownloadFilesResult.Name = "ReporteInspeccionLimpiezaSiniestro" & ".pdf"
        '        DownloadFilesResult.Type = "pdf"

        '        Return DownloadFilesResult
        '    Catch ex As Exception
        '        Dim DownloadFilesResult As New DownloadFilesResult
        '        DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
        '        DownloadFilesResult.Name = "ReporteInspeccionLimpiezaSiniestro" & ".pdf"
        '        DownloadFilesResult.Type = "pdf"
        '        Return DownloadFilesResult
        '    End Try
        'End Function
        <HttpGet()> _
        Public Function ImprimirInspeccionLimpiezaSiniestro(idaipinslimsin As Decimal) As DownloadFilesResult
            Try

                Dim vi_aipinslimsinController As New vi_aipinslimsinController
                Dim vi_aipinslimsin As vi_aipinslimsin = vi_aipinslimsinController.selvi_aipinslimsinxid(idaipinslimsin)

                Dim comunconfvalorController As New comunconfvalorController
                Dim lista_comunconfvalor As New List(Of comunconfvalor)


                Dim xvalor As String = " ()"
                Dim xvalor2 As String = " ()"
                Dim xvalor3 As String = " ()"
                Dim xvaloresdrescripcion As String = ""

                Dim ms As New MemoryStream
                Dim doc As New iTextSharp.text.Document(iTextSharp.text.PageSize.A4)
                Dim writer As iTextSharp.text.pdf.PdfWriter = iTextSharp.text.pdf.PdfWriter.GetInstance(doc, ms)
                'Dim ev As New itsEvents
                'writer.PageEvent = ev
                doc.Open()
                Dim table0 As New iTextSharp.text.pdf.PdfPTable(2)
                table0.SetWidths(New Integer() {100, 600})
                table0.WidthPercentage = 100
                Dim img1 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "logo_federal.png")
                img1.ScalePercent(100.0F)
                'img2.SetAbsolutePosition(300, 800)                
                img1.SpacingBefore = 60

                Dim cell2 As New iTextSharp.text.pdf.PdfPCell((img1))
                cell2.Colspan = 1
                cell2.Rowspan = 5
                cell2.HorizontalAlignment = 0 '0=Left, 1=Centre, 2=Right
                cell2.Border = 0
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas("LIMPIEZA DE DAÑOS", 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(FormatDateTime(Date.Now, DateFormat.ShortDate).ToString & " " & FormatDateTime(Date.Now, DateFormat.ShortTime).ToString, 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)

                Dim vi_aipinsencController As New vi_aipinsencController
                Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(vi_aipinslimsin.idaipinsenc)
                Dim table1 As New iTextSharp.text.pdf.PdfPTable(5)
                table1.SetWidths(New Integer() {90, 90, 110, 110, 200})
                ' table1.SetWidths(New Integer() {120, 90, 90, 200})
                table1.WidthPercentage = 100
                Dim cell As New iTextSharp.text.pdf.PdfPCell
                'cell = celldas(" ", 59, 89, 152, 4, 0, System.Drawing.Color.White, -1, 10.0F,0.5,0.5,0.5,0.5)
                'table1.AddCell(cell)
                cell = celldas("Fecha", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(" N° Factura", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas("Póliza Número", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas("Siniestro Número:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas("Repuesto [] Mano de Obra[]", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.fcreainsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinslimsin.nfactinslimsin, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.xnumpolinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.xnumsininsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)


                Dim table3 As New iTextSharp.text.pdf.PdfPTable(5)
                table3.SetWidths(New Integer() {70, 70, 70, 70, 70})
                table3.WidthPercentage = 100
                'cell = celldas("Datos del vehiculo:", 107, 104, 98, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                'table3.AddCell(cell)
                Dim vi_aipmanvehController As New vi_aipmanvehController
                Dim vi_aipmanveh As vi_aipmanveh = vi_aipmanvehController.selvi_aipmanvehxid(vi_aipinslimsin.idaipmanveh)
                cell = celldas("Nombre y Apellido del Asegurado:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Sucursal:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Marca:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipinslimsin.xnomaseginslimsin, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipinslimsin.xsucuinslimsin, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xnommanvehmar, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)

                cell = celldas("Modelo", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Tipo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Año:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Color:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Versión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xnommanvehmod, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.itipomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                'Dim aipmanvehverController As New aipmanvehverController
                'Dim naniomanvehver As Decimal = aipmanvehverController.selnaniomanvehverxid(vi_aipmanveh.idaipmanvehver)
                cell = celldas(" " & vi_aipmanveh.naniomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.icolormanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xnommanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)

                cell = celldas("Placa:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Serial de carrocería:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Serial del motor:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Tipo de transmisión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Km.:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xplacamanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xsercarrmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xsermotmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("ITIPOTRANSMANVEH")
                xvaloresdrescripcion = ""
                For i As Integer = 0 To lista_comunconfvalor.Count - 1
                    If lista_comunconfvalor(i).xvalordescripcion <> "SELECCIONE..." Then
                        xvalor = ("()")
                        If lista_comunconfvalor(i).xvalordescripcion = vi_aipmanveh.itipotransmanveh Then
                            xvalor = ("(X)")
                        End If
                        xvaloresdrescripcion = xvaloresdrescripcion & lista_comunconfvalor(i).xvalordescripcion.Substring(0, 3) & "." & xvalor & " "
                    End If
                Next
                cell = celldas(" " & xvaloresdrescripcion, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipinslimsin.nkiloinslimsin, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)


                Dim table4 As New iTextSharp.text.pdf.PdfPTable(1)
                table4.SetWidths(New Integer() {70})
                table4.WidthPercentage = 100
                Dim img2 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "carrito.png")
                img2.ScalePercent(80.0F)
                img2.Rotation = 80.125
                'img2.SetAbsolutePosition(300, 800)                
                img2.SpacingBefore = 60
                cell2 = New iTextSharp.text.pdf.PdfPCell((img2))
                cell2.Colspan = 1
                cell2.HorizontalAlignment = 0 '0=Left, 1=Centre, 2=Right
                cell2.Border = 0
                table4.AddCell(cell2)

                Dim table5 As New iTextSharp.text.pdf.PdfPTable(3)
                table5.SetWidths(New Integer() {70, 70, 70})
                table5.WidthPercentage = 100
                cell = celldas("Observaciones:", 0, 0, 0, 3, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas(" " & vi_aipinslimsin.xdescinslimsin, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 8.0F, 0.5, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table5.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table5.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table5.AddCell(cell)


                Dim table6 As New iTextSharp.text.pdf.PdfPTable(5)
                table6.SetWidths(New Integer() {30, 150, 70, 30, 100})
                table6.WidthPercentage = 100
                cell = celldas("Código:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas("Nombre y Apellido del Perito", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table6.AddCell(cell)


                cell = celldas(" " & vi_aipinslimsin.idsegmanusuperit, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas(" " & vi_aipinslimsin.xnombrecompleto, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas("Firma del Perito ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table6.AddCell(cell)
                cell = celldas("Firma del jefe de Peritos ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                table6.AddCell(cell)

                'tabla de las imagenes
                Dim tableimg As New iTextSharp.text.pdf.PdfPTable(1)
                tableimg.SetWidths(New Integer() {350})
                tableimg.WidthPercentage = 100
                'cell = celldas("FOTOS ADJUNTAS", 107, 104, 98, 1, 1, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'tableimg.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                tableimg.AddCell(cell)
                Dim vi_aipinsfotoController As New vi_aipinsfotoController
                Dim lista_vi_aipinsfoto As List(Of vi_aipinsfoto) = vi_aipinsfotoController.selvi_aipinsfotoxidaipinsenc(vi_aipinsenc.idaipinsenc)
                If lista_vi_aipinsfoto.Count > 0 Then
                    Dim xrutatipoenc As String = ""

                    Dim img As iTextSharp.text.Image

                    Select Case vi_aipinsenc.itipoinsenc
                        Case "SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\suscripcion\ok\"
                        Case "SINIESTRO"
                            xrutatipoenc = "fotosmovil\siniestro\ok\"
                        Case "RESTOS Y SALVAMENTO"
                            xrutatipoenc = "fotosmovil\restos_salvamento\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\limpieza_siniestro\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\limpieza_suscripcion\ok\"
                        Case "AJUSTES POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\ajustes_sinientro\ok\"
                        Case "AJUSTES POR ANEXO"
                            xrutatipoenc = "fotosmovil\ajustes_anexo\ok\"
                    End Select
                    Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
                    Dim xruta As String = ""
                    For i As Integer = 0 To lista_vi_aipinsfoto.Count - 1
                        xruta = xrutaraiz & xrutatipoenc & lista_vi_aipinsfoto(i).xnomarchinsfoto
                        img = iTextSharp.text.Image.GetInstance(xruta)

                        img.ScalePercent(80.0F)
                        img.SpacingBefore = 30

                        cell2 = New iTextSharp.text.pdf.PdfPCell((img))
                        cell2.Colspan = 1
                        cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                        cell2.Border = 0
                        cell2.BorderWidthRight = 0
                        tableimg.AddCell(cell2)

                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                        tableimg.AddCell(cell)
                    Next
                End If
                'fin tabla imagenes



                table0.SpacingBefore = 5
                doc.Add(table0)

                table1.SpacingBefore = 5
                doc.Add(table1)

                'table2.SpacingBefore = 10
                'doc.Add(table2)

                table3.SpacingBefore = 10
                doc.Add(table3)

                table4.SpacingBefore = 35
                doc.Add(table4)

                'table5.SpacingBefore = 10
                'doc.Add(table5)

                table5.SpacingBefore = 10
                doc.Add(table5)

                table6.SpacingBefore = 10
                doc.Add(table6)


                tableimg.SpacingBefore = 60
                doc.Add(tableimg)


                'table7.SpacingBefore = 10
                'doc.Add(table7)

                'table8.SpacingBefore = 10
                'doc.Add(table8)

                'table9.SpacingBefore = 10
                'doc.Add(table9)

                doc.Close()

                'If File.Exists("C:\sitfxarchivos\sitfx20\prueba2.pdf") Then
                '    File.Delete("C:\sitfxarchivos\sitfx20\prueba2.pdf")
                'End If
                'Dim secuencia As Byte() = ms.ToArray()
                'File.WriteAllBytes("C:\sitfxarchivos\sitfx20\prueba2.pdf", secuencia)

                'Return ms.ToArray()

                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = ms.ToArray()
                DownloadFilesResult.Name = "ReporteInspeccionLimpiezaSiniestro" & ".pdf"
                DownloadFilesResult.Type = "pdf"
                '
                Return DownloadFilesResult
            Catch ex As Exception
                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                DownloadFilesResult.Name = "ReporteInspeccionLimpiezaSiniestro" & ".pdf"
                DownloadFilesResult.Type = "pdf"
                Return DownloadFilesResult
            End Try
        End Function

        <HttpGet()> _
        Public Function ImprimirInspeccionAjusteSiniestro(idaipinsajussin As Decimal) As DownloadFilesResult
            Try

                Dim vi_aipinsajussinController As New vi_aipinsajussinController
                Dim vi_aipinsajussin As vi_aipinsajussin = vi_aipinsajussinController.selvi_aipinsajussinxid(idaipinsajussin)

                Dim comunconfvalorController As New comunconfvalorController
                Dim lista_comunconfvalor As New List(Of comunconfvalor)


                Dim xvalor As String = " ()"
                Dim xvalor2 As String = " ()"
                Dim xvalor3 As String = " ()"
                Dim xvaloresdrescripcion As String = ""

                Dim ms As New MemoryStream
                Dim doc As New iTextSharp.text.Document(iTextSharp.text.PageSize.A4)
                Dim writer As iTextSharp.text.pdf.PdfWriter = iTextSharp.text.pdf.PdfWriter.GetInstance(doc, ms)
                'Dim ev As New itsEvents
                'writer.PageEvent = ev
                doc.Open()
                Dim table0 As New iTextSharp.text.pdf.PdfPTable(2)
                table0.SetWidths(New Integer() {100, 600})
                table0.WidthPercentage = 100
                Dim img1 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "logo_federal.png")
                img1.ScalePercent(100.0F)
                'img2.SetAbsolutePosition(300, 800)                
                img1.SpacingBefore = 60

                Dim cell2 As New iTextSharp.text.pdf.PdfPCell((img1))
                cell2.Colspan = 1
                cell2.Rowspan = 5
                cell2.HorizontalAlignment = 0 '0=Left, 1=Centre, 2=Right
                cell2.Border = 0
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas("AJUESTE DE DAÑOS", 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)


                Dim vi_aipinsencController As New vi_aipinsencController
                Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(vi_aipinsajussin.idaipinsenc)
                Dim table1 As New iTextSharp.text.pdf.PdfPTable(5)
                table1.SetWidths(New Integer() {70, 70, 70, 70, 120})
                table1.WidthPercentage = 100
                Dim cell As New iTextSharp.text.pdf.PdfPCell
                cell = celldas("Fecha", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(" Ajuste:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas("Póliza Número", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas("Siniestro Número:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.fcreainsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(" Inic.(X) Anexo()", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.xnumpolinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.xnumsininsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0, 0.5, 0.5, 0)
                'table1.AddCell(cell)
                If vi_aipinsajussin.isininsajussin = True Then
                    xvalor = "Siniestro[X] "
                Else
                    xvalor = "Siniestro[] "
                End If
                If vi_aipinsajussin.irecupinsajussin = True Then
                    xvalor2 = "Recuperado[X] "
                Else
                    xvalor2 = "Recuperado[] "
                End If
                If vi_aipinsajussin.itercinsajussin = True Then
                    xvalor3 = "Tercero[X] "
                Else
                    xvalor3 = "Tercero[] "
                End If
                cell = celldas(xvalor & xvalor2 & xvalor3, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)

                Dim table3 As New iTextSharp.text.pdf.PdfPTable(5)
                table3.SetWidths(New Integer() {70, 70, 70, 70, 70})
                table3.WidthPercentage = 100
                'cell = celldas("Datos del vehiculo:", 107, 104, 98, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                'table3.AddCell(cell)
                Dim vi_aipmanvehController As New vi_aipmanvehController
                Dim vi_aipmanveh As vi_aipmanveh = vi_aipmanvehController.selvi_aipmanvehxid(vi_aipinsajussin.idaipmanveh)
                cell = celldas("Nombre y Apellido del Asegurado:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Sucursal:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Marca:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipinsajussin.xnomaseginsajussin, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipinsajussin.xsucuinsajussin, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xnommanvehmar, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)

                cell = celldas("Modelo", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Tipo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Año:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Color:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Versión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xnommanvehmod, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.itipomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                'Dim aipmanvehverController As New aipmanvehverController
                'Dim naniomanvehver As Decimal = aipmanvehverController.selnaniomanvehverxid(vi_aipmanveh.idaipmanvehver)
                cell = celldas(" " & vi_aipmanveh.naniomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.icolormanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xnommanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)

                cell = celldas("Placa:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Serial de carrocería:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Serial del motor:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Transmisión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Km.:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xplacamanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xsercarrmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xsermotmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("ITIPOTRANSMANVEH")
                xvaloresdrescripcion = ""
                For i As Integer = 0 To lista_comunconfvalor.Count - 1
                    If lista_comunconfvalor(i).xvalordescripcion <> "SELECCIONE..." Then
                        xvalor = ("()")
                        If lista_comunconfvalor(i).xvalordescripcion = vi_aipmanveh.itipotransmanveh Then
                            xvalor = ("(X)")
                        End If
                        xvaloresdrescripcion = xvaloresdrescripcion & lista_comunconfvalor(i).xvalordescripcion.Substring(0, 3) & "." & xvalor & " "
                    End If
                Next
                cell = celldas(" " & xvaloresdrescripcion, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipinsajussin.nkiloinsajussin, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)


                Dim lista_vi_aipinsajussinrepu As List(Of vi_aipinsajussinrepu) = ObtenerRepuestosAjusteSiniestro(vi_aipinsajussin.idaipinsajussin)
                Dim table4 As New iTextSharp.text.pdf.PdfPTable(6)
                Dim op As String = ""
                Dim tw As String = ""
                Dim n As String = ""

                table4.SetWidths(New Integer() {60, 250, 70, 70, 70, 70})
                table4.WidthPercentage = 100
                cell = celldas("Repuestos:", 0, 0, 0, 6, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table4.AddCell(cell)
                cell = celldas("Cantidad:", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table4.AddCell(cell)
                cell = celldas("DESCRIPCIÓN", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table4.AddCell(cell)
                cell = celldas("Precio:", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table4.AddCell(cell)
                cell = celldas("OP", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table4.AddCell(cell)
                cell = celldas("TW", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table4.AddCell(cell)
                cell = celldas("N", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table4.AddCell(cell)
                For i As Integer = 0 To lista_vi_aipinsajussinrepu.Count - 1
                    op = ""
                    n = ""
                    tw = ""
                    Select Case lista_vi_aipinsajussinrepu(i).iorigbarerepu
                        Case "TAIWANES"
                            tw = " X "
                        Case "EXTRANJERO"
                            op = " X "
                        Case "NACIONAL"
                            n = " X "
                    End Select
                    cell = celldas(lista_vi_aipinsajussinrepu(i).ncantinsajussinrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                    table4.AddCell(cell)
                    cell = celldas(lista_vi_aipinsajussinrepu(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table4.AddCell(cell)
                    cell = celldas(formateardecimalymiles(lista_vi_aipinsajussinrepu(i).nprecfininsajussinrepu, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table4.AddCell(cell)
                    cell = celldas(" " & op, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table4.AddCell(cell)
                    cell = celldas(" " & tw, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table4.AddCell(cell)
                    cell = celldas(" " & n, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table4.AddCell(cell)
                Next
                Dim numero_row As Integer = 27
                If lista_vi_aipinsajussinrepu.Count < numero_row Then
                    numero_row = numero_row - lista_vi_aipinsajussinrepu.Count

                    For i As Integer = 0 To numero_row - 1
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                        table4.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table4.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table4.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table4.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table4.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table4.AddCell(cell)
                    Next
                End If

                Dim table4_2 As New iTextSharp.text.pdf.PdfPTable(4)
                table4_2.SetWidths(New Integer() {70, 70, 70, 70})
                table4_2.WidthPercentage = 100
                cell = celldas("ESPACIO DESTINADO PARA LA IMPRONTA:", 107, 104, 98, 4, 1, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table4_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 4, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table4_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0.5)
                table4_2.AddCell(cell)
                cell = celldas("VER FOTO ANEXA:", 0, 0, 0, 2, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table4_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table4_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 4, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0.5)
                table4_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 4, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0.5)
                table4_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 4, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table4_2.AddCell(cell)


                Dim table5 As New iTextSharp.text.pdf.PdfPTable(7)
                table5.SetWidths(New Integer() {60, 250, 70, 70, 70, 50, 50})
                table5.WidthPercentage = 100
                cell = celldas("Mano de Obra:", 0, 0, 0, 7, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Cantidad:", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas("DESCRIPCIÓN", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table5.AddCell(cell)
                cell = celldas("PINTAR", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table5.AddCell(cell)
                cell = celldas("LAT", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table5.AddCell(cell)
                cell = celldas("PULIR", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table5.AddCell(cell)
                cell = celldas("REPAR.", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table5.AddCell(cell)
                cell = celldas("CAMB.", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table5.AddCell(cell)
                'cell = celldas("Precio:", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                'table5.AddCell(cell)
                Dim xrepar As String = " "
                Dim xcambio As String = " "
                Dim ntotal_pint As Decimal = 0
                Dim ntotal_lato As Decimal = 0
                Dim ntotal_pulir As Decimal = 0
                Dim ntotal_meca As Decimal = 0
                Dim ntotal_alinea As Decimal = 0
                Dim ntotal_aire_acon As Decimal = 0
                Dim ntotal As Decimal = 0

                Dim xmonto_pintura As String = ""
                Dim xmonto_latoneria As String = ""
                Dim xmonto_pulir As String = ""

                Dim nmonto_latoneria = 0
                Dim nmonto_pintura = 0
                Dim nmonto_pulir = 0
                Dim lista_vi_aipinsajussinmobragrup As List(Of vi_aipinsajussinmobragrup) = ObtenerMobrAjusteSiniestroAgrup(vi_aipinsajussin.idaipinsajussin)
                For i As Integer = 0 To lista_vi_aipinsajussinmobragrup.Count - 1
                    cell = celldas(lista_vi_aipinsajussinmobragrup(i).ncantinsajussinmobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                    table5.AddCell(cell)
                    cell = celldas(lista_vi_aipinsajussinmobragrup(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table5.AddCell(cell)
                    Dim lista_vi_aipinsajussinmobr As List(Of vi_aipinsajussinmobr) = ObtenerMobrAjusteSiniestroXRepuesto(lista_vi_aipinsajussinmobragrup(i).idaipinsajussin, lista_vi_aipinsajussinmobragrup(i).idaipinsenc, lista_vi_aipinsajussinmobragrup(i).idaipmanrepu)
                    For j As Integer = 0 To lista_vi_aipinsajussinmobr.Count - 1
                        ntotal = ntotal + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                        Select Case lista_vi_aipinsajussinmobr(j).itipobaremobr
                            Case "PINTURA" 'si el origen es de pintura el monto va en pintura
                                Dim xnommanrepu As String = LCase(lista_vi_aipinsajussinmobr(j).xnommanrepu)

                                If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                                    nmonto_pintura = nmonto_pintura + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                    ntotal_pint = ntotal_pint + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                Else
                                    Select Case xnommanrepu
                                        Case "alineación", "alineacion"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_alinea = ntotal_alinea + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                        Case "aire acondicionado"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                        Case "mecanica", "mecánica"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_meca = ntotal_meca + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                    End Select
                                End If

                            Case "LATONERIA" 'si el origen es de latoneria el monto va en latoneria

                                Dim xnommanrepu As String = LCase(lista_vi_aipinsajussinmobr(j).xnommanrepu)

                                If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                                    nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                    ntotal_lato = ntotal_lato + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                Else
                                    Select Case xnommanrepu
                                        Case "alineación", "alineacion"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_alinea = ntotal_alinea + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                        Case "aire acondicionado"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                        Case "mecanica", "mecánica"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_meca = ntotal_meca + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                    End Select
                                End If

                            Case "PULIR" 'si el origen es de PULIR el monto va en pulir

                                Dim xnommanrepu As String = LCase(lista_vi_aipinsajussinmobr(j).xnommanrepu)

                                If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                                    nmonto_pulir = nmonto_pulir + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                    ntotal_pulir = ntotal_pulir + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                Else
                                    Select Case xnommanrepu
                                        Case "alineación", "alineacion"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_alinea = ntotal_alinea + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                        Case "aire acondicionado"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                        Case "mecanica", "mecánica"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_meca = ntotal_meca + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                    End Select
                                End If
                            Case "REPARAR" 'si el origen es de REPARAR el monto va en latoneria
                                xrepar = " X "

                                Dim xnommanrepu As String = LCase(lista_vi_aipinsajussinmobr(j).xnommanrepu)
                                If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                                    nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                    ntotal_lato = ntotal_lato + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                Else
                                    Select Case xnommanrepu
                                        Case "alineación", "alineacion"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_alinea = ntotal_alinea + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                        Case "aire acondicionado"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                        Case "mecanica", "mecánica"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_meca = ntotal_meca + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                    End Select
                                End If

                            Case "CAMBIAR" 'si el origen es cambio el monto va en latoneria
                                xcambio = " X "

                                Dim xnommanrepu As String = LCase(lista_vi_aipinsajussinmobr(j).xnommanrepu)

                                If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                                    nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                    ntotal_lato = ntotal_lato + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                Else
                                    Select Case xnommanrepu
                                        Case "alineación", "alineacion"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_alinea = ntotal_alinea + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                        Case "aire acondicionado"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                        Case "mecanica", "mecánica"
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                            ntotal_meca = ntotal_meca + lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr
                                    End Select
                                End If

                            Case Else
                                xmonto_pintura = ""
                                xmonto_latoneria = ""
                                xmonto_pulir = ""
                        End Select



                        'cell = celldas(lista_vi_aipinsajussinmobr(i).itamapiezbaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        'table5.AddCell(cell)
                        'cell = celldas(lista_vi_aipinsajussinmobr(i).imaterpiezbaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        'table5.AddCell(cell)
                        'cell = celldas(lista_vi_aipinsajussinmobr(i).itipobaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        'table5.AddCell(cell)

                        'cell = celldas(formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        'table5.AddCell(cell)
                    Next
                    cell = celldas(formateardecimalymiles(nmonto_pintura, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table5.AddCell(cell)
                    cell = celldas(formateardecimalymiles(nmonto_latoneria, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table5.AddCell(cell)
                    cell = celldas(formateardecimalymiles(nmonto_pulir, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table5.AddCell(cell)

                    cell = celldas(xrepar, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table5.AddCell(cell)
                    cell = celldas(xcambio, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table5.AddCell(cell)

                    xmonto_pintura = " "
                    xmonto_latoneria = " "
                    xmonto_pulir = " "
                    xrepar = " "
                    xcambio = " "
                    nmonto_pintura = 0
                    nmonto_latoneria = 0
                    nmonto_pulir = 0
                Next

                'For i As Integer = 0 To lista_vi_aipinsajussinmobr.Count - 1
                '    cell = celldas(lista_vi_aipinsajussinmobr(i).ncantinsajussinmobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                '    table5.AddCell(cell)
                '    cell = celldas(lista_vi_aipinsajussinmobr(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    table5.AddCell(cell)

                '    xrepar = " "
                '    xcambio = " "
                '    ntotal = ntotal + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '    Select Case lista_vi_aipinsajussinmobr(i).itipobaremobr
                '        Case "PINTURA" 'si el origen es de pintura el monto va en pintura
                '            'cell = celldas(formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            ' ntotal_pint = ntotal_pint + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr

                '            Dim xnommanrepu As String = LCase(lista_vi_aipinsajussinmobr(i).xnommanrepu)

                '            If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                '                xmonto_pintura = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                xmonto_latoneria = ""
                '                xmonto_pulir = ""
                '                ntotal_pint = ntotal_pint + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '            Else
                '                Select Case xnommanrepu
                '                    Case "alineación", "alineacion"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_alinea = ntotal_alinea + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                    Case "aire acondicionado"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                    Case "mecanica", "mecánica"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_meca = ntotal_meca + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                End Select
                '            End If

                '        Case "LATONERIA" 'si el origen es de latoneria el monto va en latoneria
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'ntotal_lato = ntotal_lato + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr

                '            Dim xnommanrepu As String = LCase(lista_vi_aipinsajussinmobr(i).xnommanrepu)

                '            If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                '                xmonto_pintura = ""
                '                xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                xmonto_pulir = ""
                '                ntotal_lato = ntotal_lato + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '            Else
                '                Select Case xnommanrepu
                '                    Case "alineación", "alineacion"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_alinea = ntotal_alinea + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                    Case "aire acondicionado"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                    Case "mecanica", "mecánica"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_meca = ntotal_meca + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                End Select
                '            End If

                '        Case "PULIR" 'si el origen es de PULIR el monto va en pulir
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'ntotal_pulir = ntotal_pulir + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr

                '            Dim xnommanrepu As String = LCase(lista_vi_aipinsajussinmobr(i).xnommanrepu)

                '            If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                '                xmonto_pintura = ""
                '                xmonto_latoneria = ""
                '                xmonto_pulir = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                ntotal_pulir = ntotal_pulir + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '            Else
                '                Select Case xnommanrepu
                '                    Case "alineación", "alineacion"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_alinea = ntotal_alinea + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                    Case "aire acondicionado"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                    Case "mecanica", "mecánica"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_meca = ntotal_meca + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                End Select
                '            End If
                '        Case "REPARAR" 'si el origen es de REPARAR el monto va en latoneria
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'ntotal_lato = ntotal_lato + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '            xrepar = " X "

                '            Dim xnommanrepu As String = LCase(lista_vi_aipinsajussinmobr(i).xnommanrepu)
                '            If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                '                xmonto_pintura = ""
                '                xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                xmonto_pulir = ""
                '                ntotal_lato = ntotal_lato + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '            Else
                '                Select Case xnommanrepu
                '                    Case "alineación", "alineacion"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_alinea = ntotal_alinea + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                    Case "aire acondicionado"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                    Case "mecanica", "mecánica"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_meca = ntotal_meca + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                End Select
                '            End If

                '        Case "CAMBIAR" 'si el origen es cambio el monto va en latoneria
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            xcambio = " X "

                '            Dim xnommanrepu As String = LCase(lista_vi_aipinsajussinmobr(i).xnommanrepu)

                '            'If LCase(lista_vi_aipinsajussinmobr(i).xnommanrepu) = "alineación" Or LCase(lista_vi_aipinsajussinmobr(i).xnommanrepu) = "alineacion" Then
                '            '    'si es cambio del tipo de repuesto alineacion el monto total es para alineacion
                '            '    ntotal_alinea = ntotal_alinea + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '            'Else
                '            '    If LCase(lista_vi_aipinsajussinmobr(i).xnommanrepu) = "aire acondicionado" Then
                '            '        'si es cambio del tipo de repuesto aire acondicionado el monto total es para aire acondicionado
                '            '        ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '            '    Else
                '            '        If LCase(lista_vi_aipinsajussinmobr(i).xnommanrepu) = "Mecanica" Then
                '            '            ' si no es ninguno de las anteriores es para mecanica
                '            '            ntotal_meca = ntotal_meca + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '            '        Else
                '            '            ntotal_lato = ntotal_lato + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '            '        End If
                '            '    End If
                '            'End If

                '            If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                '                xmonto_pintura = ""
                '                xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                xmonto_pulir = ""
                '                ntotal_lato = ntotal_lato + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '            Else
                '                Select Case xnommanrepu
                '                    Case "alineación", "alineacion"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_alinea = ntotal_alinea + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                    Case "aire acondicionado"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                    Case "mecanica", "mecánica"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_meca = ntotal_meca + lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr
                '                End Select
                '            End If

                '        Case Else
                '            xmonto_pintura = ""
                '            xmonto_latoneria = ""
                '            xmonto_pulir = ""
                '    End Select

                '    cell = celldas(xmonto_pintura, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    table5.AddCell(cell)
                '    cell = celldas(xmonto_latoneria, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    table5.AddCell(cell)
                '    cell = celldas(xmonto_pulir, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    table5.AddCell(cell)

                '    cell = celldas(xrepar, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    table5.AddCell(cell)
                '    cell = celldas(xcambio, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    table5.AddCell(cell)


                '    'cell = celldas(lista_vi_aipinsajussinmobr(i).itamapiezbaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    'table5.AddCell(cell)
                '    'cell = celldas(lista_vi_aipinsajussinmobr(i).imaterpiezbaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    'table5.AddCell(cell)
                '    'cell = celldas(lista_vi_aipinsajussinmobr(i).itipobaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    'table5.AddCell(cell)

                '    'cell = celldas(formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    'table5.AddCell(cell)
                'Next
                numero_row = 17
                If lista_vi_aipinsajussinrepu.Count < numero_row Then
                    numero_row = numero_row - lista_vi_aipinsajussinmobragrup.Count

                    For i As Integer = 0 To numero_row - 1
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                        table5.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table5.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table5.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table5.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table5.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table5.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table5.AddCell(cell)
                    Next
                End If

                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Descuento%: ", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas("0,00", 0, 0, 0, 1, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                cell = celldas("", 0, 0, 0, 1, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)

                'cell = celldas(formateardecimalymiles(lista_vi_aipinsajussinmobr(0).nprecfininsajussinmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                'table5.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                'table5.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                'table5.AddCell(cell)
                Dim img3 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "carrito.png")
                img3.ScalePercent(80.0F)
                img3.Rotation = 80.125
                img3.SpacingBefore = 60
                cell2 = New iTextSharp.text.pdf.PdfPCell((img3))
                cell2.Colspan = 2
                cell2.Rowspan = 17
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                cell2.Border = 0
                cell2.BorderWidthRight = 0
                table5.AddCell(cell2)

                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Total Repuestos: ", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas("0,00", 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                'cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                'table5.AddCell(cell)
                'cell = celldas(formateardecimalymiles(lista_vi_aipinsajussinmobr(0).nprecfininsajussinmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                'table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 4, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Pintura:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal_pint, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Latoneria:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal_lato, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Mecánica:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal_meca, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Alineación:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal_alinea, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Aire Acondicionado:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal_aire_acon, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Electricidad:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Chasis/Compacto:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Instalaciones:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Cromado:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("% Desgaste y Depreción:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Total Desgaste y Depreción Mecánica:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 8.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("TOTAL MANO DE OBRA:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal_meca + ntotal_alinea + ntotal_aire_acon, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas(" Repuestos + Mano de Obra:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '

                lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("IVAVENEZUELA")
                Dim niva As Decimal = 0
                If lista_comunconfvalor.Count > 0 Then
                    If IsNumeric(lista_comunconfvalor(1).xvalorcodigo) Then
                        niva = lista_comunconfvalor(1).xvalorcodigo
                    End If
                End If

                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("IVA: " & formateardecimalymiles(niva, "es-VE"), 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                Dim nmonto_iva As Decimal = ((niva / 100) * ntotal)
                Dim ntotal_mas_iva As Decimal = nmonto_iva + ntotal
                cell = celldas(formateardecimalymiles(nmonto_iva, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("TOTAL AJUSTE:", 0, 0, 0, 2, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal_mas_iva, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '

                'numero_row = 15
                'For i As Integer = 0 To numero_row - 1
                'If i = 0 Then
                'Else
                '    cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                '    table5.AddCell(cell)
                '    cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                '    table5.AddCell(cell)
                'End If
                ' Next


                Dim table6 As New iTextSharp.text.pdf.PdfPTable(3)
                table6.SetWidths(New Integer() {70, 70, 70})
                table6.WidthPercentage = 100
                cell = celldas("Observaciones:", 0, 0, 0, 3, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table6.AddCell(cell)
                cell = celldas(" " & vi_aipinsajussin.xdescinsajussin, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)


                Dim table7 As New iTextSharp.text.pdf.PdfPTable(5)
                table7.SetWidths(New Integer() {30, 150, 70, 30, 100})
                table7.WidthPercentage = 100
                cell = celldas("Código:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0.5)
                table7.AddCell(cell)
                cell = celldas("Nombre y Apellido del Perito:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table7.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table7.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table7.AddCell(cell)


                cell = celldas(" " & vi_aipinsajussin.idsegmanusuperit, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table7.AddCell(cell)
                cell = celldas(" " & vi_aipinsajussin.xnombrecompleto, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas("Firma del Perito ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                table7.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table7.AddCell(cell)
                cell = celldas("Firma del jefe de Peritos ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                table7.AddCell(cell)



                'tabla de las imagenes
                Dim tableimg As New iTextSharp.text.pdf.PdfPTable(1)
                tableimg.SetWidths(New Integer() {350})
                tableimg.WidthPercentage = 100
                'cell = celldas("FOTOS ADJUNTAS", 107, 104, 98, 1, 1, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'tableimg.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                tableimg.AddCell(cell)
                Dim vi_aipinsfotoController As New vi_aipinsfotoController
                Dim lista_vi_aipinsfoto As List(Of vi_aipinsfoto) = vi_aipinsfotoController.selvi_aipinsfotoxidaipinsenc(vi_aipinsenc.idaipinsenc)
                If lista_vi_aipinsfoto.Count > 0 Then
                    Dim xrutatipoenc As String = ""

                    Dim img As iTextSharp.text.Image

                    Select Case vi_aipinsenc.itipoinsenc
                        Case "SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\suscripcion\ok\"
                        Case "SINIESTRO"
                            xrutatipoenc = "fotosmovil\siniestro\ok\"
                        Case "RESTOS Y SALVAMENTO"
                            xrutatipoenc = "fotosmovil\restos_salvamento\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\limpieza_siniestro\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\limpieza_suscripcion\ok\"
                        Case "AJUSTES POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\ajustes_sinientro\ok\"
                        Case "AJUSTES POR ANEXO"
                            xrutatipoenc = "fotosmovil\ajustes_anexo\ok\"
                    End Select
                    Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
                    Dim xruta As String = ""
                    For i As Integer = 0 To lista_vi_aipinsfoto.Count - 1
                        xruta = xrutaraiz & xrutatipoenc & lista_vi_aipinsfoto(i).xnomarchinsfoto
                        img = iTextSharp.text.Image.GetInstance(xruta)

                        img.ScalePercent(80.0F)
                        img.SpacingBefore = 30

                        cell2 = New iTextSharp.text.pdf.PdfPCell((img))
                        cell2.Colspan = 1
                        cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                        cell2.Border = 0
                        cell2.BorderWidthRight = 0
                        tableimg.AddCell(cell2)

                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                        tableimg.AddCell(cell)
                    Next
                End If
                'fin tabla imagenes

                table0.SpacingBefore = 10
                doc.Add(table0)

                table1.SpacingBefore = 10
                doc.Add(table1)

                'table2.SpacingBefore = 10
                'doc.Add(table2)

                table3.SpacingBefore = 10
                doc.Add(table3)

                table4.SpacingBefore = 10
                doc.Add(table4)

                table4_2.SpacingBefore = 3
                doc.Add(table4_2)

                table5.SpacingBefore = 40
                doc.Add(table5)

                table6.SpacingBefore = 10
                doc.Add(table6)

                table7.SpacingBefore = 10
                doc.Add(table7)


                tableimg.SpacingBefore = 60
                doc.Add(tableimg)
                'table7.SpacingBefore = 10
                'doc.Add(table7)

                'table8.SpacingBefore = 10
                'doc.Add(table8)

                'table9.SpacingBefore = 10
                'doc.Add(table9)

                doc.Close()

                'If File.Exists("C:\sitfxarchivos\sitfx20\prueba2.pdf") Then
                '    File.Delete("C:\sitfxarchivos\sitfx20\prueba2.pdf")
                'End If
                'Dim secuencia As Byte() = ms.ToArray()
                'File.WriteAllBytes("C:\sitfxarchivos\sitfx20\prueba2.pdf", secuencia)

                'Return ms.ToArray()

                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = ms.ToArray()
                DownloadFilesResult.Name = "ReporteInspeccionAjusteSiniestro" & ".pdf"
                DownloadFilesResult.Type = "pdf"

                Return DownloadFilesResult
            Catch ex As Exception
                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                DownloadFilesResult.Name = "ReporteInspeccionAjusteSiniestro" & ".pdf"
                DownloadFilesResult.Type = "pdf"
                Return DownloadFilesResult
            End Try
        End Function

        '<HttpGet()> _
        'Public Function ImprimirInspeccionAjusteAnexo(idaipinsajusanex As Decimal) As DownloadFilesResult
        '    Try

        '        Dim vi_aipinsajusanexController As New vi_aipinsajusanexController
        '        Dim vi_aipinsajusanex As vi_aipinsajusanex = vi_aipinsajusanexController.selvi_aipinsajusanexxid(idaipinsajusanex)

        '        Dim comunconfvalorController As New comunconfvalorController
        '        Dim lista_comunconfvalor As New List(Of comunconfvalor)


        '        Dim xvalor As String = " ()"
        '        Dim xvalor2 As String = " ()"
        '        Dim xvalor3 As String = " ()"
        '        Dim xvaloresdrescripcion As String = ""

        '        Dim ms As New MemoryStream
        '        Dim doc As New iTextSharp.text.Document(iTextSharp.text.PageSize.A4.Rotate())
        '        Dim writer As iTextSharp.text.pdf.PdfWriter = iTextSharp.text.pdf.PdfWriter.GetInstance(doc, ms)
        '        'Dim ev As New itsEvents
        '        'writer.PageEvent = ev
        '        doc.Open()
        '        Dim table0 As New iTextSharp.text.pdf.PdfPTable(2)
        '        table0.SetWidths(New Integer() {70, 600})
        '        table0.WidthPercentage = 100


        '        Dim vi_aipinsencController As New vi_aipinsencController
        '        Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(vi_aipinsajusanex.idaipinsenc)
        '        Dim table1 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table1.SetWidths(New Integer() {70, 70, 70})
        '        table1.WidthPercentage = 100
        '        Dim cell As New iTextSharp.text.pdf.PdfPCell
        '        cell = celldas("Datos de cabecera:", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("Fecha:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("N° póliza:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("N Siniestro", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsenc.fcreainsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsenc.xnumpolinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsenc.xnumsininsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)

        '        cell = celldas("Tipo de ajuste:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("Nombre completo del asegurado:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        If vi_aipinsajusanex.isininsajusanex = True Then
        '            xvalor = " (X)Siniestro"
        '        Else
        '            xvalor = " ()Siniestro"
        '        End If
        '        If vi_aipinsajusanex.irecupinsajusanex = True Then
        '            xvalor2 = " (X)Recuperado"
        '        Else
        '            xvalor2 = " ()Recuperado"
        '        End If
        '        If vi_aipinsajusanex.itercinsajusanex = True Then
        '            xvalor3 = " (X)Tercero"
        '        Else
        '            xvalor3 = " ()Tercero"
        '        End If
        '        cell = celldas(xvalor & xvalor2 & xvalor3, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsajusanex.xnomaseginsajusanex, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)

        '        cell = celldas("Código del perito", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas("Nombre completo del perito", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsajusanex.idsegmanusu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)
        '        cell = celldas(vi_aipinsajusanex.xnombrecompleto, 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table1.AddCell(cell)

        '        Dim table3 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table3.SetWidths(New Integer() {70, 70, 70})
        '        table3.WidthPercentage = 100
        '        cell = celldas("Datos del vehiculo:", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        Dim vi_aipmanvehController As New vi_aipmanvehController
        '        Dim vi_aipmanveh As vi_aipmanveh = vi_aipmanvehController.selvi_aipmanvehxid(vi_aipinsajusanex.idaipmanveh)
        '        cell = celldas("Sucursal:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Marca:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Modelo", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipinsajusanex.xsucuinsajusanex, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xnommanvehmar, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xnommanvehmod, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)

        '        cell = celldas("Tipo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Año:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Color:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.itipomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        Dim aipmanvehverController As New aipmanvehverController
        '        Dim naniomanvehver As Decimal = aipmanvehverController.selnaniomanvehverxid(vi_aipmanveh.idaipmanvehver)
        '        cell = celldas(naniomanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.icolormanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)

        '        cell = celldas("Versión::", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Placa:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Serial de carrocería:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xnommanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xplacamanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xsercarrmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)

        '        cell = celldas("Serial del motor:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Tipo de transmisión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas("Kilometraje:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipmanveh.xsermotmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("ITIPOTRANSMANVEH")
        '        xvaloresdrescripcion = ""
        '        For i As Integer = 0 To lista_comunconfvalor.Count - 1
        '            If lista_comunconfvalor(i).xvalordescripcion <> "SELECCIONE..." Then
        '                xvalor = (" ()")
        '                If lista_comunconfvalor(i).xvalordescripcion = vi_aipmanveh.itipotransmanveh Then
        '                    xvalor = (" (X)")
        '                End If
        '                xvaloresdrescripcion = xvaloresdrescripcion & xvalor & " " & lista_comunconfvalor(i).xvalordescripcion & " "
        '            End If
        '        Next
        '        cell = celldas(xvaloresdrescripcion, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)
        '        cell = celldas(vi_aipinsajusanex.nkiloinsajusanex, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table3.AddCell(cell)



        '        Dim lista_vi_aipinsajusanexrepu As List(Of vi_aipinsajusanexrepu) = ObtenerRepuestosAjusteAnexo(vi_aipinsajusanex.idaipinsajusanex)
        '        Dim table4 As New iTextSharp.text.pdf.PdfPTable(4)
        '        table4.SetWidths(New Integer() {70, 70, 70, 70})
        '        table4.WidthPercentage = 100
        '        cell = celldas("Repuestos:", 59, 89, 152, 4, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        cell = celldas("Cantidad:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        cell = celldas("Repuesto:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        cell = celldas("Origen:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        cell = celldas("Precio:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table4.AddCell(cell)
        '        For i As Integer = 0 To lista_vi_aipinsajusanexrepu.Count - 1
        '            cell = celldas(lista_vi_aipinsajusanexrepu(i).ncantinsajusanexrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table4.AddCell(cell)
        '            cell = celldas(lista_vi_aipinsajusanexrepu(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table4.AddCell(cell)
        '            cell = celldas(lista_vi_aipinsajusanexrepu(i).iorigbarerepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table4.AddCell(cell)
        '            cell = celldas(formateardecimalymiles(lista_vi_aipinsajusanexrepu(i).nprecfininsajusanexrepu, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table4.AddCell(cell)
        '        Next

        '        Dim lista_vi_aipinsajusanexmobr As List(Of vi_aipinsajusanexmobr) = ObtenerMobrAjusteAnexo(vi_aipinsajusanex.idaipinsajusanex)
        '        Dim table5 As New iTextSharp.text.pdf.PdfPTable(6)
        '        table5.SetWidths(New Integer() {70, 70, 70, 70, 70, 70})
        '        table5.WidthPercentage = 100
        '        cell = celldas("Mano de Obra:", 59, 89, 152, 6, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Cantidad:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Repuesto:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Tamaño:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Material:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Mano obra:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        cell = celldas("Precio:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table5.AddCell(cell)
        '        For i As Integer = 0 To lista_vi_aipinsajusanexmobr.Count - 1
        '            cell = celldas(lista_vi_aipinsajusanexmobr(i).ncantinsajusanexmobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(lista_vi_aipinsajusanexmobr(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(lista_vi_aipinsajusanexmobr(i).itamapiezbaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(lista_vi_aipinsajusanexmobr(i).imaterpiezbaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(lista_vi_aipinsajusanexmobr(i).itipobaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '            cell = celldas(formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '            table5.AddCell(cell)
        '        Next


        '        Dim table6 As New iTextSharp.text.pdf.PdfPTable(3)
        '        table6.SetWidths(New Integer() {70, 70, 70})
        '        table6.WidthPercentage = 100
        '        cell = celldas("Detalle de limpieza:", 59, 89, 152, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)
        '        cell = celldas("Observaciones:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)
        '        cell = celldas(vi_aipinsajusanex.xdescinsajusanex, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
        '        table6.AddCell(cell)

        '        table1.SpacingBefore = 10
        '        doc.Add(table1)

        '        'table2.SpacingBefore = 10
        '        'doc.Add(table2)

        '        table3.SpacingBefore = 10
        '        doc.Add(table3)

        '        table4.SpacingBefore = 10
        '        doc.Add(table4)

        '        table5.SpacingBefore = 10
        '        doc.Add(table5)

        '        table6.SpacingBefore = 10
        '        doc.Add(table6)

        '        'table7.SpacingBefore = 10
        '        'doc.Add(table7)

        '        'table8.SpacingBefore = 10
        '        'doc.Add(table8)

        '        'table9.SpacingBefore = 10
        '        'doc.Add(table9)

        '        doc.Close()

        '        If File.Exists("C:\sitfxarchivos\sitfx20\prueba2.pdf") Then
        '            File.Delete("C:\sitfxarchivos\sitfx20\prueba2.pdf")
        '        End If
        '        Dim secuencia As Byte() = ms.ToArray()
        '        File.WriteAllBytes("C:\sitfxarchivos\sitfx20\prueba2.pdf", secuencia)

        '        'Return ms.ToArray()

        '        Dim DownloadFilesResult As New DownloadFilesResult
        '        DownloadFilesResult.ArchivoByte = ms.ToArray()
        '        DownloadFilesResult.Name = "ReporteInspeccionAjusteAnexo" & ".pdf"
        '        DownloadFilesResult.Type = "pdf"

        '        Return DownloadFilesResult
        '    Catch ex As Exception
        '        Dim DownloadFilesResult As New DownloadFilesResult
        '        DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
        '        DownloadFilesResult.Name = "ReporteInspeccionAjusteAnexo" & ".pdf"
        '        DownloadFilesResult.Type = "pdf"
        '        Return DownloadFilesResult
        '    End Try
        'End Function
        <HttpGet()> _
        Public Function ImprimirInspeccionAjusteAnexo(idaipinsajusanex As Decimal) As DownloadFilesResult
            Try

                Dim vi_aipinsajusanexController As New vi_aipinsajusanexController
                Dim vi_aipinsajusanex As vi_aipinsajusanex = vi_aipinsajusanexController.selvi_aipinsajusanexxid(idaipinsajusanex)

                Dim comunconfvalorController As New comunconfvalorController
                Dim lista_comunconfvalor As New List(Of comunconfvalor)


                Dim xvalor As String = " ()"
                Dim xvalor2 As String = " ()"
                Dim xvalor3 As String = " ()"
                Dim xvaloresdrescripcion As String = ""

                Dim ms As New MemoryStream
                Dim doc As New iTextSharp.text.Document(iTextSharp.text.PageSize.A4)
                Dim writer As iTextSharp.text.pdf.PdfWriter = iTextSharp.text.pdf.PdfWriter.GetInstance(doc, ms)
                'Dim ev As New itsEvents
                'writer.PageEvent = ev
                doc.Open()
                Dim table0 As New iTextSharp.text.pdf.PdfPTable(2)
                table0.SetWidths(New Integer() {100, 600})
                table0.WidthPercentage = 100
                Dim img1 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "logo_federal.png")
                img1.ScalePercent(100.0F)
                'img2.SetAbsolutePosition(300, 800)                
                img1.SpacingBefore = 60

                Dim cell2 As New iTextSharp.text.pdf.PdfPCell((img1))
                cell2.Colspan = 1
                cell2.Rowspan = 5
                cell2.HorizontalAlignment = 0 '0=Left, 1=Centre, 2=Right
                cell2.Border = 0
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas(" ", 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)
                cell2 = celldas("AJUESTE DE DAÑOS", 0, 0, 0, 1, 2, System.Drawing.Color.Black, 2, 10.0F, 0, 0, 0, 0)
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                table0.AddCell(cell2)


                Dim vi_aipinsencController As New vi_aipinsencController
                Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(vi_aipinsajusanex.idaipinsenc)
                Dim table1 As New iTextSharp.text.pdf.PdfPTable(5)
                table1.SetWidths(New Integer() {70, 70, 70, 70, 120})
                table1.WidthPercentage = 100
                Dim cell As New iTextSharp.text.pdf.PdfPCell
                cell = celldas("Fecha", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(" Ajuste:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas("Póliza Número", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas("Siniestro Número:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0.5, 0, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.fcreainsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0.5)
                table1.AddCell(cell)
                cell = celldas(" Inic.() Anexo(X)", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.xnumpolinsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)
                cell = celldas(" " & vi_aipinsenc.xnumsininsenc, 0, 0, 0, 1, 0, System.Drawing.Color.Black, 2, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, 1, 10.0F, 0, 0.5, 0.5, 0)
                'table1.AddCell(cell)
                If vi_aipinsajusanex.isininsajusanex = True Then
                    xvalor = "Siniestro[X] "
                Else
                    xvalor = "Siniestro[] "
                End If
                If vi_aipinsajusanex.irecupinsajusanex = True Then
                    xvalor2 = "Recuperado[X] "
                Else
                    xvalor2 = "Recuperado[] "
                End If
                If vi_aipinsajusanex.itercinsajusanex = True Then
                    xvalor3 = "Tercero[X] "
                Else
                    xvalor3 = "Tercero[] "
                End If
                cell = celldas(xvalor & xvalor2 & xvalor3, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table1.AddCell(cell)

                Dim table3 As New iTextSharp.text.pdf.PdfPTable(5)
                table3.SetWidths(New Integer() {70, 70, 70, 70, 70})
                table3.WidthPercentage = 100
                'cell = celldas("Datos del vehiculo:", 107, 104, 98, 3, 0, System.Drawing.Color.White, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                'table3.AddCell(cell)
                Dim vi_aipmanvehController As New vi_aipmanvehController
                Dim vi_aipmanveh As vi_aipmanveh = vi_aipmanvehController.selvi_aipmanvehxid(vi_aipinsajusanex.idaipmanveh)
                cell = celldas("Nombre y Apellido del Asegurado:", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Sucursal:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Marca:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipinsajusanex.xnomaseginsajusanex, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipinsajusanex.xsucuinsajusanex, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xnommanvehmar, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)

                cell = celldas("Modelo", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Tipo:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Año:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Color:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Versión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xnommanvehmod, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.itipomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                'Dim aipmanvehverController As New aipmanvehverController
                'Dim naniomanvehver As Decimal = aipmanvehverController.selnaniomanvehverxid(vi_aipmanveh.idaipmanvehver)
                cell = celldas(" " & vi_aipmanveh.naniomanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.icolormanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xnommanvehver, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)

                cell = celldas("Placa:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas("Serial de carrocería:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Serial del motor:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Transmisión:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas("Km.:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xplacamanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xsercarrmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipmanveh.xsermotmanveh, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("ITIPOTRANSMANVEH")
                xvaloresdrescripcion = ""
                For i As Integer = 0 To lista_comunconfvalor.Count - 1
                    If lista_comunconfvalor(i).xvalordescripcion <> "SELECCIONE..." Then
                        xvalor = ("()")
                        If lista_comunconfvalor(i).xvalordescripcion = vi_aipmanveh.itipotransmanveh Then
                            xvalor = ("(X)")
                        End If
                        xvaloresdrescripcion = xvaloresdrescripcion & lista_comunconfvalor(i).xvalordescripcion.Substring(0, 3) & "." & xvalor & " "
                    End If
                Next
                cell = celldas(" " & xvaloresdrescripcion, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)
                cell = celldas(" " & vi_aipinsajusanex.nkiloinsajusanex, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table3.AddCell(cell)


                Dim lista_vi_aipinsajusanexrepu As List(Of vi_aipinsajusanexrepu) = ObtenerRepuestosAjusteAnexo(vi_aipinsajusanex.idaipinsajusanex)
                Dim table4 As New iTextSharp.text.pdf.PdfPTable(6)
                Dim op As String = ""
                Dim tw As String = ""
                Dim n As String = ""

                table4.SetWidths(New Integer() {60, 250, 70, 70, 70, 70})
                table4.WidthPercentage = 100
                cell = celldas("Repuestos:", 0, 0, 0, 6, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table4.AddCell(cell)
                cell = celldas("Cantidad:", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table4.AddCell(cell)
                cell = celldas("DESCRIPCIÓN", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table4.AddCell(cell)
                cell = celldas("Precio:", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table4.AddCell(cell)
                cell = celldas("OP", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table4.AddCell(cell)
                cell = celldas("TW", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table4.AddCell(cell)
                cell = celldas("N", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table4.AddCell(cell)
                For i As Integer = 0 To lista_vi_aipinsajusanexrepu.Count - 1
                    op = ""
                    n = ""
                    tw = ""
                    Select Case lista_vi_aipinsajusanexrepu(i).iorigbarerepu
                        Case "TAIWANES"
                            tw = " X "
                        Case "EXTRANJERO"
                            op = " X "
                        Case "NACIONAL"
                            n = " X "
                    End Select
                    cell = celldas(lista_vi_aipinsajusanexrepu(i).ncantinsajusanexrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                    table4.AddCell(cell)
                    cell = celldas(lista_vi_aipinsajusanexrepu(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table4.AddCell(cell)
                    cell = celldas(formateardecimalymiles(lista_vi_aipinsajusanexrepu(i).nprecfininsajusanexrepu, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table4.AddCell(cell)
                    cell = celldas(" " & op, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table4.AddCell(cell)
                    cell = celldas(" " & tw, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table4.AddCell(cell)
                    cell = celldas(" " & n, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table4.AddCell(cell)
                Next
                Dim numero_row As Integer = 27
                If lista_vi_aipinsajusanexrepu.Count < numero_row Then
                    numero_row = numero_row - lista_vi_aipinsajusanexrepu.Count

                    For i As Integer = 0 To numero_row - 1
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                        table4.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table4.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table4.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table4.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table4.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table4.AddCell(cell)
                    Next
                End If

                Dim table4_2 As New iTextSharp.text.pdf.PdfPTable(4)
                table4_2.SetWidths(New Integer() {70, 70, 70, 70})
                table4_2.WidthPercentage = 100
                cell = celldas("ESPACIO DESTINADO PARA LA IMPRONTA:", 107, 104, 98, 4, 1, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table4_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 4, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0.5, 0.5)
                table4_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0.5)
                table4_2.AddCell(cell)
                cell = celldas("VER FOTO ANEXA:", 0, 0, 0, 2, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table4_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0)
                table4_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 4, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0.5)
                table4_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 4, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0.5, 0.5)
                table4_2.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 4, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table4_2.AddCell(cell)

                'Dim lista_vi_aipinsajusanexmobr As List(Of vi_aipinsajusanexmobr) = ObtenerMobrAjusteAnexo(vi_aipinsajusanex.idaipinsajusanex)
                Dim table5 As New iTextSharp.text.pdf.PdfPTable(7)
                table5.SetWidths(New Integer() {60, 250, 70, 70, 70, 50, 50})
                table5.WidthPercentage = 100
                cell = celldas("Mano de Obra:", 0, 0, 0, 7, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Cantidad:", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas("DESCRIPCIÓN", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table5.AddCell(cell)
                cell = celldas("PINTAR", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table5.AddCell(cell)
                cell = celldas("LAT", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table5.AddCell(cell)
                cell = celldas("PULIR", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table5.AddCell(cell)
                cell = celldas("REPAR.", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table5.AddCell(cell)
                cell = celldas("CAMB.", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                table5.AddCell(cell)
                'cell = celldas("Precio:", 107, 104, 98, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0)
                'table5.AddCell(cell)
                Dim xrepar As String = " "
                Dim xcambio As String = " "
                Dim ntotal_pint As Decimal = 0
                Dim ntotal_lato As Decimal = 0
                Dim ntotal_pulir As Decimal = 0
                Dim ntotal_meca As Decimal = 0
                Dim ntotal_alinea As Decimal = 0
                Dim ntotal_aire_acon As Decimal = 0
                Dim ntotal As Decimal = 0

                Dim xmonto_pintura As String = ""
                Dim xmonto_latoneria As String = ""
                Dim xmonto_pulir As String = ""

                Dim nmonto_latoneria = 0
                Dim nmonto_pintura = 0
                Dim nmonto_pulir = 0
                Dim lista_vi_aipinsajusanexmobragrup As List(Of vi_aipinsajusanexmobragrup) = ObtenerMobrAjusteAnexoAgrup(vi_aipinsajusanex.idaipinsajusanex)
                For i As Integer = 0 To lista_vi_aipinsajusanexmobragrup.Count - 1
                    cell = celldas(lista_vi_aipinsajusanexmobragrup(i).ncantinsajusanexmobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                    table5.AddCell(cell)
                    cell = celldas(lista_vi_aipinsajusanexmobragrup(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table5.AddCell(cell)
                    Dim lista_vi_aipinsajusanexmobr As List(Of vi_aipinsajusanexmobr) = ObtenerMobrAjusteAnexoXRepuesto(lista_vi_aipinsajusanexmobragrup(i).idaipinsajusanex, lista_vi_aipinsajusanexmobragrup(i).idaipinsenc, lista_vi_aipinsajusanexmobragrup(i).idaipmanrepu)
                    For j As Integer = 0 To lista_vi_aipinsajusanexmobr.Count - 1
                        ntotal = ntotal + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                        Select Case lista_vi_aipinsajusanexmobr(j).itipobaremobr
                            Case "PINTURA" 'si el origen es de pintura el monto va en pintura
                                Dim xnommanrepu As String = LCase(lista_vi_aipinsajusanexmobr(j).xnommanrepu)

                                If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                                    'xmonto_pintura = formateardecimalymiles(lista_vi_aipinsajussinmobr(i).nprecfininsajussinmobr, "es-VE")
                                    nmonto_pintura = nmonto_pintura + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                    ntotal_pint = ntotal_pint + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                Else
                                    Select Case xnommanrepu
                                        Case "alineación", "alineacion"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_alinea = ntotal_alinea + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                        Case "aire acondicionado"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                        Case "mecanica", "mecánica"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajussinmobr(j).nprecfininsajussinmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_meca = ntotal_meca + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                    End Select
                                End If

                            Case "LATONERIA" 'si el origen es de latoneria el monto va en latoneria
                                Dim xnommanrepu As String = LCase(lista_vi_aipinsajusanexmobr(j).xnommanrepu)

                                If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                                    'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                    nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                    ntotal_lato = ntotal_lato + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                Else
                                    Select Case xnommanrepu
                                        Case "alineación", "alineacion"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_alinea = ntotal_alinea + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                        Case "aire acondicionado"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                        Case "mecanica", "mecánica"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_meca = ntotal_meca + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                    End Select
                                End If

                            Case "PULIR" 'si el origen es de PULIR el monto va en pulir
                                Dim xnommanrepu As String = LCase(lista_vi_aipinsajusanexmobr(j).xnommanrepu)

                                If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                                    'xmonto_pulir = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                    nmonto_pulir = nmonto_pulir + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                    ntotal_pulir = ntotal_pulir + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                Else
                                    Select Case xnommanrepu
                                        Case "alineación", "alineacion"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_alinea = ntotal_alinea + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                        Case "aire acondicionado"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                        Case "mecanica", "mecánica"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_meca = ntotal_meca + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                    End Select
                                End If
                            Case "REPARAR" 'si el origen es de REPARAR el monto va en latoneria
                                xrepar = " X "

                                Dim xnommanrepu As String = LCase(lista_vi_aipinsajusanexmobr(j).xnommanrepu)
                                If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                                    'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                    nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                    ntotal_lato = ntotal_lato + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                Else
                                    Select Case xnommanrepu
                                        Case "alineación", "alineacion"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_alinea = ntotal_alinea + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                        Case "aire acondicionado"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                        Case "mecanica", "mecánica"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_meca = ntotal_meca + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                    End Select
                                End If

                            Case "CAMBIAR" 'si el origen es cambio el monto va en latoneria
                                xcambio = " X "

                                Dim xnommanrepu As String = LCase(lista_vi_aipinsajusanexmobr(j).xnommanrepu)
                                If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                                    'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                    nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                    ntotal_lato = ntotal_lato + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                Else
                                    Select Case xnommanrepu
                                        Case "alineación", "alineacion"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_alinea = ntotal_alinea + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                        Case "aire acondicionado"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                        Case "mecanica", "mecánica"
                                            'xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr, "es-VE")
                                            nmonto_latoneria = nmonto_latoneria + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                            ntotal_meca = ntotal_meca + lista_vi_aipinsajusanexmobr(j).nprecfininsajusanexmobr
                                    End Select
                                End If

                            Case Else
                                xmonto_pintura = ""
                                xmonto_latoneria = ""
                                xmonto_pulir = ""
                        End Select

                    Next
                    cell = celldas(formateardecimalymiles(nmonto_pintura, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table5.AddCell(cell)
                    cell = celldas(formateardecimalymiles(nmonto_latoneria, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table5.AddCell(cell)
                    cell = celldas(formateardecimalymiles(nmonto_pulir, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table5.AddCell(cell)

                    cell = celldas(xrepar, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table5.AddCell(cell)
                    cell = celldas(xcambio, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                    table5.AddCell(cell)

                    xmonto_pintura = " "
                    xmonto_latoneria = " "
                    xmonto_pulir = " "
                    xrepar = " "
                    xcambio = " "
                    nmonto_pintura = 0
                    nmonto_latoneria = 0
                    nmonto_pulir = 0
                Next


                'For i As Integer = 0 To lista_vi_aipinsajusanexmobr.Count - 1
                '    cell = celldas(lista_vi_aipinsajusanexmobr(i).ncantinsajusanexmobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                '    table5.AddCell(cell)
                '    cell = celldas(lista_vi_aipinsajusanexmobr(i).xnommanrepu, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    table5.AddCell(cell)

                '    xrepar = " "
                '    xcambio = " "
                '    ntotal = ntotal + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '    Select Case lista_vi_aipinsajusanexmobr(i).itipobaremobr
                '        Case "PINTURA" 'si el origen es de pintura el monto va en pintura
                '            'cell = celldas(formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            ' ntotal_pint = ntotal_pint + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr

                '            Dim xnommanrepu As String = LCase(lista_vi_aipinsajusanexmobr(i).xnommanrepu)

                '            If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                '                xmonto_pintura = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                xmonto_latoneria = ""
                '                xmonto_pulir = ""
                '                ntotal_pint = ntotal_pint + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '            Else
                '                Select Case xnommanrepu
                '                    Case "alineación", "alineacion"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_alinea = ntotal_alinea + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                    Case "aire acondicionado"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                    Case "mecanica", "mecánica"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_meca = ntotal_meca + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                End Select
                '            End If

                '        Case "LATONERIA" 'si el origen es de latoneria el monto va en latoneria
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'ntotal_lato = ntotal_lato + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr

                '            Dim xnommanrepu As String = LCase(lista_vi_aipinsajusanexmobr(i).xnommanrepu)

                '            If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                '                xmonto_pintura = ""
                '                xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                xmonto_pulir = ""
                '                ntotal_lato = ntotal_lato + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '            Else
                '                Select Case xnommanrepu
                '                    Case "alineación", "alineacion"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_alinea = ntotal_alinea + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                    Case "aire acondicionado"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                    Case "mecanica", "mecánica"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_meca = ntotal_meca + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                End Select
                '            End If

                '        Case "PULIR" 'si el origen es de PULIR el monto va en pulir
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'ntotal_pulir = ntotal_pulir + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr

                '            Dim xnommanrepu As String = LCase(lista_vi_aipinsajusanexmobr(i).xnommanrepu)

                '            If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                '                xmonto_pintura = ""
                '                xmonto_latoneria = ""
                '                xmonto_pulir = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                ntotal_pulir = ntotal_pulir + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '            Else
                '                Select Case xnommanrepu
                '                    Case "alineación", "alineacion"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_alinea = ntotal_alinea + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                    Case "aire acondicionado"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                    Case "mecanica", "mecánica"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_meca = ntotal_meca + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                End Select
                '            End If
                '        Case "REPARAR" 'si el origen es de REPARAR el monto va en latoneria
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'ntotal_lato = ntotal_lato + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '            xrepar = " X "

                '            Dim xnommanrepu As String = LCase(lista_vi_aipinsajusanexmobr(i).xnommanrepu)
                '            If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                '                xmonto_pintura = ""
                '                xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                xmonto_pulir = ""
                '                ntotal_lato = ntotal_lato + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '            Else
                '                Select Case xnommanrepu
                '                    Case "alineación", "alineacion"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_alinea = ntotal_alinea + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                    Case "aire acondicionado"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                    Case "mecanica", "mecánica"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_meca = ntotal_meca + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                End Select
                '            End If

                '        Case "CAMBIAR" 'si el origen es cambio el monto va en latoneria
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '            'table5.AddCell(cell)
                '            xcambio = " X "

                '            Dim xnommanrepu As String = LCase(lista_vi_aipinsajusanexmobr(i).xnommanrepu)

                '            'If LCase(lista_vi_aipinsajusanexmobr(i).xnommanrepu) = "alineación" Or LCase(lista_vi_aipinsajusanexmobr(i).xnommanrepu) = "alineacion" Then
                '            '    'si es cambio del tipo de repuesto alineacion el monto total es para alineacion
                '            '    ntotal_alinea = ntotal_alinea + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '            'Else
                '            '    If LCase(lista_vi_aipinsajusanexmobr(i).xnommanrepu) = "aire acondicionado" Then
                '            '        'si es cambio del tipo de repuesto aire acondicionado el monto total es para aire acondicionado
                '            '        ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '            '    Else
                '            '        If LCase(lista_vi_aipinsajusanexmobr(i).xnommanrepu) = "Mecanica" Then
                '            '            ' si no es ninguno de las anteriores es para mecanica
                '            '            ntotal_meca = ntotal_meca + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '            '        Else
                '            '            ntotal_lato = ntotal_lato + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '            '        End If
                '            '    End If
                '            'End If

                '            If xnommanrepu <> "alineación" And xnommanrepu <> "alineacion" And xnommanrepu <> "aire acondicionado" And xnommanrepu <> "mecanica" Then
                '                xmonto_pintura = ""
                '                xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                xmonto_pulir = ""
                '                ntotal_lato = ntotal_lato + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '            Else
                '                Select Case xnommanrepu
                '                    Case "alineación", "alineacion"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_alinea = ntotal_alinea + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                    Case "aire acondicionado"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_aire_acon = ntotal_aire_acon + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                    Case "mecanica", "mecánica"
                '                        xmonto_pintura = ""
                '                        xmonto_latoneria = formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE")
                '                        xmonto_pulir = ""
                '                        ntotal_meca = ntotal_meca + lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr
                '                End Select
                '            End If

                '        Case Else
                '            xmonto_pintura = ""
                '            xmonto_latoneria = ""
                '            xmonto_pulir = ""
                '    End Select

                '    cell = celldas(xmonto_pintura, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    table5.AddCell(cell)
                '    cell = celldas(xmonto_latoneria, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    table5.AddCell(cell)
                '    cell = celldas(xmonto_pulir, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    table5.AddCell(cell)

                '    cell = celldas(xrepar, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    table5.AddCell(cell)
                '    cell = celldas(xcambio, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    table5.AddCell(cell)


                '    'cell = celldas(lista_vi_aipinsajusanexmobr(i).itamapiezbaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    'table5.AddCell(cell)
                '    'cell = celldas(lista_vi_aipinsajusanexmobr(i).imaterpiezbaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    'table5.AddCell(cell)
                '    'cell = celldas(lista_vi_aipinsajusanexmobr(i).itipobaremobr, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    'table5.AddCell(cell)

                '    'cell = celldas(formateardecimalymiles(lista_vi_aipinsajusanexmobr(i).nprecfininsajusanexmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                '    'table5.AddCell(cell)
                'Next
                numero_row = 17
                If lista_vi_aipinsajusanexrepu.Count < numero_row Then
                    numero_row = numero_row - lista_vi_aipinsajusanexmobragrup.Count

                    For i As Integer = 0 To numero_row - 1
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                        table5.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table5.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table5.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table5.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table5.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table5.AddCell(cell)
                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                        table5.AddCell(cell)
                    Next
                End If

                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Descuento%: ", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas("0,00", 0, 0, 0, 1, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                cell = celldas("", 0, 0, 0, 1, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)

                'cell = celldas(formateardecimalymiles(lista_vi_aipinsajusanexmobr(0).nprecfininsajusanexmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                'table5.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                'table5.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                'table5.AddCell(cell)
                Dim img3 As iTextSharp.text.Image = iTextSharp.text.Image.GetInstance(ConfigurationManager.AppSettings("xruta") & "carrito.png")
                img3.ScalePercent(80.0F)
                img3.Rotation = 80.125
                img3.SpacingBefore = 60
                cell2 = New iTextSharp.text.pdf.PdfPCell((img3))
                cell2.Colspan = 2
                cell2.Rowspan = 17
                cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                cell2.Border = 0
                cell2.BorderWidthRight = 0
                table5.AddCell(cell2)

                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Total Repuestos: ", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas("0,00", 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                'cell = celldas("", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                'table5.AddCell(cell)
                'cell = celldas(formateardecimalymiles(lista_vi_aipinsajusanexmobr(0).nprecfininsajusanexmobr, "es-VE"), 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                'table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 4, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Pintura:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal_pint, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Latoneria:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal_lato, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Mecánica:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal_meca, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Alineación:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal_alinea, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Aire Acondicionado:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal_aire_acon, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Electricidad:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Chasis/Compacto:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Instalaciones:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Cromado:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("% Desgaste y Depreción:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("Total Desgaste y Depreción Mecánica:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 8.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("TOTAL MANO DE OBRA:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal_meca + ntotal_alinea + ntotal_aire_acon, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas(" Repuestos + Mano de Obra:", 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '

                lista_comunconfvalor = comunconfvalorController.selcomunconfvalorxconcepto("IVAVENEZUELA")
                Dim niva As Decimal = 0
                If lista_comunconfvalor.Count > 0 Then
                    If IsNumeric(lista_comunconfvalor(1).xvalorcodigo) Then
                        niva = lista_comunconfvalor(1).xvalorcodigo
                    End If
                End If

                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("IVA: " & formateardecimalymiles(niva, "es-VE"), 0, 0, 0, 2, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                Dim nmonto_iva As Decimal = ((niva / 100) * ntotal)
                Dim ntotal_mas_iva As Decimal = nmonto_iva + ntotal
                cell = celldas(formateardecimalymiles(nmonto_iva, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table5.AddCell(cell)
                cell = celldas("TOTAL AJUSTE:", 0, 0, 0, 2, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table5.AddCell(cell)
                cell = celldas(formateardecimalymiles(ntotal_mas_iva, "es-VE"), 0, 0, 0, 2, 2, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0)
                table5.AddCell(cell)
                '

                'numero_row = 15
                'For i As Integer = 0 To numero_row - 1
                'If i = 0 Then
                'Else
                '    cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                '    table5.AddCell(cell)
                '    cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                '    table5.AddCell(cell)
                'End If
                ' Next


                Dim table6 As New iTextSharp.text.pdf.PdfPTable(3)
                table6.SetWidths(New Integer() {70, 70, 70})
                table6.WidthPercentage = 100
                cell = celldas("Observaciones:", 0, 0, 0, 3, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table6.AddCell(cell)
                cell = celldas(" " & vi_aipinsajusanex.xdescinsajusanex, 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                table6.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)
                'cell = celldas(" ", 0, 0, 0, 3, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0.5, 0.5, 0.5)
                'table6.AddCell(cell)


                Dim table7 As New iTextSharp.text.pdf.PdfPTable(5)
                table7.SetWidths(New Integer() {30, 150, 70, 30, 100})
                table7.WidthPercentage = 100
                cell = celldas("Código:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0.5)
                table7.AddCell(cell)
                cell = celldas("Nombre y Apellido del Perito:", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table7.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table7.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table7.AddCell(cell)


                cell = celldas(" " & vi_aipinsajusanex.idsegmanusuperit, 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0.5)
                table7.AddCell(cell)
                cell = celldas(" " & vi_aipinsajusanex.xnombrecompleto, 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 9.0F, 0, 0.5, 0.5, 0)
                table7.AddCell(cell)
                cell = celldas("Firma del Perito ", 0, 0, 0, 1, 1, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                table7.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0, 0, 0, 0)
                table7.AddCell(cell)
                cell = celldas("Firma del jefe de Peritos ", 0, 0, 0, 1, 0, System.Drawing.Color.Black, -1, 10.0F, 0.5, 0, 0, 0)
                table7.AddCell(cell)


                'tabla de las imagenes
                Dim tableimg As New iTextSharp.text.pdf.PdfPTable(1)
                tableimg.SetWidths(New Integer() {350})
                tableimg.WidthPercentage = 100
                'cell = celldas("FOTOS ADJUNTAS", 107, 104, 98, 1, 1, System.Drawing.Color.Black, -1, 9.0F, 0.5, 0.5, 0.5, 0.5)
                'tableimg.AddCell(cell)
                cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                tableimg.AddCell(cell)
                Dim vi_aipinsfotoController As New vi_aipinsfotoController
                Dim lista_vi_aipinsfoto As List(Of vi_aipinsfoto) = vi_aipinsfotoController.selvi_aipinsfotoxidaipinsenc(vi_aipinsenc.idaipinsenc)
                If lista_vi_aipinsfoto.Count > 0 Then
                    Dim xrutatipoenc As String = ""

                    Dim img As iTextSharp.text.Image

                    Select Case vi_aipinsenc.itipoinsenc
                        Case "SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\suscripcion\ok\"
                        Case "SINIESTRO"
                            xrutatipoenc = "fotosmovil\siniestro\ok\"
                        Case "RESTOS Y SALVAMENTO"
                            xrutatipoenc = "fotosmovil\restos_salvamento\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SUSCRIPCION"
                            xrutatipoenc = "fotosmovil\limpieza_siniestro\ok\"
                        Case "LIMPIEZA DE DAÑOS POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\limpieza_suscripcion\ok\"
                        Case "AJUSTES POR SINIESTRO"
                            xrutatipoenc = "fotosmovil\ajustes_sinientro\ok\"
                        Case "AJUSTES POR ANEXO"
                            xrutatipoenc = "fotosmovil\ajustes_anexo\ok\"
                    End Select
                    Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
                    Dim xruta As String = ""
                    For i As Integer = 0 To lista_vi_aipinsfoto.Count - 1
                        xruta = xrutaraiz & xrutatipoenc & lista_vi_aipinsfoto(i).xnomarchinsfoto
                        img = iTextSharp.text.Image.GetInstance(xruta)

                        img.ScalePercent(80.0F)
                        img.SpacingBefore = 30

                        cell2 = New iTextSharp.text.pdf.PdfPCell((img))
                        cell2.Colspan = 1
                        cell2.HorizontalAlignment = 1 '0=Left, 1=Centre, 2=Right
                        cell2.Border = 0
                        cell2.BorderWidthRight = 0
                        tableimg.AddCell(cell2)

                        cell = celldas(" ", 0, 0, 0, 1, 0, System.Drawing.Color.White, -1, 9.0F, 0, 0, 0, 0)
                        tableimg.AddCell(cell)
                    Next
                End If
                'fin tabla imagenes

                table0.SpacingBefore = 10
                doc.Add(table0)

                table1.SpacingBefore = 10
                doc.Add(table1)

                'table2.SpacingBefore = 10
                'doc.Add(table2)

                table3.SpacingBefore = 10
                doc.Add(table3)

                table4.SpacingBefore = 10
                doc.Add(table4)

                table4_2.SpacingBefore = 3
                doc.Add(table4_2)

                table5.SpacingBefore = 40
                doc.Add(table5)

                table6.SpacingBefore = 10
                doc.Add(table6)

                table7.SpacingBefore = 10
                doc.Add(table7)

                tableimg.SpacingBefore = 60
                doc.Add(tableimg)
                'table7.SpacingBefore = 10
                'doc.Add(table7)

                'table8.SpacingBefore = 10
                'doc.Add(table8)

                'table9.SpacingBefore = 10
                'doc.Add(table9)

                doc.Close()

                'If File.Exists("C:\sitfxarchivos\sitfx20\prueba2.pdf") Then
                '    File.Delete("C:\sitfxarchivos\sitfx20\prueba2.pdf")
                'End If
                'Dim secuencia As Byte() = ms.ToArray()
                'File.WriteAllBytes("C:\sitfxarchivos\sitfx20\prueba2.pdf", secuencia)

                'Return ms.ToArray()

                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = ms.ToArray()
                DownloadFilesResult.Name = "ReporteInspeccionAjusteAnexo" & ".pdf"
                DownloadFilesResult.Type = "pdf"

                Return DownloadFilesResult
            Catch ex As Exception
                Dim DownloadFilesResult As New DownloadFilesResult
                DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                DownloadFilesResult.Name = "ReporteInspeccionAjusteAnexo" & ".pdf"
                DownloadFilesResult.Type = "pdf"
                Return DownloadFilesResult
            End Try
        End Function

        <HttpPost()> _
        Public Function AgregarMobrLimpiezaSiniestro(idaipmanrepu As Decimal, itipobaremobr As String, itamapiezbaremobr As String, imaterpiezbaremobr As String, aipinslimsinmobr As aipinslimsinmobr) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "directo"
                param1.ParameterName = "p_illamada"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = aipinslimsinmobr.idaipinslimsinmobr
                param8.ParameterName = "p_idaipinslimsinmobr"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = aipinslimsinmobr.idaipinslimsin
                param9.ParameterName = "p_idaipinslimsin"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = aipinslimsinmobr.idaipbaremobr
                param10.ParameterName = "p_idaipbaremobr"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.SmallInt
                param11.Value = aipinslimsinmobr.ncantinslimsinmobr
                param11.ParameterName = "p_ncantinslimsinmobr"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.Decimal
                param12.Precision = 18
                param12.Scale = 2
                param12.Value = aipinslimsinmobr.nprecfininslimsinmobr
                param12.ParameterName = "p_nprecfininslimsinmobr"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.VarChar
                param13.Size = 500
                If aipinslimsinmobr.xdescinslimsinmobr IsNot Nothing Then
                    param13.Value = aipinslimsinmobr.xdescinslimsinmobr
                Else
                    param13.Value = ""
                End If
                param13.ParameterName = "p_xdescinslimsinmobr"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 20
                If aipinslimsinmobr.iestatinslimsinmobr IsNot Nothing Then
                    param14.Value = aipinslimsinmobr.iestatinslimsinmobr
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_iestatinslimsinmobr"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.Decimal
                param15.Precision = 18
                param15.Scale = 0
                param15.Value = aipinslimsinmobr.idseglogreg
                param15.ParameterName = "p_idseglogreg"

                'campos para verificar si el baremo existe
                Dim param16 As New SqlClient.SqlParameter
                param16.SqlDbType = SqlDbType.Decimal
                param16.Precision = 18
                param16.Scale = 0
                param16.Value = idaipmanrepu
                param16.ParameterName = "p_idaipmanrepu"

                Dim param17 As New SqlClient.SqlParameter
                param17.SqlDbType = SqlDbType.VarChar
                param17.Size = 50
                If itipobaremobr IsNot Nothing Then
                    param17.Value = itipobaremobr
                Else
                    param17.Value = ""
                End If
                param17.ParameterName = "p_itipobaremobr"

                Dim param18 As New SqlClient.SqlParameter
                param18.SqlDbType = SqlDbType.VarChar
                param18.Size = 50
                If itamapiezbaremobr IsNot Nothing Then
                    param18.Value = itamapiezbaremobr
                Else
                    param18.Value = ""
                End If
                param18.ParameterName = "p_itamapiezbaremobr"

                Dim param19 As New SqlClient.SqlParameter
                param19.SqlDbType = SqlDbType.VarChar
                param19.Size = 50
                If imaterpiezbaremobr IsNot Nothing Then
                    param19.Value = imaterpiezbaremobr
                Else
                    param19.Value = ""
                End If
                param19.ParameterName = "p_imaterpiezbaremobr"


                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_rnagregaraipinslimsinmobr @p_illamada,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinslimsinmobr output,@p_idaipinslimsin,@p_idaipbaremobr,@p_ncantinslimsinmobr,@p_nprecfininslimsinmobr,@p_xdescinslimsinmobr,@p_iestatinslimsinmobr,@p_idseglogreg,@p_idaipmanrepu,@p_itipobaremobr,@p_itamapiezbaremobr,@p_imaterpiezbaremobr", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AgregarMobrLimpiezaSiniestro ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function AgregarMobrLimpiezaSuscripcion(idaipmanrepu As Decimal, itipobaremobr As String, itamapiezbaremobr As String, imaterpiezbaremobr As String, aipinslimsusmobr As aipinslimsusmobr) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "directo"
                param1.ParameterName = "p_illamada"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = aipinslimsusmobr.idaipinslimsusmobr
                param8.ParameterName = "p_idaipinslimsusmobr"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = aipinslimsusmobr.idaipinslimsus
                param9.ParameterName = "p_idaipinslimsus"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = aipinslimsusmobr.idaipbaremobr
                param10.ParameterName = "p_idaipbaremobr"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.SmallInt
                param11.Value = aipinslimsusmobr.ncantinslimsusmobr
                param11.ParameterName = "p_ncantinslimsusmobr"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.Decimal
                param12.Precision = 18
                param12.Scale = 2
                param12.Value = aipinslimsusmobr.nprecfininslimsusmobr
                param12.ParameterName = "p_nprecfininslimsusmobr"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.VarChar
                param13.Size = 500
                If aipinslimsusmobr.xdescinslimsusmobr IsNot Nothing Then
                    param13.Value = aipinslimsusmobr.xdescinslimsusmobr
                Else
                    param13.Value = ""
                End If
                param13.ParameterName = "p_xdescinslimsusmobr"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 20
                If aipinslimsusmobr.iestatinslimsusmobr IsNot Nothing Then
                    param14.Value = aipinslimsusmobr.iestatinslimsusmobr
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_iestatinslimsusmobr"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.Decimal
                param15.Precision = 18
                param15.Scale = 0
                param15.Value = aipinslimsusmobr.idseglogreg
                param15.ParameterName = "p_idseglogreg"

                'campos para verificar si el baremo existe
                Dim param16 As New SqlClient.SqlParameter
                param16.SqlDbType = SqlDbType.Decimal
                param16.Precision = 18
                param16.Scale = 0
                param16.Value = idaipmanrepu
                param16.ParameterName = "p_idaipmanrepu"

                Dim param17 As New SqlClient.SqlParameter
                param17.SqlDbType = SqlDbType.VarChar
                param17.Size = 50
                If itipobaremobr IsNot Nothing Then
                    param17.Value = itipobaremobr
                Else
                    param17.Value = ""
                End If
                param17.ParameterName = "p_itipobaremobr"

                Dim param18 As New SqlClient.SqlParameter
                param18.SqlDbType = SqlDbType.VarChar
                param18.Size = 50
                If itamapiezbaremobr IsNot Nothing Then
                    param18.Value = itamapiezbaremobr
                Else
                    param18.Value = ""
                End If
                param18.ParameterName = "p_itamapiezbaremobr"

                Dim param19 As New SqlClient.SqlParameter
                param19.SqlDbType = SqlDbType.VarChar
                param19.Size = 50
                If imaterpiezbaremobr IsNot Nothing Then
                    param19.Value = imaterpiezbaremobr
                Else
                    param19.Value = ""
                End If
                param19.ParameterName = "p_imaterpiezbaremobr"


                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_rnagregaraipinslimsusmobr @p_illamada,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinslimsusmobr output,@p_idaipinslimsus,@p_idaipbaremobr,@p_ncantinslimsusmobr,@p_nprecfininslimsusmobr,@p_xdescinslimsusmobr,@p_iestatinslimsusmobr,@p_idseglogreg,@p_idaipmanrepu,@p_itipobaremobr,@p_itamapiezbaremobr,@p_imaterpiezbaremobr", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AgregarMobrLimpiezaSuscripcion ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function AgregarMobrAjusteAnexo(idaipmanrepu As Decimal, itipobaremobr As String, itamapiezbaremobr As String, imaterpiezbaremobr As String, aipinsajusanexmobr As aipinsajusanexmobr) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "directo"
                param1.ParameterName = "p_illamada"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = aipinsajusanexmobr.idaipinsajusanexmobr
                param8.ParameterName = "p_idaipinsajusanexmobr"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = aipinsajusanexmobr.idaipinsajusanex
                param9.ParameterName = "p_idaipinsajusanex"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = aipinsajusanexmobr.idaipbaremobr
                param10.ParameterName = "p_idaipbaremobr"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.SmallInt
                param11.Value = aipinsajusanexmobr.ncantinsajusanexmobr
                param11.ParameterName = "p_ncantinsajusanexmobr"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.Decimal
                param12.Precision = 18
                param12.Scale = 2
                param12.Value = aipinsajusanexmobr.nprecfininsajusanexmobr
                param12.ParameterName = "p_nprecfininsajusanexmobr"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.VarChar
                param13.Size = 500
                If aipinsajusanexmobr.xdescinsajusanexmobr IsNot Nothing Then
                    param13.Value = aipinsajusanexmobr.xdescinsajusanexmobr
                Else
                    param13.Value = ""
                End If
                param13.ParameterName = "p_xdescinsajusanexmobr"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 20
                If aipinsajusanexmobr.iestatinsajusanexmobr IsNot Nothing Then
                    param14.Value = aipinsajusanexmobr.iestatinsajusanexmobr
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_iestatinsajusanexmobr"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.Decimal
                param15.Precision = 18
                param15.Scale = 0
                param15.Value = aipinsajusanexmobr.idseglogreg
                param15.ParameterName = "p_idseglogreg"

                'campos para verificar si el baremo existe
                Dim param16 As New SqlClient.SqlParameter
                param16.SqlDbType = SqlDbType.Decimal
                param16.Precision = 18
                param16.Scale = 0
                param16.Value = idaipmanrepu
                param16.ParameterName = "p_idaipmanrepu"

                Dim param17 As New SqlClient.SqlParameter
                param17.SqlDbType = SqlDbType.VarChar
                param17.Size = 50
                If itipobaremobr IsNot Nothing Then
                    param17.Value = itipobaremobr
                Else
                    param17.Value = ""
                End If
                param17.ParameterName = "p_itipobaremobr"

                Dim param18 As New SqlClient.SqlParameter
                param18.SqlDbType = SqlDbType.VarChar
                param18.Size = 50
                If itamapiezbaremobr IsNot Nothing Then
                    param18.Value = itamapiezbaremobr
                Else
                    param18.Value = ""
                End If
                param18.ParameterName = "p_itamapiezbaremobr"

                Dim param19 As New SqlClient.SqlParameter
                param19.SqlDbType = SqlDbType.VarChar
                param19.Size = 50
                If imaterpiezbaremobr IsNot Nothing Then
                    param19.Value = imaterpiezbaremobr
                Else
                    param19.Value = ""
                End If
                param19.ParameterName = "p_imaterpiezbaremobr"


                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_rnagregaraipinsajusanexmobr @p_illamada,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinsajusanexmobr output,@p_idaipinsajusanex,@p_idaipbaremobr,@p_ncantinsajusanexmobr,@p_nprecfininsajusanexmobr,@p_xdescinsajusanexmobr,@p_iestatinsajusanexmobr,@p_idseglogreg,@p_idaipmanrepu,@p_itipobaremobr,@p_itamapiezbaremobr,@p_imaterpiezbaremobr", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AgregarMobrAjusteAnexo ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function AgregarMobrAjusteSiniestro(idaipmanrepu As Decimal, itipobaremobr As String, itamapiezbaremobr As String, imaterpiezbaremobr As String, aipinsajussinmobr As aipinsajussinmobr) As respopera
            Try

                Dim param1 As New SqlClient.SqlParameter
                param1.SqlDbType = SqlDbType.VarChar
                param1.Size = 20
                param1.Value = "directo"
                param1.ParameterName = "p_illamada"

                Dim param2 As New SqlClient.SqlParameter
                param2.SqlDbType = SqlDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New SqlClient.SqlParameter
                param3.SqlDbType = SqlDbType.VarChar
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.SqlDbType = SqlDbType.VarChar
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New SqlClient.SqlParameter
                param5.SqlDbType = SqlDbType.VarChar
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New SqlClient.SqlParameter
                param6.SqlDbType = SqlDbType.VarChar
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New SqlClient.SqlParameter
                param7.SqlDbType = SqlDbType.VarChar
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New SqlClient.SqlParameter
                param8.SqlDbType = SqlDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = aipinsajussinmobr.idaipinsajussinmobr
                param8.ParameterName = "p_idaipinsajussinmobr"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New SqlClient.SqlParameter
                param9.SqlDbType = SqlDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = aipinsajussinmobr.idaipinsajussin
                param9.ParameterName = "p_idaipinsajussin"

                Dim param10 As New SqlClient.SqlParameter
                param10.SqlDbType = SqlDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                param10.Value = aipinsajussinmobr.idaipbaremobr
                param10.ParameterName = "p_idaipbaremobr"

                Dim param11 As New SqlClient.SqlParameter
                param11.SqlDbType = SqlDbType.SmallInt
                param11.Value = aipinsajussinmobr.ncantinsajussinmobr
                param11.ParameterName = "p_ncantinsajussinmobr"

                Dim param12 As New SqlClient.SqlParameter
                param12.SqlDbType = SqlDbType.Decimal
                param12.Precision = 18
                param12.Scale = 2
                param12.Value = aipinsajussinmobr.nprecfininsajussinmobr
                param12.ParameterName = "p_nprecfininsajussinmobr"

                Dim param13 As New SqlClient.SqlParameter
                param13.SqlDbType = SqlDbType.VarChar
                param13.Size = 500
                If aipinsajussinmobr.xdescinsajussinmobr IsNot Nothing Then
                    param13.Value = aipinsajussinmobr.xdescinsajussinmobr
                Else
                    param13.Value = ""
                End If
                param13.ParameterName = "p_xdescinsajussinmobr"

                Dim param14 As New SqlClient.SqlParameter
                param14.SqlDbType = SqlDbType.VarChar
                param14.Size = 20
                If aipinsajussinmobr.iestatinsajussinmobr IsNot Nothing Then
                    param14.Value = aipinsajussinmobr.iestatinsajussinmobr
                Else
                    param14.Value = ""
                End If
                param14.ParameterName = "p_iestatinsajussinmobr"

                Dim param15 As New SqlClient.SqlParameter
                param15.SqlDbType = SqlDbType.Decimal
                param15.Precision = 18
                param15.Scale = 0
                param15.Value = aipinsajussinmobr.idseglogreg
                param15.ParameterName = "p_idseglogreg"

                'campos para verificar si el baremo existe
                Dim param16 As New SqlClient.SqlParameter
                param16.SqlDbType = SqlDbType.Decimal
                param16.Precision = 18
                param16.Scale = 0
                param16.Value = idaipmanrepu
                param16.ParameterName = "p_idaipmanrepu"

                Dim param17 As New SqlClient.SqlParameter
                param17.SqlDbType = SqlDbType.VarChar
                param17.Size = 50
                If itipobaremobr IsNot Nothing Then
                    param17.Value = itipobaremobr
                Else
                    param17.Value = ""
                End If
                param17.ParameterName = "p_itipobaremobr"

                Dim param18 As New SqlClient.SqlParameter
                param18.SqlDbType = SqlDbType.VarChar
                param18.Size = 50
                If itamapiezbaremobr IsNot Nothing Then
                    param18.Value = itamapiezbaremobr
                Else
                    param18.Value = ""
                End If
                param18.ParameterName = "p_itamapiezbaremobr"

                Dim param19 As New SqlClient.SqlParameter
                param19.SqlDbType = SqlDbType.VarChar
                param19.Size = 50
                If imaterpiezbaremobr IsNot Nothing Then
                    param19.Value = imaterpiezbaremobr
                Else
                    param19.Value = ""
                End If
                param19.ParameterName = "p_imaterpiezbaremobr"


                Dim f As Integer = _db.ExecuteStoreCommand("exec sp_rnagregaraipinsajussinmobr @p_illamada,@p_idsegmanusulog,@p_xnombrecortolog,@p_irespuesta output,@p_xmsjusuario output,@p_xmsjtecnico output,@p_coderrorlog output,@p_idaipinsajussinmobr output,@p_idaipinsajussin,@p_idaipbaremobr,@p_ncantinsajussinmobr,@p_nprecfininsajussinmobr,@p_xdescinsajussinmobr,@p_iestatinsajussinmobr,@p_idseglogreg,@p_idaipmanrepu,@p_itipobaremobr,@p_itamapiezbaremobr,@p_imaterpiezbaremobr", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value
                respopera.xmsjusuario = param5.Value
                respopera.xmsjtecnico = param6.Value
                If IsNumeric(param8.Value) = True Then
                    respopera.id = Int(param8.Value)
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:AgregarMobrAjusteSiniestro ", ex)
                Return respopera
            End Try
        End Function


        <HttpPost()> _
        Public Function GuardarInspeccionActividad(vi_aipinsenc As vi_aipinsenc) As respopera
            Dim respopera As New respopera
            Try

                Dim aipinsencController As New aipinsencController

                Dim iexisteext As Boolean = aipinsencController.iexisteaipinsencxidext(vi_aipinsenc.idaipinsintext)
                If iexisteext <> True Then
                    Dim aipactivperiController As New aipactivperiController
                    Dim aipactivperi As New aipactivperi

                    If (vi_aipinsenc.idcomunmancont = 0) Then
                        vi_aipinsenc.idcomunmancont = 1
                    End If

                    If (vi_aipinsenc.idcomunmanpais = 0) Then
                        vi_aipinsenc.idcomunmanpais = 9
                    End If

                    Using tran1 As New TransactionScope

                        aipactivperi.idaipactivperi = 0

                        aipactivperi.idcomunmancont = vi_aipinsenc.idcomunmancont
                        aipactivperi.idcomunmanpais = vi_aipinsenc.idcomunmanpais
                        aipactivperi.idcomunmanestado = vi_aipinsenc.idcomunmanestado
                        aipactivperi.idcomunmanlocalid = vi_aipinsenc.idcomunmanlocalid
                        aipactivperi.fejecactivperi = vi_aipinsenc.fejecactivperi
                        aipactivperi.ffinejecactivperi = vi_aipinsenc.ffinejecactivperi
                        aipactivperi.xdireccionactivperi = vi_aipinsenc.xdireccionactivperi
                        aipactivperi.xtelfmovilactivperi = vi_aipinsenc.xtelfmovilactivperi
                        aipactivperi.xnomcliactivperi = vi_aipinsenc.xnomcliactivperi
                        aipactivperi.xcorreoelectronicoactivperi = vi_aipinsenc.xcorreoelectronicoactivperi
                        aipactivperi.xtituactivperi = vi_aipinsenc.xtituactivperi
                        aipactivperi.xdescactivperi = vi_aipinsenc.xdescactivperi
                        aipactivperi.ialcanactivperi = vi_aipinsenc.ialcanactivperi
                        aipactivperi.iestatactivperi = "PENDIENTE"
                        aipactivperi.idsegmanusucrea = vi_aipinsenc.idsegmanusucrea
                        aipactivperi.fcrearegactivperi = DateTime.Now
                        aipactivperi.idseglogreg = 0


                        respopera = aipactivperiController.insaipactivperi(aipactivperi)
                        If (respopera.irespuesta = "1") Then

                            aipactivperi.idaipactivperi = respopera.id

                            ''************************************************************************************************************************
                            ''se debe agregar aqui el registro a la intermediacion esto para poder asi realacionar la inspeccion con el sistemas de externo
                            ''************************************************************************************************************************
                            Dim ncotizacion As Integer = 0
                            If vi_aipinsenc.idaipinsintext <= 0 Then
                                respopera = CrearIntermediacionExterna(vi_aipinsenc.idaipinsintext, vi_aipinsenc.xnumsininsenc, vi_aipinsenc.xplacinsenc, vi_aipinsenc.xsermotinsenc, "R", vi_aipinsenc.idsegmanusuperit, ncotizacion, vi_aipinsenc.itipoinsenc, vi_aipinsenc.idsegmanorgperit)
                            Else
                                respopera = ModificarEstatusIntermediacionExterna(vi_aipinsenc.idaipinsintext, "R", vi_aipinsenc.idsegmanusuperit, vi_aipinsenc.xcedulaperit) 'manda es la cedula del perito que es el codigo en el sir
                            End If


                            If (respopera.irespuesta = "1") Then

                                If vi_aipinsenc.idaipinsintext <= 0 Then
                                    vi_aipinsenc.idaipinsintext = respopera.id
                                End If

                                Dim aipinsenc As New aipinsenc
                                aipinsenc.idaipinsenc = 0
                                aipinsenc.idaipinsintext = vi_aipinsenc.idaipinsintext ''se debe crear la intermediacion externa para guardar su id y asi poder saber cual es el caso
                                aipinsenc.idaipinsmotiv = vi_aipinsenc.idaipinsmotiv
                                aipinsenc.idaipactivperi = aipactivperi.idaipactivperi
                                aipinsenc.itipoinsenc = vi_aipinsenc.itipoinsenc
                                aipinsenc.itipoperitinsenc = "EXTERNA"
                                aipinsenc.iorigeninsenc = vi_aipinsenc.iorigeninsenc
                                aipinsenc.idsegmanusuperit = vi_aipinsenc.idsegmanusuperit
                                aipinsenc.idsegmanusuaudit = vi_aipinsenc.idsegmanusuperit
                                aipinsenc.xcedpropinsenc = vi_aipinsenc.xcedpropinsenc
                                aipinsenc.xcedsidoinsenc = vi_aipinsenc.xcedsidoinsenc
                                aipinsenc.xplacinsenc = vi_aipinsenc.xplacinsenc
                                aipinsenc.xsermotinsenc = vi_aipinsenc.xsermotinsenc
                                aipinsenc.xsercarrinsenc = vi_aipinsenc.xsercarrinsenc
                                aipinsenc.xnumpolinsenc = vi_aipinsenc.xnumpolinsenc
                                aipinsenc.xnumsininsenc = vi_aipinsenc.xnumsininsenc
                                aipinsenc.xnomprodinsenc = vi_aipinsenc.xnomprodinsenc
                                aipinsenc.xnomprodtorinsenc = vi_aipinsenc.xnomprodtorinsenc
                                aipinsenc.xnomramopolizinsenc = vi_aipinsenc.xnomramopolizinsenc
                                aipinsenc.xnomsucinsinsenc = vi_aipinsenc.xnomsucinsinsenc
                                aipinsenc.xllavinsenc = ""
                                aipinsenc.fcreainsenc = DateTime.Now
                                aipinsenc.fprocinsenc = New DateTime(1900, 1, 1)
                                aipinsenc.faudinsenc = New DateTime(1900, 1, 1)
                                aipinsenc.fultrechinsenc = New DateTime(1900, 1, 1)
                                aipinsenc.fcancinsenc = New DateTime(1900, 1, 1)
                                aipinsenc.facepinsenc = New DateTime(1900, 1, 1)
                                If (vi_aipinsenc.xdescinsenc Is Nothing Or vi_aipinsenc.xdescinsenc = "") Then
                                    aipinsenc.xdescinsenc = ""
                                Else
                                    aipinsenc.xdescinsenc = vi_aipinsenc.xdescinsenc
                                End If
                                aipinsenc.xdescinsenc = vi_aipinsenc.xdescinsenc
                                aipinsenc.icerrarinsenc = False
                                aipinsenc.iestatinsenc = "INICIALIZAR"
                                aipinsenc.idseglogreg = 0

                                aipinsenc.nanexoinsenc = NumeroAnexoInspeccion(aipinsenc.xnumsininsenc) + 1

                                respopera = aipinsencController.insaipinsenc(aipinsenc)

                                If (respopera.irespuesta = "1") Then
                                    tran1.Complete()
                                End If

                            End If
                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "Ha ocurrido un error al intentar generar la actividad solicitada."
                        End If
                    End Using
                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "Ya el registro fue agendado, no se puede agendar dos veces el mismo caso."
                End If 'If iexisteext = False Then

                Return respopera

            Catch ex As Exception

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar generar la actividad solicitada."

                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function NumeroAnexoInspeccion(xnumsininsenc As String) As Int16
            Dim respopera As New respopera
            Try

                'Dim aipinsencController As New aipinsencController
                'Dim nanexoinsenc As Int16 = aipinsencController.ObtenerCantPorNumSini(xnumsininsenc)

                Dim _respopera As respopera = Sp_ObtenerNumeroAjuste(xnumsininsenc)
                Dim nanexoinsenc As Int16 = _respopera.id

                Return nanexoinsenc
            Catch ex As Exception

                Return 0
            End Try

        End Function

        <HttpPost()> _
        Public Function Sp_ObtenerNumeroAjuste(xnumsininsenc) As respopera

            Try

                Dim param1 As New Client.OracleParameter
                param1.OracleDbType = Client.OracleDbType.Decimal
                param1.Precision = 18
                param1.Scale = 0
                param1.Value = 0
                param1.ParameterName = "p_idsegmanusuop"

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Varchar2
                param2.Size = 20
                param2.Value = "aipauto"
                param2.ParameterName = "p_xnombrecorto"


                Dim param3 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 1
                param3.ParameterName = "p_irespuesta"
                param3.Direction = ParameterDirection.Output

                Dim param4 As New Client.OracleParameter
                param4.OracleDbType = Client.OracleDbType.Varchar2
                param4.Size = 300
                param4.ParameterName = "p_xmsjusuario"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Varchar2
                param5.Size = 300
                param5.ParameterName = "p_xmsjtecnico"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Varchar2
                param6.Size = 300
                param6.ParameterName = "p_coderrorlog"
                param6.Direction = ParameterDirection.Output


                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Varchar2
                param7.Size = 300                
                param7.Value = xnumsininsenc
                param7.ParameterName = "p_xnumsininsenc"

                Dim param8 As New Client.OracleParameter
                param8.OracleDbType = Client.OracleDbType.Int16
                param8.ParameterName = "p_ncorrelativo"
                param8.Direction = ParameterDirection.Output




                Dim xdeclare As String = "DECLARE v_p_idsegmanusuop FLOAT; v_p_xnombrecorto VARCHAR2(32767); v_p_irespuesta VARCHAR2(32767); v_p_xmsjusuario VARCHAR2(32767); v_p_xmsjtecnico VARCHAR2(32767); v_p_coderrorlog VARCHAR2(32767); v_p_xnumsininsenc VARCHAR2(32767); v_p_irespuesta numeric(3);"
                Dim xsp As String = "begin SP_RNOBTENERNUMEROAJUSTE (:v_p_idsegmanusuop,:v_p_xnombrecorto,:v_p_irespuesta,:v_p_xmsjusuario,:v_p_xmsjtecnico,:v_p_coderrorlog,:v_p_xnumsininsenc,:v_p_ncorrelativo); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7, param8)

                Dim respopera As New respopera
                respopera.irespuesta = param3.Value.ToString()
                respopera.xmsjusuario = param4.Value.ToString()
                respopera.xmsjtecnico = param5.Value.ToString()
                If IsNumeric(param8.Value.ToString()) Then
                    respopera.id = param8.Value.ToString()
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:Sp_ObtenerBaremoManoDeObra ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ModificarInspeccionActividad(vi_aipinsenc As vi_aipinsenc) As respopera
            Dim respopera As New respopera
            Try

                Dim aipactivperiController As New aipactivperiController
                Dim aipactivperi As New aipactivperi

                If (vi_aipinsenc.idcomunmancont = 0) Then
                    vi_aipinsenc.idcomunmancont = 1
                End If

                If (vi_aipinsenc.idcomunmanpais = 0) Then
                    vi_aipinsenc.idcomunmanpais = 9
                End If

                Using tran1 As New TransactionScope

                    aipactivperi.idaipactivperi = vi_aipinsenc.idaipactivperi

                    aipactivperi.idcomunmancont = vi_aipinsenc.idcomunmancont
                    aipactivperi.idcomunmanpais = vi_aipinsenc.idcomunmanpais
                    aipactivperi.idcomunmanestado = vi_aipinsenc.idcomunmanestado
                    aipactivperi.idcomunmanlocalid = vi_aipinsenc.idcomunmanlocalid
                    aipactivperi.fejecactivperi = vi_aipinsenc.fejecactivperi
                    aipactivperi.ffinejecactivperi = vi_aipinsenc.ffinejecactivperi
                    aipactivperi.xdireccionactivperi = vi_aipinsenc.xdireccionactivperi
                    aipactivperi.xtelfmovilactivperi = vi_aipinsenc.xtelfmovilactivperi
                    aipactivperi.xnomcliactivperi = vi_aipinsenc.xnomcliactivperi
                    aipactivperi.xcorreoelectronicoactivperi = vi_aipinsenc.xcorreoelectronicoactivperi
                    aipactivperi.xtituactivperi = vi_aipinsenc.xtituactivperi
                    aipactivperi.xdescactivperi = vi_aipinsenc.xdescactivperi
                    aipactivperi.ialcanactivperi = vi_aipinsenc.ialcanactivperi
                    aipactivperi.iestatactivperi = vi_aipinsenc.iestatactivperi
                    aipactivperi.idsegmanusucrea = vi_aipinsenc.idsegmanusucrea
                    aipactivperi.fcrearegactivperi = DateTime.Now
                    aipactivperi.idseglogreg = 0


                    respopera = aipactivperiController.modaipactivperi(aipactivperi)

                    If (respopera.irespuesta = "1") Then

                        respopera = ModificarIntermediacionExterna(vi_aipinsenc.idaipinsintext, vi_aipinsenc.xnumsininsenc, vi_aipinsenc.xplacinsenc, vi_aipinsenc.xsermotinsenc, vi_aipinsenc.iestatinsenc, vi_aipinsenc.idsegmanusuperit, 0, vi_aipinsenc.itipoinsenc, vi_aipinsenc.idsegmanorgperit) 'la cuota no se modifica por eso la paso 0(es el ultimo campo)

                        If (respopera.irespuesta = "1") Then

                            ''************************************************************************************************************************
                            ''se debe modificar aqui el registro a la intermediacion esto para poder asi mantener la informacion actualizada
                            ''************************************************************************************************************************

                            Dim aipinsenc As New aipinsenc
                            aipinsenc.idaipinsenc = vi_aipinsenc.idaipinsenc

                            aipinsenc.idaipactivperi = vi_aipinsenc.idaipactivperi
                            aipinsenc.idaipinsintext = vi_aipinsenc.idaipinsintext ''id de intermediacion
                            aipinsenc.itipoinsenc = vi_aipinsenc.itipoinsenc
                            aipinsenc.itipoperitinsenc = vi_aipinsenc.itipoperitinsenc
                            aipinsenc.iorigeninsenc = vi_aipinsenc.iorigeninsenc
                            aipinsenc.idsegmanusuperit = vi_aipinsenc.idsegmanusuperit
                            aipinsenc.idsegmanusuaudit = vi_aipinsenc.idsegmanusuperit
                            aipinsenc.xcedpropinsenc = vi_aipinsenc.xcedpropinsenc
                            aipinsenc.xcedsidoinsenc = vi_aipinsenc.xcedsidoinsenc
                            aipinsenc.xplacinsenc = vi_aipinsenc.xplacinsenc
                            aipinsenc.xsermotinsenc = vi_aipinsenc.xsermotinsenc
                            aipinsenc.xsercarrinsenc = vi_aipinsenc.xsercarrinsenc
                            aipinsenc.xnumpolinsenc = vi_aipinsenc.xnumpolinsenc
                            aipinsenc.xnumsininsenc = vi_aipinsenc.xnumsininsenc
                            aipinsenc.xllavinsenc = ""
                            aipinsenc.fcreainsenc = vi_aipinsenc.fcreainsenc
                            aipinsenc.fprocinsenc = vi_aipinsenc.fprocinsenc
                            aipinsenc.faudinsenc = vi_aipinsenc.faudinsenc
                            aipinsenc.fultrechinsenc = vi_aipinsenc.fultrechinsenc
                            aipinsenc.fcancinsenc = vi_aipinsenc.fcancinsenc
                            aipinsenc.facepinsenc = vi_aipinsenc.facepinsenc

                            If (vi_aipinsenc.xdescinsenc Is Nothing Or vi_aipinsenc.xdescinsenc = "") Then
                                aipinsenc.xdescinsenc = "INSPECCION GENERADA POR AGENDA WEB."
                            Else
                                aipinsenc.xdescinsenc = vi_aipinsenc.xdescinsenc
                            End If

                            aipinsenc.xdescinsenc = vi_aipinsenc.xdescinsenc
                            aipinsenc.iestatinsenc = vi_aipinsenc.iestatinsenc
                            aipinsenc.idseglogreg = vi_aipinsenc.idseglogreg

                            Dim aipinsencController As New aipinsencController
                            respopera = aipinsencController.modaipinsenc(aipinsenc)

                            If (respopera.irespuesta = "1") Then
                                tran1.Complete()
                            End If
                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "Ha ocurrido un error al intentar modificar la actividad solicitada."
                        End If
                    Else
                        respopera.irespuesta = "0"
                        respopera.xmsjusuario = "Ha ocurrido un error al intentar modificar la actividad solicitada."
                    End If
                End Using

                Return respopera

            Catch ex As Exception

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar modificar la actividad solicitada."

                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function EliminarInspeccionActividad(idaipinsenc As Decimal, idsegmanusu As Decimal, idsegmanapp As Decimal) As respopera
            Dim respopera As New respopera
            Try

                Dim ActividadController As New ActividadController

                respopera = ActividadController.VerificarPermisos(idaipinsenc, idsegmanusu, idsegmanapp)

                If (respopera IsNot Nothing) Then
                    If (respopera.irespuesta = "0") Then
                        Return respopera
                    End If
                End If

                Dim aipactivperiController As New aipactivperiController
                Dim aipactivperi As New aipactivperi

                Dim vi_aipinsenc As New vi_aipinsenc
                Dim vi_aipinsencController As New vi_aipinsencController
                vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(idaipinsenc)

                If (vi_aipinsenc IsNot Nothing) Then

                    Using tran1 As New TransactionScope

                        aipactivperi.idaipactivperi = vi_aipinsenc.idaipactivperi
                        aipactivperi.idsegmanusucrea = idsegmanusu
                        respopera = aipactivperiController.eliaipactivperi(aipactivperi)

                        If (respopera.irespuesta = "1") Then

                            Dim aipinsenc As New aipinsenc
                            aipinsenc.idaipinsenc = vi_aipinsenc.idaipinsenc

                            Dim aipinsencController As New aipinsencController
                            respopera = aipinsencController.eliaipinsenc(aipinsenc)

                            If (respopera.irespuesta = "1") Then
                                tran1.Complete()
                            End If
                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "Ha ocurrido un error al intentar eliminar la actividad solicitada."
                        End If
                    End Using


                End If




                Return respopera

            Catch ex As Exception

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar eliminar la actividad solicitada."

                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function ModificarPeritoInspeccion(vi_aipinsenc As vi_aipinsenc) As respopera
            Dim respopera As New respopera
            Try

                Dim aipinsenc As New aipinsenc
                Dim aipinsencController As New aipinsencController
                aipinsenc = aipinsencController.selaipinsencxid(vi_aipinsenc.idaipinsenc)

                '' si no es nulo se asigna el usuario nuevo seleccionado
                If (aipinsenc IsNot Nothing) Then
                    aipinsenc.idsegmanusuperit = vi_aipinsenc.idsegmanusuperit
                End If

                respopera = aipinsencController.modaipinsenc(aipinsenc)

                Return respopera

            Catch ex As Exception

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar modificar la actividad solicitada."

                Return respopera
            End Try

        End Function


        <HttpPost()> _
        Public Function ModificarAuditorInspeccion(vi_aipinsenc As vi_aipinsenc) As respopera
            Dim respopera As New respopera
            Try

                Dim aipinsenc As New aipinsenc
                Dim aipinsencController As New aipinsencController
                aipinsenc = aipinsencController.selaipinsencxid(vi_aipinsenc.idaipinsenc)

                '' si no es nulo se asigna el usuario nuevo seleccionado
                If (aipinsenc IsNot Nothing) Then
                    aipinsenc.idsegmanusuaudit = vi_aipinsenc.idsegmanusuaudit
                End If

                respopera = aipinsencController.modaipinsenc(aipinsenc)

                Return respopera

            Catch ex As Exception

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar modificar la actividad solicitada."

                Return respopera
            End Try

        End Function


        <HttpPost()> _
        Public Function ObtenerAuditorPorDistribucionAutomatica(idsegmanorg As Decimal) As respopera
            Dim respopera As New respopera
            Try

                If ConfigurationManager.AppSettings("motoddb") = "sql" Then
                    Dim param1 As New SqlClient.SqlParameter
                    param1.SqlDbType = SqlDbType.Decimal
                    param1.Precision = 18
                    param1.Scale = 0
                    param1.Value = 0
                    param1.ParameterName = "p_idsegmanusuop"

                    Dim param2 As New SqlClient.SqlParameter
                    param2.SqlDbType = SqlDbType.VarChar
                    param2.Size = 20
                    param2.Value = "aipauto"
                    param2.ParameterName = "p_xnombrecorto"

                    Dim param3 As New SqlClient.SqlParameter
                    param3.SqlDbType = SqlDbType.VarChar
                    param3.Size = 1
                    param3.Value = "0"
                    param3.ParameterName = "p_irespuesta"
                    param3.Direction = ParameterDirection.Output


                    Dim param4 As New SqlClient.SqlParameter
                    param4.SqlDbType = SqlDbType.VarChar
                    param4.Size = 300
                    param4.Value = ""
                    param4.ParameterName = "p_xmsjusuario"
                    param4.Direction = ParameterDirection.Output

                    Dim param5 As New SqlClient.SqlParameter
                    param5.SqlDbType = SqlDbType.VarChar
                    param5.Size = 300
                    param5.Value = ""
                    param5.ParameterName = "p_xmsjtecnico"
                    param5.Direction = ParameterDirection.Output

                    Dim param6 As New SqlClient.SqlParameter
                    param6.SqlDbType = SqlDbType.VarChar
                    param6.Size = 300
                    param6.Value = ""
                    param6.ParameterName = "p_coderrorlog"
                    param6.Direction = ParameterDirection.Output

                    Dim param7 As New SqlClient.SqlParameter
                    param7.SqlDbType = SqlDbType.Decimal
                    param7.Precision = 18
                    param7.Scale = 0
                    param7.Value = idsegmanorg
                    param7.ParameterName = "p_idsegmanorg"

                    Dim param8 As New SqlClient.SqlParameter
                    param8.SqlDbType = SqlDbType.Decimal
                    param8.Precision = 18
                    param8.Scale = 0
                    param8.Value = 0
                    param8.ParameterName = "p_idsegmanusu"
                    param8.Direction = ParameterDirection.Output

                    Dim f As Integer = _db.ExecuteStoreCommand("exec sp_rndistribautoauditor @p_idsegmanusuop, @p_xnombrecorto, @p_irespuesta output, @p_xmsjusuario output, @p_xmsjtecnico output, @p_coderrorlog output, @p_idsegmanorg, @p_idsegmanusu output", param1, param2, param3, param4, param5, param6, param7, param8)

                    respopera.irespuesta = param3.Value
                    respopera.xmsjusuario = param4.Value
                    respopera.xmsjtecnico = param5.Value
                    If IsNumeric(param8.Value) = True Then
                        respopera.id = Int(param8.Value)
                    End If
                Else
                    respopera = ObtenerAuditorPorDistribucionAutomaticaOracle(idsegmanorg)
                End If
                Return respopera

            Catch ex As Exception

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar modificar la actividad solicitada."

                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function ObtenerAuditorPorDistribucionAutomaticaOracle(idsegmanorg As Decimal) As respopera
            Dim respopera As New respopera
            Try


                Dim param1 As New Client.OracleParameter
                param1.OracleDbType = Client.OracleDbType.Decimal
                param1.Precision = 18
                param1.Scale = 0
                param1.Value = 0
                param1.ParameterName = "p_idsegmanusuop"

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Varchar2
                param2.Size = 20
                param2.Value = "aipauto"
                param2.ParameterName = "p_xnombrecorto"

                Dim param3 As New Client.OracleParameter
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 1                
                param3.ParameterName = "p_irespuesta"
                param3.Direction = ParameterDirection.Output


                Dim param4 As New Client.OracleParameter
                param4.OracleDbType = Client.OracleDbType.Varchar2
                param4.Size = 300                
                param4.ParameterName = "p_xmsjusuario"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Varchar2
                param5.Size = 300                
                param5.ParameterName = "p_xmsjtecnico"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Varchar2
                param6.Size = 300                
                param6.ParameterName = "p_coderrorlog"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Decimal
                param7.Precision = 18
                param7.Scale = 0
                param7.Value = idsegmanorg
                param7.ParameterName = "p_idsegmanorg"

                Dim param8 As New Client.OracleParameter
                param8.OracleDbType = Client.OracleDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = 0
                param8.ParameterName = "p_idsegmanusu"
                param8.Direction = ParameterDirection.InputOutput

                'Dim xdeclare As String = "DECLARE v_p_idsegmanusuop FLOAT; v_p_xnombrecorto VARCHAR2(32767); v_p_irespuesta VARCHAR2(32767); v_p_xmsjusuario VARCHAR2(32767); v_p_xmsjtecnico VARCHAR2(32767); v_p_coderrorlog VARCHAR2(32767); v_p_idsegmanorg float;  v_p_idsegmanusu float;  cv_1 sys_refcursor; cv_2 sys_refcursor;  cv_3 sys_refcursor; cv_4 sys_refcursor; cv_5 sys_refcursor;"
                Dim xdeclare As String = " DECLARE v_p_idsegmanusuop float;  v_p_xnombrecorto varchar2(32767);  v_p_irespuesta varchar2(32767);  v_p_xmsjusuario varchar2(32767);  v_p_xmsjtecnico varchar2(32767);  v_p_coderrorlog varchar2(32767);  v_p_idsegmanorg float;  v_p_idsegmanusu float;  cv_1 sys_refcursor;  cv_2 sys_refcursor;  cv_3 sys_refcursor;  cv_4 sys_refcursor;  cv_5 sys_refcursor;"
                Dim xsp As String = "begin sp_rndistribautoauditor(:v_p_idsegmanusuop, :v_p_xnombrecorto, :v_p_irespuesta, :v_p_xmsjusuario, :v_p_xmsjtecnico, :v_p_coderrorlog, :v_p_idsegmanorg, :v_p_idsegmanusu, cv_1, cv_2, cv_3, cv_4, cv_5); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7, param8)

                ' Dim f As Integer = _db.ExecuteStoreCommand("exec sp_rndistribautoauditor @p_idsegmanusuop, @p_xnombrecorto, @p_irespuesta output, @p_xmsjusuario output, @p_xmsjtecnico output, @p_coderrorlog output, @p_idsegmanorg, @p_idsegmanusu output", param1, param2, param3, param4, param5, param6, param7, param8)

                respopera.irespuesta = param3.Value.ToString()
                respopera.xmsjusuario = param4.Value.ToString()
                respopera.xmsjtecnico = param5.Value.ToString()
                If IsNumeric(param8.Value.ToString()) = True Then
                    respopera.id = Int(param8.Value.ToString())
                End If

                Return respopera

            Catch ex As Exception

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar modificar la actividad solicitada."

                Return respopera
            End Try

        End Function


        <HttpPost()> _
        Public Function VerificarExistenciaFotosPeritaje(idaipinsenc As Decimal) As Boolean
            Dim respopera As New respopera
            Try

                Dim aipinsfotoController As New aipinsfotoController
                'Dim listta_aipinsfoto As New List(Of aipinsfoto)
                Dim cantidad As Decimal = aipinsfotoController.selaipinsfotoxidaipinsenccount(idaipinsenc)


                If (cantidad > 0) Then
                    Return True
                Else
                    Return False
                End If

            Catch ex As Exception
                Return False
            End Try

        End Function


        Public Function GuardarAipLogeve(idaipinsenc As Decimal, itipoinsenc As String) As respopera


            Dim aiplogeveController As New aiplogeveController
            Dim aiplogeve As New aiplogeve

            'se alamcena el id de encabezado en el idsegmanusu revisar si se puede hacer ya que para una vista esto no funcionaria

            aiplogeve.iamblogeve = "GUARDAR INSPECCION"
            aiplogeve.fcrealogeve = Date.Now
            aiplogeve.idsegmanusu = idaipinsenc
            aiplogeve.xnomlogeve = "EL PERITO GUARDO LA INSPECCION DE " & itipoinsenc & " idaipinsenc: " & idaipinsenc
            aiplogeveController.insaiplogeve(aiplogeve)


            Dim respopera As New respopera
            respopera.irespuesta = "0"
            respopera.xmsjusuario = "Guardado correctamente"

            Return respopera
        End Function


        <HttpPost()> _
        Public Function ModificarAuditorMasivo(idsegmanusuaudit As Decimal, idsegmanusu As Decimal, list_vi_aipinsenc As List(Of vi_aipinsenc)) As respopera
            Dim respopera As New respopera
            Try

                Dim aipinsencController As New aipinsencController
                Dim aipinsenc As New aipinsenc

                Dim cantidad As Decimal = 0
                Dim _msj As String = ""
                Dim idsegmanusuaudit1 As Decimal = 0
                If (list_vi_aipinsenc.Count > 0) Then

                    For i As Integer = 0 To list_vi_aipinsenc.Count - 1

                        If (list_vi_aipinsenc(i).check) Then
                            aipinsenc = aipinsencController.selaipinsencxid(list_vi_aipinsenc(i).idaipinsenc)

                            If (aipinsenc IsNot Nothing) Then
                                ''modifico el auditor
                                idsegmanusuaudit1 = aipinsenc.idsegmanusuaudit
                                aipinsenc.idsegmanusuaudit = idsegmanusuaudit
                                respopera = aipinsencController.modaipinsenc(aipinsenc)

                                If (respopera.irespuesta = "1") Then
                                    cantidad = cantidad + 1
                                    AgregarAipLogEve("Actualización de Auditores idaipinsenc: " & list_vi_aipinsenc(i).idaipinsenc & " - Auditor ant: " & idsegmanusuaudit1, idsegmanusu, "ACTMASIAUDIT")
                                End If
                            End If
                        End If

                    Next

                    If (cantidad > 0) Then
                        If (cantidad = 1) Then
                            _msj = "Se actualizo " & cantidad & " inspecciones con éxito."
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = _msj
                        Else
                            _msj = "Se actualizaron " & cantidad & " inspecciones con éxito."
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = _msj
                        End If

                    Else

                        _msj = "Debe seleccionar por lo menos una inspección para actualizar."
                        respopera.irespuesta = "0"
                        respopera.xmsjusuario = _msj
                    End If




                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "Debe enviar por lo menos una inspección para actualizar"
                End If

                Return respopera

            Catch ex As Exception
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar actualizar las inspecciones."
                respopera.xmsjtecnico = ex.Message
                Return respopera
            End Try

        End Function
        <HttpPost()> _
        Public Function ModificarAuditorInspeccionTodo(idsegmanusuaudit As Decimal, idsegmanusu As Decimal, list_vi_aipinsenc As List(Of vi_aipinsenc)) As respopera
            Dim respopera As New respopera
            Try

                Dim aipinsencController As New aipinsencController
                Dim aipinsenc As New aipinsenc

                Dim cantidad As Decimal = 0
                Dim _msj As String = ""
                Dim idsegmanusuaudit1 As Decimal = 0
                If (list_vi_aipinsenc.Count > 0) Then

                    For i As Integer = 0 To list_vi_aipinsenc.Count - 1


                        aipinsenc = aipinsencController.selaipinsencxid(list_vi_aipinsenc(i).idaipinsenc)

                        If (aipinsenc IsNot Nothing) Then
                            ''modifico el auditor
                            idsegmanusuaudit1 = aipinsenc.idsegmanusuaudit
                            aipinsenc.idsegmanusuaudit = idsegmanusuaudit
                            respopera = aipinsencController.modaipinsenc(aipinsenc)

                            If (respopera.irespuesta = "1") Then
                                cantidad = cantidad + 1
                                AgregarAipLogEve("Actualización de Auditores idaipinsenc: " & list_vi_aipinsenc(i).idaipinsenc & " - Auditor ant: " & idsegmanusuaudit1, idsegmanusu, "ACTMASIAUDIT")
                            End If

                        End If

                    Next

                    If (cantidad > 0) Then
                        If (cantidad = 1) Then
                            _msj = "Se actualizo " & cantidad & " inspecciones con éxito."
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = _msj
                        Else
                            _msj = "Se actualizaron " & cantidad & " inspecciones con éxito."
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = _msj
                        End If

                    Else

                        _msj = "Debe seleccionar por lo menos una inspección para actualizar."
                        respopera.irespuesta = "0"
                        respopera.xmsjusuario = _msj
                    End If




                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "Debe enviar por lo menos una inspección para actualizar"
                End If

                Return respopera

            Catch ex As Exception
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar actualizar las inspecciones."
                respopera.xmsjtecnico = ex.Message
                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function ModificarPeritoMasivo(idsegmanusuperit As Decimal, idsegmanusu As Decimal, list_vi_aipinsenc As List(Of vi_aipinsenc)) As respopera
            Dim respopera As New respopera
            Try

                Dim aipinsencController As New aipinsencController
                Dim aipinsenc As New aipinsenc

                Dim cantidad As Decimal = 0
                Dim _msj As String = ""
                Dim idsegmanusuperit1 As Decimal = 0
                If (list_vi_aipinsenc.Count > 0) Then

                    For i As Integer = 0 To list_vi_aipinsenc.Count - 1

                        If (list_vi_aipinsenc(i).check) Then
                            aipinsenc = aipinsencController.selaipinsencxid(list_vi_aipinsenc(i).idaipinsenc)

                            If (aipinsenc IsNot Nothing) Then
                                ''modifico el perito
                                idsegmanusuperit1 = aipinsenc.idsegmanusuperit
                                aipinsenc.idsegmanusuperit = idsegmanusuperit
                                respopera = aipinsencController.modaipinsenc(aipinsenc)

                                If (respopera.irespuesta = "1") Then
                                    cantidad = cantidad + 1
                                    AgregarAipLogEve("Actualización de peritos idaipinsenc: " & list_vi_aipinsenc(i).idaipinsenc & " - perito ant: " & idsegmanusuperit1, idsegmanusu, "ACTMASIPERIT")
                                End If
                            End If
                        End If

                    Next

                    If (cantidad > 0) Then
                        If (cantidad = 1) Then
                            _msj = "Se actualizo " & cantidad & " inspecciones con éxito."
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = _msj
                        Else
                            _msj = "Se actualizaron " & cantidad & " inspecciones con éxito."
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = _msj
                        End If

                    Else

                        _msj = "Debe seleccionar por lo menos una inspección para actualizar."
                        respopera.irespuesta = "0"
                        respopera.xmsjusuario = _msj
                    End If




                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "Debe enviar por lo menos una inspección para actualizar"
                End If

                Return respopera

            Catch ex As Exception
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar actualizar las inspecciones."
                respopera.xmsjtecnico = ex.Message
                Return respopera
            End Try

        End Function
        <HttpPost()> _
        Public Function ModificarPeritoInspeccionTodo(idsegmanusuperit As Decimal, idsegmanusu As Decimal, list_vi_aipinsenc As List(Of vi_aipinsenc)) As respopera
            Dim respopera As New respopera
            Try

                Dim aipinsencController As New aipinsencController
                Dim aipinsenc As New aipinsenc

                Dim cantidad As Decimal = 0
                Dim _msj As String = ""
                Dim idsegmanusuperit1 As Decimal = 0
                If (list_vi_aipinsenc.Count > 0) Then

                    For i As Integer = 0 To list_vi_aipinsenc.Count - 1


                        aipinsenc = aipinsencController.selaipinsencxid(list_vi_aipinsenc(i).idaipinsenc)

                        If (aipinsenc IsNot Nothing) Then
                            ''modifico el perito
                            idsegmanusuperit1 = aipinsenc.idsegmanusuperit
                            aipinsenc.idsegmanusuperit = idsegmanusuperit
                            respopera = aipinsencController.modaipinsenc(aipinsenc)

                            If (respopera.irespuesta = "1") Then
                                cantidad = cantidad + 1
                                AgregarAipLogEve("Actualización de peritos idaipinsenc: " & list_vi_aipinsenc(i).idaipinsenc & " - perito ant: " & idsegmanusuperit1, idsegmanusu, "ACTMASIPERIT")
                            End If
                        End If


                    Next

                    If (cantidad > 0) Then
                        If (cantidad = 1) Then
                            _msj = "Se actualizo " & cantidad & " inspecciones con éxito."
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = _msj
                        Else
                            _msj = "Se actualizaron " & cantidad & " inspecciones con éxito."
                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = _msj
                        End If

                    Else

                        _msj = "Debe seleccionar por lo menos una inspección para actualizar."
                        respopera.irespuesta = "0"
                        respopera.xmsjusuario = _msj
                    End If




                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "Debe enviar por lo menos una inspección para actualizar"
                End If

                Return respopera

            Catch ex As Exception
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar actualizar las inspecciones."
                respopera.xmsjtecnico = ex.Message
                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function CrearIntermediacionExterna(idaipinsintext As Integer, xnumsininsenc As Decimal, xplacinsenc As String, xsermotinsenc As String, iestatus As String, idsegmanusuperit As Decimal, ncotizacion As Integer, xtipo_operacion As String, idsegmanorg As Decimal) As respopera
            Dim respopera As New respopera
            Try
                If ConfigurationManager.AppSettings("motoddb") = "sql" Then

                    'se realiza la busqueda del usuario perito para obtener su nombre 
                    Dim vi_segusudetperf2Controller As New vi_segusudetperf2Controller
                    Dim idsegmanapp As Decimal = ConfigurationManager.AppSettings("idsegmanapp")
                    Dim vi_segusudetperf2 As vi_segusudetperf2 = vi_segusudetperf2Controller.selvi_segusudetperf2xid(idsegmanapp, idsegmanusuperit)

                    Dim xnombrecompletoperit As String = ""
                    If (vi_segusudetperf2 IsNot Nothing) Then
                        xnombrecompletoperit = vi_segusudetperf2.xnombrecompleto
                        If idsegmanorg <= 0 Then
                            idsegmanorg = vi_segusudetperf2.idsegmanorg
                        End If
                    End If


                    Dim param1 As New SqlClient.SqlParameter
                    param1.SqlDbType = SqlDbType.VarChar
                    param1.Size = 20
                    param1.Value = "insertar"
                    param1.ParameterName = "p_ioperacion"

                    Dim param2 As New SqlClient.SqlParameter
                    param2.SqlDbType = SqlDbType.Decimal
                    param2.Precision = 18
                    param2.Scale = 0
                    param2.Value = 0
                    param2.ParameterName = "p_idsegmanusulog"

                    Dim param3 As New SqlClient.SqlParameter
                    param3.SqlDbType = SqlDbType.VarChar
                    param3.Size = 20
                    param3.Value = "aipauto"
                    param3.ParameterName = "p_xnombrecortolog"

                    Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                    param4.SqlDbType = SqlDbType.VarChar
                    param4.Size = 1
                    param4.ParameterName = "p_irespuesta"
                    param4.Direction = ParameterDirection.Output

                    Dim param5 As New SqlClient.SqlParameter
                    param5.SqlDbType = SqlDbType.VarChar
                    param5.Size = 300
                    param5.ParameterName = "p_xmsjusuario"
                    param5.Direction = ParameterDirection.Output

                    Dim param6 As New SqlClient.SqlParameter
                    param6.SqlDbType = SqlDbType.VarChar
                    param6.Size = 300
                    param6.ParameterName = "p_xmsjtecnico"
                    param6.Direction = ParameterDirection.Output

                    Dim param7 As New SqlClient.SqlParameter
                    param7.SqlDbType = SqlDbType.VarChar
                    param7.Size = 300
                    param7.ParameterName = "p_coderrorlog"
                    param7.Direction = ParameterDirection.Output

                    'Paramestros de la tabla

                    Dim param8 As New SqlClient.SqlParameter
                    param8.SqlDbType = SqlDbType.Int
                    param8.Value = idaipinsintext
                    param8.ParameterName = "p_IDTABLA"
                    param8.Direction = ParameterDirection.Output

                    Dim param9 As New SqlClient.SqlParameter
                    param9.SqlDbType = SqlDbType.Int
                    param9.Value = 0
                    param9.ParameterName = "p_NU_TICKET"

                    ''id de intermediacion
                    Dim param10 As New SqlClient.SqlParameter
                    param10.SqlDbType = SqlDbType.VarChar
                    param10.Size = 20
                    param10.Value = "INSERTAR"
                    param10.ParameterName = "p_TIPO_OPERACION"

                    Dim param11 As New SqlClient.SqlParameter
                    param11.SqlDbType = SqlDbType.VarChar
                    param11.Size = 1
                    param11.Value = "S"
                    param11.ParameterName = "p_TIPO_INSPECCION"

                    Dim param12 As New SqlClient.SqlParameter
                    param12.SqlDbType = SqlDbType.TinyInt
                    param12.Value = idsegmanorg
                    param12.ParameterName = "p_SUCURSAL"

                    Dim param13 As New SqlClient.SqlParameter
                    param13.SqlDbType = SqlDbType.Int
                    param13.Value = xnumsininsenc
                    param13.ParameterName = "p_SINIESTRO"

                    Dim param14 As New SqlClient.SqlParameter
                    param14.SqlDbType = SqlDbType.VarChar
                    param14.Size = 20
                    param14.Value = xplacinsenc
                    param14.ParameterName = "p_PLACA"

                    Dim param15 As New SqlClient.SqlParameter
                    param15.SqlDbType = SqlDbType.VarChar
                    param15.Size = 30
                    param15.Scale = 0
                    param15.Value = xsermotinsenc
                    param15.ParameterName = "p_SERIALMOTOR"

                    Dim param16 As New SqlClient.SqlParameter
                    param16.SqlDbType = SqlDbType.DateTime
                    param16.Value = Date.Now.ToString("dd/MM/yyyy")
                    param16.ParameterName = "p_FECHA"

                    Dim param17 As New SqlClient.SqlParameter
                    param17.SqlDbType = SqlDbType.VarChar
                    param17.Size = 20
                    param17.Value = iestatus
                    param17.ParameterName = "p_ESTATUS"

                    Dim param18 As New SqlClient.SqlParameter
                    param18.SqlDbType = SqlDbType.VarChar
                    param18.Size = 20
                    param18.Value = "AIPAUTO"
                    param18.ParameterName = "p_USUARIO"

                    Dim param19 As New SqlClient.SqlParameter
                    param19.SqlDbType = SqlDbType.VarChar
                    param19.Size = 200
                    param19.Value = "AIPAUTO"
                    param19.ParameterName = "p_ORIGEN"

                    Dim param20 As New SqlClient.SqlParameter
                    param20.SqlDbType = SqlDbType.VarChar
                    param20.Size = 200
                    param20.Value = xnombrecompletoperit
                    param20.ParameterName = "p_PERITO"

                    Dim param21 As New SqlClient.SqlParameter
                    param21.SqlDbType = SqlDbType.SmallInt
                    param21.Value = ncotizacion
                    param21.ParameterName = "p_NU_COTIZA"


                    Dim f As Integer = _db.ExecuteStoreCommand("exec sp_INTERMEDIACION @p_ioperacion, @p_idsegmanusulog, @p_xnombrecortolog, @p_irespuesta output, @p_xmsjusuario output, @p_xmsjtecnico output, @p_coderrorlog output, @p_IDTABLA output, @p_NU_TICKET ,@p_TIPO_OPERACION , @p_TIPO_INSPECCION, @p_SUCURSAL, @p_SINIESTRO, @p_PLACA, @p_SERIALMOTOR, @p_FECHA , @p_ESTATUS, @p_USUARIO, @p_ORIGEN, @p_PERITO, @p_NU_COTIZA", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20, param21)


                    respopera.irespuesta = param4.Value
                    respopera.xmsjusuario = param5.Value
                    respopera.xmsjtecnico = param6.Value
                    If IsNumeric(param8.Value) = True Then
                        respopera.id = Int(param8.Value)
                    End If
                Else
                    respopera = CrearIntermediacionExternaOracle(idaipinsintext, xnumsininsenc, xplacinsenc, xsermotinsenc, iestatus, idsegmanusuperit, ncotizacion, xtipo_operacion, idsegmanorg)
                End If

                Return respopera

            Catch ex As Exception

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar generar la actividad solicitada."

                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function CrearIntermediacionExternaOracle(idaipinsintext As Integer, xnumsininsenc As Decimal, xplacinsenc As String, xsermotinsenc As String, iestatus As String, idsegmanusuperit As Decimal, ncotizacion As Integer, xtipo_operacion As String, idsegmanorg As Decimal) As respopera
            Dim respopera As New respopera
            Try
                'se realiza la busqueda del usuario perito para obtener su nombre 
                Dim vi_segusudetperf2Controller As New vi_segusudetperf2Controller

                Dim idsegmanapp As Decimal = ConfigurationManager.AppSettings("idsegmanapp")
                Dim vi_segusudetperf2 As vi_segusudetperf2 = vi_segusudetperf2Controller.selvi_segusudetperf2xid(idsegmanapp, idsegmanusuperit)

                Dim xnombrecompletoperit As String = ""
                If (vi_segusudetperf2 IsNot Nothing) Then
                    xnombrecompletoperit = vi_segusudetperf2.xcedula ''aqui debe mandar es la cedula del perito que en el sir es su codido
                    If idsegmanorg <= 0 Then
                        idsegmanorg = vi_segusudetperf2.idsegmanorg
                    End If
                End If


                Dim param1 As New Client.OracleParameter
                param1.OracleDbType = Client.OracleDbType.Varchar2
                param1.Size = 20
                param1.Value = "insertar"
                param1.ParameterName = "p_ioperacion"

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New Client.OracleParameter
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.OracleDbType = Client.OracleDbType.Varchar2
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Varchar2
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Varchar2
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Varchar2
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New Client.OracleParameter
                param8.OracleDbType = Client.OracleDbType.Decimal
                param8.Value = idaipinsintext
                param8.ParameterName = "p_IDTABLA"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New Client.OracleParameter
                param9.OracleDbType = Client.OracleDbType.Int16
                param9.Value = 0
                param9.ParameterName = "p_NU_TICKET"

                ''id de intermediacion
                Dim param10 As New Client.OracleParameter
                param10.OracleDbType = Client.OracleDbType.Varchar2
                param10.Size = 10
                If xtipo_operacion = "SUSCRIPCION" Then
                    param10.Value = xtipo_operacion.Substring(0, 10)
                Else
                    If xtipo_operacion = "SINIESTRO" Then
                        param10.Value = xtipo_operacion
                    Else
                        param10.Value = " "
                    End If
                End If
                param10.ParameterName = "p_TIPO_OPERACION"

                Dim param11 As New Client.OracleParameter
                param11.OracleDbType = Client.OracleDbType.Varchar2
                param11.Size = 1
                param11.Value = "E"
                param11.ParameterName = "p_TIPO_INSPECCION"

                Dim param12 As New Client.OracleParameter
                param12.OracleDbType = Client.OracleDbType.Int16
                param12.Value = idsegmanorg
                param12.ParameterName = "p_SUCURSAL"

                Dim param13 As New Client.OracleParameter
                param13.OracleDbType = Client.OracleDbType.Int32
                If xtipo_operacion = "SINIESTRO" Then ' esto se realiza dado que para la agenda se cambiara el titulo del campo de sinistro para que diga  siniestro o cotizacion dependiendo del tipo
                    param13.Value = xnumsininsenc
                Else
                    param13.Value = 0
                End If
                param13.ParameterName = "p_SINIESTRO"

                Dim param14 As New Client.OracleParameter
                param14.OracleDbType = Client.OracleDbType.Varchar2
                param14.Size = 20
                param14.Value = xplacinsenc
                param14.ParameterName = "p_PLACA"

                Dim param15 As New Client.OracleParameter
                param15.OracleDbType = Client.OracleDbType.Varchar2
                param15.Size = 30
                If IsNumeric(xsermotinsenc) Then 'lo hago asi dado que ahorita en la tabla de intermediacion no se utiliza este campo y es numeric
                    param15.Value = xsermotinsenc
                Else
                    param15.Value = 0
                End If
                param15.ParameterName = "p_SERIALMOTOR"


                Dim param16 As New Client.OracleParameter
                param16.OracleDbType = Client.OracleDbType.Date
                param16.Value = Date.Now
                param16.ParameterName = "p_FECHA"

                Dim param17 As New Client.OracleParameter
                param17.OracleDbType = Client.OracleDbType.Varchar2
                param17.Size = 20
                If (iestatus IsNot Nothing) Then
                    If iestatus = "POR PROCESAR" Or iestatus = "POR AUDITAR" Or iestatus = "RECHAZAR" Or iestatus = "INICIALIZAR" Then
                        iestatus = "R"
                    Else
                        If iestatus = "CANCELAR" Then
                            iestatus = "R"
                        Else
                            If iestatus = "ACEPTAR" Then
                                iestatus = "F"
                            End If
                        End If
                    End If
                    param17.Value = iestatus
                Else
                    param17.Value = " "
                End If
                param17.ParameterName = "p_ESTATUS"

                Dim param18 As New Client.OracleParameter
                param18.OracleDbType = Client.OracleDbType.Varchar2
                param18.Size = 20
                param18.Value = "AIPAUTO"
                param18.ParameterName = "p_USUARIO"

                Dim param19 As New Client.OracleParameter
                param19.OracleDbType = Client.OracleDbType.Varchar2
                param19.Size = 200
                param19.Value = "AIPAUTO"
                param19.ParameterName = "p_ORIGEN"

                Dim param20 As New Client.OracleParameter
                param20.OracleDbType = Client.OracleDbType.Varchar2
                param20.Size = 200
                If xnombrecompletoperit.Length > 19 Then
                    param20.Value = xnombrecompletoperit.Substring(0, 19)
                Else
                    param20.Value = xnombrecompletoperit
                End If
                param20.ParameterName = "p_PERITO"

                Dim param21 As New Client.OracleParameter
                param21.OracleDbType = Client.OracleDbType.Int32
                If xtipo_operacion = "SUSCRIPCION" Then ' esto se realiza dado que para la agenda se cambiara el titulo del campo de sinistro para que diga  siniestro o cotizacion dependiendo del tipo                    
                    If xnumsininsenc.ToString.Length <= 10 Then
                        param21.Value = xnumsininsenc
                    Else
                        param21.Value = 0
                    End If
                Else
                    param21.Value = 0
                End If
                param21.ParameterName = "p_NU_COTIZA"

                Dim xdeclare As String = "DECLARE v_p_ioperacion VARCHAR2(32767); v_p_idsegmanusulog FLOAT; v_p_xnombrecortolog VARCHAR2(32767); v_p_irespuesta VARCHAR2(32767); v_p_xmsjusuario VARCHAR2(32767); v_p_xmsjtecnico VARCHAR2(32767); v_p_coderrorlog VARCHAR2(32767); v_p_IDTABLA FLOAT; v_p_nu_ticket number; v_p_tipo_operacion varchar2(32767); v_p_tipo_inspeccion varchar2(32767); v_p_sucursal number; v_p_siniestro number; v_p_placa varchar2(32767); v_p_serialmotor varchar2(32767); v_p_fecha date; v_p_estatus varchar2(32767); v_p_usuario varchar2(32767); v_p_origen varchar2(32767); v_p_perito varchar2(32767); v_p_nu_cotiza number;"
                Dim xsp As String = "begin sp_INTERMEDIACION(:v_p_ioperacion,:v_p_idsegmanusulog,:v_p_xnombrecortolog,:v_p_irespuesta,:v_p_xmsjusuario,:v_p_xmsjtecnico,:v_p_coderrorlog,:v_p_IDTABLA, :v_p_nu_ticket, :v_p_tipo_operacion, :v_p_tipo_inspeccion, :v_p_sucursal, :v_p_siniestro, :v_p_placa, :v_p_serialmotor, :v_p_fecha, :v_p_estatus, :v_p_usuario, :v_p_origen, :v_p_perito, :v_p_nu_cotiza); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20, param21)
                'Dim f As Integer = _db.ExecuteStoreCommand("exec sp_INTERMEDIACION @p_ioperacion, @p_idsegmanusulog, @p_xnombrecortolog, @p_irespuesta output, @p_xmsjusuario output, @p_xmsjtecnico output, @p_coderrorlog output, @p_IDTABLA output, @p_NU_TICKET ,@p_TIPO_OPERACION , @p_TIPO_INSPECCION, @p_SUCURSAL, @p_SINIESTRO, @p_PLACA, @p_SERIALMOTOR, @p_FECHA , @p_ESTATUS, @p_USUARIO, @p_ORIGEN, @p_PERITO, @p_NU_COTIZA", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20, param21)


                respopera.irespuesta = param4.Value.ToString()
                respopera.xmsjusuario = param5.Value.ToString()
                respopera.xmsjtecnico = param6.Value.ToString()
                If IsNumeric(param8.Value.ToString()) = True Then
                    respopera.id = Int(param8.Value.ToString())
                End If


                Return respopera

            Catch ex As Exception

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar generar la actividad solicitada."

                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function ModificarIntermediacionExterna(idtabla As Integer, xnumsininsenc As Integer, xplacinsenc As String, xsermotinsenc As String, iestatus As String, idsegmanusuperit As Decimal, ncotizacion As Integer, xtipo_operacion As String, idsegmanorg As Decimal) As respopera
            Dim respopera As New respopera
            Try
                If ConfigurationManager.AppSettings("motoddb") = "sql" Then                
                    'se realiza la busqueda del usuario perito para obtener su nombre 
                    Dim vi_segusudetperf2Controller As New vi_segusudetperf2Controller

                    Dim idsegmanapp As Decimal = ConfigurationManager.AppSettings("idsegmanapp")
                    Dim vi_segusudetperf2 As vi_segusudetperf2 = vi_segusudetperf2Controller.selvi_segusudetperf2xid(idsegmanapp, idsegmanusuperit)

                    Dim xnombrecompletoperit As String = ""
                    If (vi_segusudetperf2 IsNot Nothing) Then
                        xnombrecompletoperit = vi_segusudetperf2.xnombrecompleto
                        If idsegmanorg <= 0 Then
                            idsegmanorg = vi_segusudetperf2.idsegmanorg
                        End If
                    End If


                    Dim param1 As New SqlClient.SqlParameter
                    param1.SqlDbType = SqlDbType.VarChar
                    param1.Size = 20
                    param1.Value = "actualizar"
                    param1.ParameterName = "p_ioperacion"

                    Dim param2 As New SqlClient.SqlParameter
                    param2.SqlDbType = SqlDbType.Decimal
                    param2.Precision = 18
                    param2.Scale = 0
                    param2.Value = 0
                    param2.ParameterName = "p_idsegmanusulog"

                    Dim param3 As New SqlClient.SqlParameter
                    param3.SqlDbType = SqlDbType.VarChar
                    param3.Size = 20
                    param3.Value = "aipauto"
                    param3.ParameterName = "p_xnombrecortolog"

                    Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                    param4.SqlDbType = SqlDbType.VarChar
                    param4.Size = 1
                    param4.ParameterName = "p_irespuesta"
                    param4.Direction = ParameterDirection.Output

                    Dim param5 As New SqlClient.SqlParameter
                    param5.SqlDbType = SqlDbType.VarChar
                    param5.Size = 300
                    param5.ParameterName = "p_xmsjusuario"
                    param5.Direction = ParameterDirection.Output

                    Dim param6 As New SqlClient.SqlParameter
                    param6.SqlDbType = SqlDbType.VarChar
                    param6.Size = 300
                    param6.ParameterName = "p_xmsjtecnico"
                    param6.Direction = ParameterDirection.Output

                    Dim param7 As New SqlClient.SqlParameter
                    param7.SqlDbType = SqlDbType.VarChar
                    param7.Size = 300
                    param7.ParameterName = "p_coderrorlog"
                    param7.Direction = ParameterDirection.Output

                    'Paramestros de la tabla

                    Dim param8 As New SqlClient.SqlParameter
                    param8.SqlDbType = SqlDbType.Int
                    param8.Value = idtabla
                    param8.ParameterName = "p_IDTABLA"
                    param8.Direction = ParameterDirection.Output

                    Dim param9 As New SqlClient.SqlParameter
                    param9.SqlDbType = SqlDbType.Int
                    param9.Value = 0
                    param9.ParameterName = "p_NU_TICKET"

                    ''id de intermediacion
                    Dim param10 As New SqlClient.SqlParameter
                    param10.SqlDbType = SqlDbType.VarChar
                    param10.Size = 20
                    param10.Value = "INSERTAR"
                    param10.ParameterName = "p_TIPO_OPERACION"

                    Dim param11 As New SqlClient.SqlParameter
                    param11.SqlDbType = SqlDbType.VarChar
                    param11.Size = 1
                    param11.Value = "S"
                    param11.ParameterName = "p_TIPO_INSPECCION"

                    Dim param12 As New SqlClient.SqlParameter
                    param12.SqlDbType = SqlDbType.TinyInt
                    param12.Value = idsegmanorg
                    param12.ParameterName = "p_SUCURSAL"

                    Dim param13 As New SqlClient.SqlParameter
                    param13.SqlDbType = SqlDbType.Int
                    param13.Value = xnumsininsenc
                    param13.ParameterName = "p_SINIESTRO"

                    Dim param14 As New SqlClient.SqlParameter
                    param14.SqlDbType = SqlDbType.VarChar
                    param14.Size = 20
                    param14.Value = xplacinsenc
                    param14.ParameterName = "p_PLACA"

                    Dim param15 As New SqlClient.SqlParameter
                    param15.SqlDbType = SqlDbType.VarChar
                    param15.Size = 30
                    param15.Scale = 0
                    param15.Value = xsermotinsenc
                    param15.ParameterName = "p_SERIALMOTOR"

                    Dim param16 As New SqlClient.SqlParameter
                    param16.SqlDbType = SqlDbType.DateTime
                    param16.Value = Date.Now
                    param16.ParameterName = "p_FECHA"

                    Dim param17 As New SqlClient.SqlParameter
                    param17.SqlDbType = SqlDbType.VarChar
                    param17.Size = 20
                    param17.Value = iestatus
                    param17.ParameterName = "p_ESTATUS"

                    Dim param18 As New SqlClient.SqlParameter
                    param18.SqlDbType = SqlDbType.VarChar
                    param18.Size = 20
                    param18.Value = "AIPAUTO"
                    param18.ParameterName = "p_USUARIO"

                    Dim param19 As New SqlClient.SqlParameter
                    param19.SqlDbType = SqlDbType.VarChar
                    param19.Size = 200
                    param19.Value = "AIPAUTO"
                    param19.ParameterName = "p_ORIGEN"

                    Dim param20 As New SqlClient.SqlParameter
                    param20.SqlDbType = SqlDbType.VarChar
                    param20.Size = 200
                    param20.Value = xnombrecompletoperit
                    param20.ParameterName = "p_PERITO"

                    Dim param21 As New SqlClient.SqlParameter
                    param21.SqlDbType = SqlDbType.SmallInt
                    param21.Value = ncotizacion
                    param21.ParameterName = "p_NU_COTIZA"

                    Dim f As Integer = _db.ExecuteStoreCommand("exec sp_INTERMEDIACION @p_ioperacion, @p_idsegmanusulog, @p_xnombrecortolog, @p_irespuesta output, @p_xmsjusuario output, @p_xmsjtecnico output, @p_coderrorlog output, @p_IDTABLA output, @p_NU_TICKET ,@p_TIPO_OPERACION , @p_TIPO_INSPECCION, @p_SUCURSAL, @p_SINIESTRO, @p_PLACA, @p_SERIALMOTOR, @p_FECHA , @p_ESTATUS, @p_USUARIO, @p_ORIGEN, @p_PERITO, @p_NU_COTIZA", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20, param21)


                    respopera.irespuesta = param4.Value
                    respopera.xmsjusuario = param5.Value
                    respopera.xmsjtecnico = param6.Value
                    If IsNumeric(param8.Value) = True Then
                        respopera.id = Int(param8.Value)
                    End If
                Else
                    respopera = ModificarIntermediacionExternaOracle(idtabla, xnumsininsenc, xplacinsenc, xsermotinsenc, iestatus, idsegmanusuperit, ncotizacion, xtipo_operacion, idsegmanorg)
                End If

                Return respopera

            Catch ex As Exception

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar generar la actividad solicitada."

                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function ModificarIntermediacionExternaOracle(idtabla As Decimal, xnumsininsenc As Integer, xplacinsenc As String, xsermotinsenc As String, iestatus As String, idsegmanusuperit As Decimal, ncotizacion As Integer, xtipo_operacion As String, idsegmanorg As Decimal) As respopera
            Dim respopera As New respopera
            Try

                'se realiza la busqueda del usuario perito para obtener su nombre 
                Dim vi_segusudetperf2Controller As New vi_segusudetperf2Controller

                Dim idsegmanapp As Decimal = ConfigurationManager.AppSettings("idsegmanapp")
                Dim vi_segusudetperf2 As vi_segusudetperf2 = vi_segusudetperf2Controller.selvi_segusudetperf2xid(idsegmanapp, idsegmanusuperit)

                Dim xnombrecompletoperit As String = ""
                If (vi_segusudetperf2 IsNot Nothing) Then
                    xnombrecompletoperit = vi_segusudetperf2.xcedula ''es la cedula porque en el se guarda el codigo del perito
                    If idsegmanorg <= 0 Then
                        idsegmanorg = vi_segusudetperf2.idsegmanorg
                    End If
                End If


                Dim param1 As New Client.OracleParameter
                param1.OracleDbType = Client.OracleDbType.Varchar2
                param1.Size = 20
                param1.Value = "actualizar"
                param1.ParameterName = "p_ioperacion"

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusulog"

                Dim param3 As New Client.OracleParameter
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecortolog"

                Dim param4 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.OracleDbType = Client.OracleDbType.Varchar2
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Varchar2
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Varchar2
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Varchar2
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New Client.OracleParameter
                param8.OracleDbType = Client.OracleDbType.Decimal
                param8.Value = idtabla
                param8.ParameterName = "p_IDTABLA"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New Client.OracleParameter
                param9.OracleDbType = Client.OracleDbType.Int16
                param9.Value = 0
                param9.ParameterName = "p_NU_TICKET"

                ''id de intermediacion
                Dim param10 As New Client.OracleParameter
                param10.OracleDbType = Client.OracleDbType.Varchar2
                param10.Size = 10
                If xtipo_operacion = "SUSCRIPCION" Then
                    param10.Value = xtipo_operacion.Substring(0, 10)
                Else
                    If xtipo_operacion = "SINIESTRO" Then
                        param10.Value = xtipo_operacion
                    Else
                        param10.Value = " "
                    End If
                End If
                param10.ParameterName = "p_TIPO_OPERACION"

                Dim param11 As New Client.OracleParameter
                param11.OracleDbType = Client.OracleDbType.Varchar2
                param11.Size = 1
                param11.Value = "E"
                param11.ParameterName = "p_TIPO_INSPECCION"

                Dim param12 As New Client.OracleParameter
                param12.OracleDbType = Client.OracleDbType.Int16
                param12.Value = idsegmanorg
                param12.ParameterName = "p_SUCURSAL"

                Dim param13 As New Client.OracleParameter
                param13.OracleDbType = Client.OracleDbType.Int32
                If xtipo_operacion = "SINIESTRO" Then ' esto se realiza dado que para la agenda se cambiara el titulo del campo de sinistro para que diga  siniestro o cotizacion dependiendo del tipo
                    param13.Value = xnumsininsenc
                Else
                    param13.Value = 0
                End If
                param13.ParameterName = "p_SINIESTRO"

                Dim param14 As New Client.OracleParameter
                param14.OracleDbType = Client.OracleDbType.Varchar2
                param14.Size = 20
                param14.Value = xplacinsenc
                param14.ParameterName = "p_PLACA"

                Dim param15 As New Client.OracleParameter
                param15.OracleDbType = Client.OracleDbType.Varchar2
                param15.Size = 30
                param15.Value = xsermotinsenc
                param15.ParameterName = "p_SERIALMOTOR"

                Dim param16 As New Client.OracleParameter
                param16.OracleDbType = Client.OracleDbType.Date
                param16.Value = Date.Now
                param16.ParameterName = "p_FECHA"

                Dim param17 As New Client.OracleParameter
                param17.OracleDbType = Client.OracleDbType.Varchar2
                param17.Size = 20
                If (iestatus IsNot Nothing) Then
                    If iestatus = "POR PROCESAR" Or iestatus = "POR AUDITAR" Or iestatus = "RECHAZAR" Or iestatus = "INICIALIZAR" Then
                        iestatus = "R"
                    Else
                        If iestatus = "CANCELAR" Then
                            iestatus = "R"
                        Else
                            If iestatus = "ACEPTAR" Then
                                iestatus = "F"
                            End If
                        End If
                    End If
                    param17.Value = iestatus
                Else
                    param17.Value = " "
                End If
                param17.ParameterName = "p_ESTATUS"

                Dim param18 As New Client.OracleParameter
                param18.OracleDbType = Client.OracleDbType.Varchar2
                param18.Size = 20
                param18.Value = "AIPAUTO"
                param18.ParameterName = "p_USUARIO"

                Dim param19 As New Client.OracleParameter
                param19.OracleDbType = Client.OracleDbType.Varchar2
                param19.Size = 200
                param19.Value = "AIPAUTO"
                param19.ParameterName = "p_ORIGEN"

                Dim param20 As New Client.OracleParameter
                param20.OracleDbType = Client.OracleDbType.Varchar2
                param20.Size = 200
                param20.Value = xnombrecompletoperit
                param20.ParameterName = "p_PERITO"

                Dim param21 As New Client.OracleParameter
                param21.OracleDbType = Client.OracleDbType.Int32
                If xtipo_operacion = "SUSCRIPCION" Then ' esto se realiza dado que para la agenda se cambiara el titulo del campo de sinistro para que diga  siniestro o cotizacion dependiendo del tipo                    
                    If xnumsininsenc.ToString.Length <= 10 Then
                        param21.Value = xnumsininsenc
                    Else
                        param21.Value = 0
                    End If
                Else
                    param21.Value = 0
                End If
                param21.ParameterName = "p_NU_COTIZA"

                Dim xdeclare As String = "DECLARE v_p_ioperacion VARCHAR2(32767); v_p_idsegmanusulog FLOAT; v_p_xnombrecortolog VARCHAR2(32767); v_p_irespuesta VARCHAR2(32767); v_p_xmsjusuario VARCHAR2(32767); v_p_xmsjtecnico VARCHAR2(32767); v_p_coderrorlog VARCHAR2(32767); v_p_IDTABLA FLOAT; v_p_nu_ticket number; v_p_tipo_operacion varchar2(32767); v_p_tipo_inspeccion varchar2(32767); v_p_sucursal number; v_p_siniestro number; v_p_placa varchar2(32767); v_p_serialmotor varchar2(32767); v_p_fecha date; v_p_estatus varchar2(32767); v_p_usuario varchar2(32767); v_p_origen varchar2(32767); v_p_perito varchar2(32767); v_p_nu_cotiza number;"
                Dim xsp As String = "begin sp_INTERMEDIACION(:v_p_ioperacion,:v_p_idsegmanusulog,:v_p_xnombrecortolog,:v_p_irespuesta,:v_p_xmsjusuario,:v_p_xmsjtecnico,:v_p_coderrorlog,:v_p_IDTABLA, :v_p_nu_ticket, :v_p_tipo_operacion, :v_p_tipo_inspeccion, :v_p_sucursal, :v_p_siniestro, :v_p_placa, :v_p_serialmotor, :v_p_fecha, :v_p_estatus, :v_p_usuario, :v_p_origen, :v_p_perito, :v_p_nu_cotiza); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20, param21)
                'Dim f As Integer = _db.ExecuteStoreCommand("exec sp_INTERMEDIACION @p_ioperacion, @p_idsegmanusulog, @p_xnombrecortolog, @p_irespuesta output, @p_xmsjusuario output, @p_xmsjtecnico output, @p_coderrorlog output, @p_IDTABLA output, @p_NU_TICKET ,@p_TIPO_OPERACION , @p_TIPO_INSPECCION, @p_SUCURSAL, @p_SINIESTRO, @p_PLACA, @p_SERIALMOTOR, @p_FECHA , @p_ESTATUS, @p_USUARIO, @p_ORIGEN, @p_PERITO, @p_NU_COTIZA", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20, param21)

                respopera.irespuesta = param4.Value.ToString()
                respopera.xmsjusuario = param5.Value.ToString()
                respopera.xmsjtecnico = param6.Value.ToString()
                If IsNumeric(param8.Value.ToString()) = True Then
                    respopera.id = Int(param8.Value.ToString())
                End If


                Return respopera

            Catch ex As Exception

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar generar la actividad solicitada."

                Return respopera
            End Try

        End Function



        <HttpPost()> _
        Public Function ModificarEstatusIntermediacionExterna(idtabla As Integer, iestatus As String, idsegmanusu As Decimal, xnomperito As String) As respopera
            Dim respopera As New respopera
            Try
                If ConfigurationManager.AppSettings("motoddb") = "sql" Then
                    Dim param1 As New SqlClient.SqlParameter
                    param1.SqlDbType = SqlDbType.Decimal
                    param1.Precision = 18
                    param1.Scale = 0
                    param1.Value = 0
                    param1.ParameterName = "p_idsegmanusuop"


                    Dim param2 As New SqlClient.SqlParameter
                    param2.SqlDbType = SqlDbType.VarChar
                    param2.Size = 20
                    param2.Value = "aipauto"
                    param2.ParameterName = "p_xnombrecorto"

                    Dim param3 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                    param3.SqlDbType = SqlDbType.VarChar
                    param3.Size = 1
                    param3.ParameterName = "p_irespuesta"
                    param3.Direction = ParameterDirection.Output

                    Dim param4 As New SqlClient.SqlParameter
                    param4.SqlDbType = SqlDbType.VarChar
                    param4.Size = 300
                    param4.ParameterName = "p_xmsjusuario"
                    param4.Direction = ParameterDirection.Output

                    Dim param5 As New SqlClient.SqlParameter
                    param5.SqlDbType = SqlDbType.VarChar
                    param5.Size = 300
                    param5.ParameterName = "p_xmsjtecnico"
                    param5.Direction = ParameterDirection.Output

                    Dim param6 As New SqlClient.SqlParameter
                    param6.SqlDbType = SqlDbType.VarChar
                    param6.Size = 300
                    param6.ParameterName = "p_coderrorlog"
                    param6.Direction = ParameterDirection.Output

                    'Paramestros de la tabla

                    Dim param7 As New SqlClient.SqlParameter
                    param7.SqlDbType = SqlDbType.Int
                    param7.Value = idtabla
                    param7.ParameterName = "p_idtabla"

                    Dim param8 As New SqlClient.SqlParameter
                    param8.SqlDbType = SqlDbType.VarChar
                    param8.Size = 20
                    If (iestatus IsNot Nothing) Then
                        param8.Value = iestatus
                    Else
                        param8.Value = ""
                    End If
                    param8.ParameterName = "p_iestatus"

                    Dim param9 As New SqlClient.SqlParameter
                    param9.SqlDbType = SqlDbType.VarChar
                    param9.Size = 20
                    If (iestatus IsNot Nothing) Then
                        param9.Value = xnomperito

                        If xnomperito.Length > 19 Then
                            param9.Value = xnomperito.Substring(0, 19)
                        Else
                            param9.Value = xnomperito
                        End If

                    Else
                        param9.Value = ""
                    End If
                    param9.ParameterName = "p_xnomperito"


                    Dim f As Integer = _db.ExecuteStoreCommand("exec sp_rnmodintermexterna @p_idsegmanusuop, @p_xnombrecorto, @p_irespuesta output, @p_xmsjusuario output, @p_xmsjtecnico output, @p_coderrorlog output, @p_idtabla, @p_iestatus, @p_xnomperito ", param1, param2, param3, param4, param5, param6, param7, param8, param9)


                    respopera.irespuesta = param3.Value
                    respopera.xmsjusuario = param4.Value
                    respopera.xmsjtecnico = param5.Value
                Else
                    respopera = ModificarEstatusIntermediacionExternaOracle(idtabla, iestatus, idsegmanusu)
                End If

                Return respopera

            Catch ex As Exception

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar actualizar el estatus de la intermediación."

                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function ModificarEstatusIntermediacionExternaOracle(idtabla As Integer, iestatus As String, idsegmanusuperit As Decimal) As respopera
            Dim respopera As New respopera
            Try

                'se realiza la busqueda del usuario perito para obtener su nombre 
                Dim vi_segusudetperf2Controller As New vi_segusudetperf2Controller

                Dim idsegmanapp As Decimal = ConfigurationManager.AppSettings("idsegmanapp")
                Dim vi_segusudetperf2 As vi_segusudetperf2 = vi_segusudetperf2Controller.selvi_segusudetperf2xid(idsegmanapp, idsegmanusuperit)

                Dim xnombrecompletoperit As String = ""
                If (vi_segusudetperf2 IsNot Nothing) Then
                    xnombrecompletoperit = vi_segusudetperf2.xcedula ''es la cedula porque en el se guarda el codigo del perito
                End If

                Dim param1 As New Client.OracleParameter
                param1.OracleDbType = Client.OracleDbType.Decimal
                param1.Precision = 18
                param1.Scale = 0
                param1.Value = 0
                param1.ParameterName = "p_idsegmanusuop"


                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Varchar2
                param2.Size = 20
                param2.Value = "aipauto"
                param2.ParameterName = "p_xnombrecorto"

                Dim param3 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 1
                param3.ParameterName = "p_irespuesta"
                param3.Direction = ParameterDirection.Output

                Dim param4 As New Client.OracleParameter
                param4.OracleDbType = Client.OracleDbType.Varchar2
                param4.Size = 300
                param4.ParameterName = "p_xmsjusuario"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Varchar2
                param5.Size = 300
                param5.ParameterName = "p_xmsjtecnico"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Varchar2
                param6.Size = 300
                param6.ParameterName = "p_coderrorlog"
                param6.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Decimal
                param7.Value = idtabla
                param7.ParameterName = "p_idtabla"

                Dim param8 As New Client.OracleParameter
                param8.OracleDbType = Client.OracleDbType.Varchar2
                param8.Size = 20
                If (iestatus IsNot Nothing) Then
                    If iestatus = "POR PROCESAR" Or iestatus = "POR AUDITAR" Or iestatus = "RECHAZAR" Or iestatus = "INICIALIZAR" Then
                        iestatus = "R"
                    Else
                        If iestatus = "CANCELAR" Then
                            iestatus = "R"
                        Else
                            If iestatus = "ACEPTAR" Then
                                iestatus = "F"
                            End If
                        End If
                    End If
                    param8.Value = iestatus
                Else
                    param8.Value = " "
                End If
                param8.ParameterName = "p_iestatus"

                Dim param9 As New Client.OracleParameter
                param9.OracleDbType = Client.OracleDbType.Varchar2
                param9.Size = 20
                param9.Value = xnombrecompletoperit
                param9.ParameterName = "p_perito"

                Dim xdeclare As String = "DECLARE v_p_idsegmanusuop number;  v_p_xnombrecorto varchar2(32767);  v_p_irespuesta varchar2(32767);  v_p_xmsjusuario varchar2(32767);  v_p_xmsjtecnico varchar2(32767);  v_p_coderrorlog varchar2(32767);  iv_p_idtabla number;  v_p_iestatus varchar2(32767); v_p_perito varchar2(32767);"
                Dim xsp As String = "begin sp_rnmodintermexterna(:v_p_idsegmanusuop,:v_p_xnombrecorto,:v_p_irespuesta,:v_p_xmsjusuario,:v_p_xmsjtecnico,:v_p_coderrorlog,:v_p_IDTABLA, :v_p_estatus, :v_p_perito); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7, param8, param9)

                'Dim f As Integer = _db.ExecuteStoreCommand("exec sp_rnmodintermexterna @p_idsegmanusuop, @p_xnombrecorto, @p_irespuesta output, @p_xmsjusuario output, @p_xmsjtecnico output, @p_coderrorlog output, @p_idtabla, @p_iestatus ", param1, param2, param3, param4, param5, param6, param7, param8)
                respopera.irespuesta = param3.Value.ToString()
                respopera.xmsjusuario = param4.Value.ToString()
                respopera.xmsjtecnico = param5.Value.ToString()

                Return respopera
            Catch ex As Exception

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar actualizar el estatus de la intermediación."

                Return respopera
            End Try

        End Function


        '<HttpPost()> _
        'Public Function GuardarInspeccionActividadExt(vi_aipinsenc As vi_aipinsenc) As respopera
        '    Dim respopera As New respopera
        '    Try

        '        Dim aipactivperiController As New aipactivperiController
        '        Dim aipactivperi As New aipactivperi

        '        If (vi_aipinsenc.idcomunmancont = 0) Then
        '            vi_aipinsenc.idcomunmancont = 1
        '        End If

        '        If (vi_aipinsenc.idcomunmanpais = 0) Then
        '            vi_aipinsenc.idcomunmanpais = 1
        '        End If

        '        Using tran1 As New TransactionScope

        '            vi_aipinsenc.iestatinsenc = "INICIALIZAR"

        '            Dim param1 As New SqlClient.SqlParameter
        '            param1.SqlDbType = SqlDbType.VarChar
        '            param1.Size = 20
        '            param1.Value = "insertar"
        '            param1.ParameterName = "p_ioperacion"

        '            Dim param2 As New SqlClient.SqlParameter
        '            param2.SqlDbType = SqlDbType.Decimal
        '            param2.Precision = 18
        '            param2.Scale = 0
        '            param2.Value = 0
        '            param2.ParameterName = "p_idsegmanusulog"

        '            Dim param3 As New SqlClient.SqlParameter
        '            param3.SqlDbType = SqlDbType.VarChar
        '            param3.Size = 20
        '            param3.Value = "aipauto"
        '            param3.ParameterName = "p_xnombrecortolog"

        '            Dim param4 As New SqlClient.SqlParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
        '            param4.SqlDbType = SqlDbType.VarChar
        '            param4.Size = 1
        '            param4.ParameterName = "p_irespuesta"
        '            param4.Direction = ParameterDirection.Output

        '            Dim param5 As New SqlClient.SqlParameter
        '            param5.SqlDbType = SqlDbType.VarChar
        '            param5.Size = 300
        '            param5.ParameterName = "p_xmsjusuario"
        '            param5.Direction = ParameterDirection.Output

        '            Dim param6 As New SqlClient.SqlParameter
        '            param6.SqlDbType = SqlDbType.VarChar
        '            param6.Size = 300
        '            param6.ParameterName = "p_xmsjtecnico"
        '            param6.Direction = ParameterDirection.Output

        '            Dim param7 As New SqlClient.SqlParameter
        '            param7.SqlDbType = SqlDbType.VarChar
        '            param7.Size = 300
        '            param7.ParameterName = "p_coderrorlog"
        '            param7.Direction = ParameterDirection.Output

        '            'Paramestros de la tabla

        '            Dim param8 As New SqlClient.SqlParameter
        '            param8.SqlDbType = SqlDbType.Decimal
        '            param8.Precision = 18
        '            param8.Scale = 0
        '            param8.Value = 0
        '            param8.ParameterName = "p_idaipinsenc"
        '            param8.Direction = ParameterDirection.Output

        '            Dim param9 As New SqlClient.SqlParameter
        '            param9.SqlDbType = SqlDbType.Decimal
        '            param9.Precision = 18
        '            param9.Scale = 0
        '            param9.Value = vi_aipinsenc.idaipactivperi
        '            param9.ParameterName = "p_idaipactivperi"

        '            ''id de intermediacion
        '            Dim param10 As New SqlClient.SqlParameter
        '            param10.SqlDbType = SqlDbType.Decimal
        '            param10.Precision = 18
        '            param10.Scale = 0
        '            param10.Value = vi_aipinsenc.idaipinsintext
        '            param10.ParameterName = "p_idaipinsintext"

        '            Dim param11 As New SqlClient.SqlParameter
        '            param11.SqlDbType = SqlDbType.VarChar
        '            param11.Size = 50
        '            If vi_aipinsenc.itipoinsenc IsNot Nothing Then
        '                param11.Value = vi_aipinsenc.itipoinsenc
        '            Else
        '                param11.Value = ""
        '            End If
        '            param11.ParameterName = "p_itipoinsenc"

        '            Dim param12 As New SqlClient.SqlParameter
        '            param12.SqlDbType = SqlDbType.VarChar
        '            param12.Size = 20
        '            If vi_aipinsenc.itipoperitinsenc IsNot Nothing Then
        '                param12.Value = vi_aipinsenc.itipoperitinsenc
        '            Else
        '                param12.Value = ""
        '            End If
        '            param12.ParameterName = "p_itipoperitinsenc"

        '            Dim param13 As New SqlClient.SqlParameter
        '            param13.SqlDbType = SqlDbType.NChar
        '            param13.Value = vi_aipinsenc.iorigeninsenc
        '            param13.ParameterName = "p_iorigeninsenc"

        '            Dim param14 As New SqlClient.SqlParameter
        '            param14.SqlDbType = SqlDbType.Decimal
        '            param14.Precision = 18
        '            param14.Scale = 0
        '            param14.Value = vi_aipinsenc.idsegmanusuperit
        '            param14.ParameterName = "p_idsegmanusuperit"

        '            Dim param15 As New SqlClient.SqlParameter
        '            param15.SqlDbType = SqlDbType.Decimal
        '            param15.Precision = 18
        '            param15.Scale = 0
        '            param15.Value = vi_aipinsenc.idsegmanusuaudit
        '            param15.ParameterName = "p_idsegmanusuaudit"

        '            Dim param16 As New SqlClient.SqlParameter
        '            param16.SqlDbType = SqlDbType.VarChar
        '            param16.Size = 20
        '            If vi_aipinsenc.xcedpropinsenc IsNot Nothing Then
        '                param16.Value = vi_aipinsenc.xcedpropinsenc
        '            Else
        '                param16.Value = ""
        '            End If
        '            param16.ParameterName = "p_xcedpropinsenc"

        '            Dim param17 As New SqlClient.SqlParameter
        '            param17.SqlDbType = SqlDbType.VarChar
        '            param17.Size = 20
        '            If vi_aipinsenc.xcedsidoinsenc IsNot Nothing Then
        '                param17.Value = vi_aipinsenc.xcedsidoinsenc
        '            Else
        '                param17.Value = ""
        '            End If
        '            param17.ParameterName = "p_xcedsidoinsenc"

        '            Dim param18 As New SqlClient.SqlParameter
        '            param18.SqlDbType = SqlDbType.VarChar
        '            param18.Size = 20
        '            If vi_aipinsenc.xplacinsenc IsNot Nothing Then
        '                param18.Value = vi_aipinsenc.xplacinsenc
        '            Else
        '                param18.Value = ""
        '            End If
        '            param18.ParameterName = "p_xplacinsenc"

        '            Dim param19 As New SqlClient.SqlParameter
        '            param19.SqlDbType = SqlDbType.VarChar
        '            param19.Size = 30
        '            If vi_aipinsenc.xsermotinsenc IsNot Nothing Then
        '                param19.Value = vi_aipinsenc.xsermotinsenc
        '            Else
        '                param19.Value = ""
        '            End If
        '            param19.ParameterName = "p_xsermotinsenc"

        '            Dim param20 As New SqlClient.SqlParameter
        '            param20.SqlDbType = SqlDbType.VarChar
        '            param20.Size = 30
        '            If vi_aipinsenc.xsercarrinsenc IsNot Nothing Then
        '                param20.Value = vi_aipinsenc.xsercarrinsenc
        '            Else
        '                param20.Value = ""
        '            End If
        '            param20.ParameterName = "p_xsercarrinsenc"

        '            Dim param21 As New SqlClient.SqlParameter
        '            param21.SqlDbType = SqlDbType.VarChar
        '            param21.Size = 50
        '            If vi_aipinsenc.xnumpolinsenc IsNot Nothing Then
        '                param21.Value = vi_aipinsenc.xnumpolinsenc
        '            Else
        '                param21.Value = ""
        '            End If
        '            param21.ParameterName = "p_xnumpolinsenc"

        '            Dim param22 As New SqlClient.SqlParameter
        '            param22.SqlDbType = SqlDbType.VarChar
        '            param22.Size = 50
        '            If vi_aipinsenc.xnumsininsenc IsNot Nothing Then
        '                param22.Value = vi_aipinsenc.xnumsininsenc
        '            Else
        '                param22.Value = ""
        '            End If
        '            param22.ParameterName = "p_xnumsininsenc"

        '            Dim param23 As New SqlClient.SqlParameter
        '            param23.SqlDbType = SqlDbType.VarChar
        '            param23.Size = 200
        '            If vi_aipinsenc.xllavinsenc IsNot Nothing Then
        '                param23.Value = vi_aipinsenc.xllavinsenc
        '            Else
        '                param23.Value = ""
        '            End If
        '            param23.ParameterName = "p_xllavinsenc"

        '            Dim param24 As New SqlClient.SqlParameter
        '            param24.SqlDbType = SqlDbType.DateTime
        '            If vi_aipinsenc.fcreainsenc > CDate("01-01-1900") Then
        '                param24.Value = vi_aipinsenc.fcreainsenc
        '            Else
        '                param24.Value = CDate("01-01-1900")
        '            End If
        '            param24.ParameterName = "p_fcreainsenc"

        '            Dim param25 As New SqlClient.SqlParameter
        '            param25.SqlDbType = SqlDbType.DateTime
        '            If vi_aipinsenc.fprocinsenc > CDate("01-01-1900") Then
        '                param25.Value = vi_aipinsenc.fprocinsenc
        '            Else
        '                param25.Value = CDate("01-01-1900")
        '            End If
        '            param25.ParameterName = "p_fprocinsenc"

        '            Dim param26 As New SqlClient.SqlParameter
        '            param26.SqlDbType = SqlDbType.DateTime
        '            If vi_aipinsenc.faudinsenc > CDate("01-01-1900") Then
        '                param26.Value = vi_aipinsenc.faudinsenc
        '            Else
        '                param26.Value = CDate("01-01-1900")
        '            End If
        '            param26.ParameterName = "p_faudinsenc"

        '            Dim param27 As New SqlClient.SqlParameter
        '            param27.SqlDbType = SqlDbType.DateTime
        '            If vi_aipinsenc.fultrechinsenc > CDate("01-01-1900") Then
        '                param27.Value = vi_aipinsenc.fultrechinsenc
        '            Else
        '                param27.Value = CDate("01-01-1900")
        '            End If
        '            param27.ParameterName = "p_fultrechinsenc"

        '            Dim param28 As New SqlClient.SqlParameter
        '            param28.SqlDbType = SqlDbType.Bit
        '            param28.Value = False
        '            param28.ParameterName = "p_irechinsenc"

        '            Dim param29 As New SqlClient.SqlParameter
        '            param29.SqlDbType = SqlDbType.VarChar
        '            param29.Size = 500
        '            param29.Value = ""
        '            param29.ParameterName = "p_xmotcrechinsenc"



        '            Dim param30 As New SqlClient.SqlParameter
        '            param30.SqlDbType = SqlDbType.DateTime
        '            If vi_aipinsenc.fcancinsenc > CDate("01-01-1900") Then
        '                param30.Value = vi_aipinsenc.fcancinsenc
        '            Else
        '                param30.Value = CDate("01-01-1900")
        '            End If
        '            param30.ParameterName = "p_fcancinsenc"

        '            Dim param31 As New SqlClient.SqlParameter
        '            param31.SqlDbType = SqlDbType.DateTime
        '            If vi_aipinsenc.facepinsenc > CDate("01-01-1900") Then
        '                param31.Value = vi_aipinsenc.facepinsenc
        '            Else
        '                param31.Value = CDate("01-01-1900")
        '            End If
        '            param31.ParameterName = "p_facepinsenc"

        '            Dim param32 As New SqlClient.SqlParameter
        '            param32.SqlDbType = SqlDbType.VarChar
        '            param32.Size = 500
        '            If vi_aipinsenc.xdescinsenc IsNot Nothing Then
        '                param32.Value = vi_aipinsenc.xdescinsenc
        '            Else
        '                param32.Value = ""
        '            End If
        '            param32.ParameterName = "p_xdescinsenc"

        '            Dim param33 As New SqlClient.SqlParameter
        '            param33.SqlDbType = SqlDbType.Bit
        '            param33.Value = vi_aipinsenc.icerrarinsenc
        '            param33.ParameterName = "p_icerrarinsenc"

        '            Dim param34 As New SqlClient.SqlParameter
        '            param34.SqlDbType = SqlDbType.VarChar
        '            param34.Size = 20
        '            If vi_aipinsenc.iestatinsenc IsNot Nothing Then
        '                param34.Value = vi_aipinsenc.iestatinsenc
        '            Else
        '                param34.Value = ""
        '            End If
        '            param34.ParameterName = "p_iestatinsenc"


        '            Dim param35 As New SqlClient.SqlParameter
        '            param35.SqlDbType = SqlDbType.Decimal
        '            param35.Precision = 18
        '            param35.Scale = 0
        '            param35.Value = 0
        '            param35.ParameterName = "p_idseglogreg"



        '            Dim param36 As New SqlClient.SqlParameter
        '            param36.SqlDbType = SqlDbType.Decimal
        '            param36.Precision = 18
        '            param36.Scale = 0
        '            param36.Value = vi_aipinsenc.idcomunmancont
        '            param36.ParameterName = "p_idcomunmancont"

        '            Dim param37 As New SqlClient.SqlParameter
        '            param37.SqlDbType = SqlDbType.Decimal
        '            param37.Precision = 18
        '            param37.Scale = 0
        '            param37.Value = vi_aipinsenc.idcomunmanpais
        '            param37.ParameterName = "p_idcomunmanpais"

        '            Dim param38 As New SqlClient.SqlParameter
        '            param38.SqlDbType = SqlDbType.Decimal
        '            param38.Precision = 18
        '            param38.Scale = 0
        '            param38.Value = vi_aipinsenc.idcomunmanestado
        '            param38.ParameterName = "p_idcomunmanestado"

        '            Dim param39 As New SqlClient.SqlParameter
        '            param39.SqlDbType = SqlDbType.Decimal
        '            param39.Precision = 18
        '            param39.Scale = 0
        '            param39.Value = vi_aipinsenc.idcomunmanlocalid
        '            param39.ParameterName = "p_idcomunmanlocalid"

        '            Dim param40 As New SqlClient.SqlParameter
        '            param40.SqlDbType = SqlDbType.DateTime
        '            If vi_aipinsenc.fejecactivperi > CDate("01-01-1900") Then
        '                param40.Value = vi_aipinsenc.fejecactivperi
        '            Else
        '                param40.Value = CDate("01-01-1900")
        '            End If
        '            param40.ParameterName = "p_fejecactivperi"

        '            Dim param41 As New SqlClient.SqlParameter
        '            param41.SqlDbType = SqlDbType.DateTime
        '            If vi_aipinsenc.ffinejecactivperi > CDate("01-01-1900") Then
        '                param41.Value = vi_aipinsenc.ffinejecactivperi
        '            Else
        '                param41.Value = CDate("01-01-1900")
        '            End If
        '            param41.ParameterName = "p_ffinejecactivperi"

        '            Dim param42 As New SqlClient.SqlParameter
        '            param42.SqlDbType = SqlDbType.VarChar
        '            param42.Size = 50
        '            If vi_aipinsenc.xdireccionactivperi IsNot Nothing Then
        '                param42.Value = vi_aipinsenc.xdireccionactivperi
        '            Else
        '                param42.Value = ""
        '            End If
        '            param42.ParameterName = "p_xdireccionactivperi"

        '            Dim param43 As New SqlClient.SqlParameter
        '            param43.SqlDbType = SqlDbType.VarChar
        '            param43.Size = 20
        '            If vi_aipinsenc.xtelfmovilactivperi IsNot Nothing Then
        '                param43.Value = vi_aipinsenc.xtelfmovilactivperi
        '            Else
        '                param43.Value = ""
        '            End If
        '            param43.ParameterName = "p_xtelfmovilactivperi"

        '            Dim param44 As New SqlClient.SqlParameter
        '            param44.SqlDbType = SqlDbType.VarChar
        '            param44.Size = 100
        '            If vi_aipinsenc.xnomcliactivperi IsNot Nothing Then
        '                param44.Value = vi_aipinsenc.xnomcliactivperi
        '            Else
        '                param44.Value = ""
        '            End If
        '            param44.ParameterName = "p_xnomcliactivperi"

        '            Dim param45 As New SqlClient.SqlParameter
        '            param45.SqlDbType = SqlDbType.VarChar
        '            param45.Size = 50
        '            If vi_aipinsenc.xcorreoelectronicoactivperi IsNot Nothing Then
        '                param45.Value = vi_aipinsenc.xcorreoelectronicoactivperi
        '            Else
        '                param45.Value = ""
        '            End If
        '            param45.ParameterName = "p_xcorreoelectronicoactivperi"

        '            Dim param46 As New SqlClient.SqlParameter
        '            param46.SqlDbType = SqlDbType.VarChar
        '            param46.Size = 100
        '            If vi_aipinsenc.xtituactivperi IsNot Nothing Then
        '                param46.Value = vi_aipinsenc.xtituactivperi
        '            Else
        '                param46.Value = ""
        '            End If
        '            param46.ParameterName = "p_xtituactivperi"

        '            Dim param47 As New SqlClient.SqlParameter
        '            param47.SqlDbType = SqlDbType.VarChar
        '            param47.Size = 500
        '            If vi_aipinsenc.xdescactivperi IsNot Nothing Then
        '                param47.Value = vi_aipinsenc.xdescactivperi
        '            Else
        '                param47.Value = ""
        '            End If
        '            param47.ParameterName = "p_xdescactivperi"

        '            Dim param48 As New SqlClient.SqlParameter
        '            param48.SqlDbType = SqlDbType.VarChar
        '            param48.Size = 20
        '            If vi_aipinsenc.ialcanactivperi IsNot Nothing Then
        '                param48.Value = vi_aipinsenc.ialcanactivperi
        '            Else
        '                param48.Value = ""
        '            End If
        '            param48.ParameterName = "p_ialcanactivperi"

        '            Dim param49 As New SqlClient.SqlParameter
        '            param49.SqlDbType = SqlDbType.VarChar
        '            param49.Size = 20
        '            If vi_aipinsenc.iestatactivperi IsNot Nothing Then
        '                param49.Value = vi_aipinsenc.iestatactivperi
        '            Else
        '                param49.Value = ""
        '            End If
        '            param49.ParameterName = "p_iestatactivperi"

        '            Dim param50 As New SqlClient.SqlParameter
        '            param50.SqlDbType = SqlDbType.Decimal
        '            param50.Precision = 18
        '            param50.Scale = 0
        '            param50.Value = vi_aipinsenc.idsegmanusucrea
        '            param50.ParameterName = "p_idsegmanusucrea"

        '            Dim param51 As New SqlClient.SqlParameter
        '            param51.SqlDbType = SqlDbType.DateTime
        '            If vi_aipinsenc.fcrearegactivperi > CDate("01-01-1900") Then
        '                param51.Value = vi_aipinsenc.fcrearegactivperi
        '            Else
        '                param51.Value = CDate("01-01-1900")
        '            End If
        '            param51.ParameterName = "p_fcrearegactivperi"

        '            'intermediacion
        '            Dim param52 As New SqlClient.SqlParameter
        '            param52.SqlDbType = SqlDbType.Int
        '            param52.Value = 0
        '            param52.ParameterName = "p_IDTABLA"

        '            Dim param53 As New SqlClient.SqlParameter
        '            param53.SqlDbType = SqlDbType.Int
        '            param53.Value = 0
        '            param53.ParameterName = "p_NU_TICKET"

        '            Dim param54 As New SqlClient.SqlParameter
        '            param54.SqlDbType = SqlDbType.VarChar
        '            param54.Size = 20
        '            param54.Value = "INSERTAR"
        '            param54.ParameterName = "p_TIPO_OPERACION"

        '            Dim param55 As New SqlClient.SqlParameter
        '            param55.SqlDbType = SqlDbType.VarChar
        '            param55.Size = 1
        '            param55.Value = "I"
        '            param55.ParameterName = "p_TIPO_INSPECCION"

        '            Dim param56 As New SqlClient.SqlParameter
        '            param56.SqlDbType = SqlDbType.DateTime
        '            param56.Value = Date.Now.ToString("dd/MM/yyyy")
        '            param56.ParameterName = "p_FECHA"

        '            Dim param57 As New SqlClient.SqlParameter
        '            param57.SqlDbType = SqlDbType.VarChar
        '            param57.Size = 20
        '            If vi_aipinsenc.iestatinsenc IsNot Nothing Then
        '                param57.Value = vi_aipinsenc.iestatinsenc
        '            Else
        '                param57.Value = ""
        '            End If
        '            param57.ParameterName = "p_ESTATUS"

        '            Dim param58 As New SqlClient.SqlParameter
        '            param58.SqlDbType = SqlDbType.VarChar
        '            param58.Size = 200
        '            param58.Value = "EXTERNA"
        '            param58.ParameterName = "p_ORIGEN"




        '            Dim f As Integer = _db.ExecuteStoreCommand("exec sp_rnCrearInspeccion @p_ioperacion, @p_xnombrecortolog, @p_irespuesta output, @p_xmsjusuario output, @p_xmsjtecnico output, @p_coderrorlog output, @p_idaipinsenc output, @p_idaipactivperi, @p_idaipinsintext, @p_itipoinsenc, @p_itipoperitinsenc, @p_iorigeninsenc, @p_idsegmanusuperit, @p_idsegmanusuaudit, @p_xcedpropinsenc, @p_xcedsidoinsenc, @p_xplacinsenc,@p_xsermotinsenc,@p_xsercarrinsenc,@p_xnumpolinsenc, @p_xnumsininsenc, @p_xllavinsenc, @p_fcreainsenc, @p_fprocinsenc,@p_faudinsenc,  @p_fultrechinsenc, @p_irechinsenc, @p_xmotcrechinsenc, @p_fcancinsenc, @p_facepinsenc,@p_xdescinsenc, @p_icerrarinsenc,@p_iestatinsenc,@p_idseglogreg, @p_idcomunmancont, @p_idcomunmanpais ,@p_idcomunmanestado , @p_idcomunmanlocalid ,@p_fejecactivperi , @p_ffinejecactivperi ,@p_xdireccionactivperi , @p_xtelfmovilactivperi ,@p_xnomcliactivperi , @p_xcorreoelectronicoactivperi ,@p_xtituactivperi , @p_xdescactivperi ,@p_ialcanactivperi , @p_iestatactivperi ,@p_idsegmanusucrea , @p_fcrearegactivperi ,@p_IDTABLA , @p_NU_TICKET ,@p_TIPO_OPERACION , @p_TIPO_INSPECCION ,@p_FECHA , @p_ESTATUS ,@p_ORIGEN", param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20, param21, param22, param23, param24, param25, param26, param27, param28, param29, param30, param31, param32, param33, param34, param35, param36, param37, param38, param39, param40, param41, param42, param43, param44, param45, param46, param47, param48, param49, param50, param51, param52, param53, param54, param55, param56, param57, param58)


        '            respopera.irespuesta = param3.Value
        '            respopera.xmsjusuario = param4.Value
        '            respopera.xmsjtecnico = param5.Value
        '            If IsNumeric(param8.Value) = True Then
        '                respopera.id = Int(param8.Value)
        '            End If


        '            If (respopera.irespuesta = "1") Then
        '                tran1.Complete()
        '            End If

        '        End Using

        '        Return respopera

        '    Catch ex As Exception

        '        respopera.irespuesta = "0"
        '        respopera.xmsjusuario = "Ha ocurrido un error al intentar generar la actividad solicitada."

        '        Return respopera
        '    End Try

        'End Function


        <HttpPost()> _
        Public Function ObtenerSuscripcionInfComplementaria(idaipinssus As Decimal) As List(Of vi_aipinssusinfcomp)

            Dim vi_aipinssusinfcompController As New vi_aipinssusinfcompController
            Dim lista_vi_aipinssusinfcomp As List(Of vi_aipinssusinfcomp) = vi_aipinssusinfcompController.selvi_aipinssusinfcompxidsus(idaipinssus)


            Return lista_vi_aipinssusinfcomp

        End Function

        <HttpPost()> _
        Public Function SubirArchivoInspeccion(idaipinsenc As Decimal, idsegmanusu As Decimal, UploadFilesResult As UploadFilesResult) As respopera

            Dim respopera As New respopera
            Dim aipinsfotoController As New aipinsfotoController
            Dim vi_aipinsencController As New vi_aipinsencController

            UploadFilesResult.Type = UploadFilesResult.Type.ToLower
            If (UploadFilesResult.Type <> ".jpg" And UploadFilesResult.Type <> ".jpeg" And UploadFilesResult.Type <> ".png" And UploadFilesResult.Type <> ".gif") Then
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "El formato " & UploadFilesResult.Type & " no es permitido, formatos soportados (.jpg, .jpeg, .png, .gif)"
                Return respopera
            End If



            Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(idaipinsenc)
            Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta")


            Dim xrutatipoenc As String = ""
            If (vi_aipinsenc IsNot Nothing) Then
                Select Case vi_aipinsenc.itipoinsenc
                    Case "SUSCRIPCION"
                        xrutatipoenc = "fotosmovil\suscripcion\"
                    Case "SINIESTRO"
                        xrutatipoenc = "fotosmovil\siniestro\"
                End Select
            End If


            Dim xrutadefinitiva As String = xrutaraiz & xrutatipoenc & "ok\"
            'CrearCarpeta(xrutadefinitiva)

            Dim nsecuenAnterior As Decimal = aipinsfotoController.maxcontfotoXidaipinsenc(idaipinsenc)
            'ADAPTACION PARA OBTENER LA ULTIMA SECUENCIA DE LA IMAGEN POR INSPECCION PARA LA NUEVA ADAPTACION DE SISEP
            Dim nsecuenciaFoto As Integer = nsecuenAnterior + 1
            Dim xextinsfoto As String = ".jpg"
            Dim xnomarchinsfoto As String = "insfoto_" & idaipinsenc & "_" & nsecuenciaFoto & xextinsfoto

            'File.WriteAllBytes(xrutadefinitiva & xnomarchinsfoto, UploadFilesResult.ArchivoByte)

            'Redimension de la imagen a la carpeta ok
            Dim xruta_ok As String = xrutadefinitiva
            Dim redimensiono As Boolean = False
            redimensiono = redimensionar_imagen(xruta_ok, 1000, 800, xnomarchinsfoto, UploadFilesResult.ArchivoByte)

            'si no redimensiono la imagen se intenta en 3 oportunidades 
            If Not redimensiono Then
                Dim i As Decimal = 0
                While redimensiono = False
                    redimensiono = redimensionar_imagen(xruta_ok, 1000, 800, xnomarchinsfoto, UploadFilesResult.ArchivoByte)
                    If i = 3 Then
                        redimensiono = True
                    End If
                    i += 1
                End While
            End If


            'Redimension de la imagen a la carpeta ZOOM
            Dim xruta_zoom As String = xrutadefinitiva & "zoom\"
            redimensiono = False
            redimensiono = redimensionar_imagen(xruta_zoom, 2000, 1600, xnomarchinsfoto, UploadFilesResult.ArchivoByte)

            'si no redimensiono la imagen se intenta en 3 oportunidades 
            If Not redimensiono Then
                Dim i As Decimal = 0
                While redimensiono = False
                    redimensiono = redimensionar_imagen(xruta_zoom, 2000, 1600, xnomarchinsfoto, UploadFilesResult.ArchivoByte)
                    If i = 3 Then
                        redimensiono = True
                    End If
                    i += 1
                End While
            End If
            '*************************************************************
            'Redimension de la imagen a la carpeta thumbnail(miniatura)
            Dim xruta_thumbnail As String = xrutadefinitiva & "thumbnail\"
            Dim redimensiono_thumbnail As Boolean = False
            redimensiono_thumbnail = redimensionar_imagen(xruta_thumbnail, 170, 136, xnomarchinsfoto, UploadFilesResult.ArchivoByte)

            'si no redimensiono la imagen se intenta en 3 oportunidades 
            If Not redimensiono_thumbnail Then
                Dim i As Decimal = 0
                While redimensiono_thumbnail = False
                    redimensiono_thumbnail = redimensionar_imagen(xruta_thumbnail, 170, 136, xnomarchinsfoto, UploadFilesResult.ArchivoByte)
                    If i = 3 Then
                        redimensiono_thumbnail = True
                    End If
                    i += 1
                End While
            End If

            ''***************************************************************

            'si guarda de forma correcta el enc y la foto en la ruta definitiva guardar los datos en la tabla de la foto                    
            Dim descripcion = ""
            Dim vi_segmanusuController As New vi_segmanusuController
            Dim vi_segmanusu As vi_segmanusu = vi_segmanusuController.selvi_segmanusuxid(idsegmanusu)

            descripcion = "Foto Cargada directamente desde la web"
            If (vi_segmanusu IsNot Nothing) Then
                descripcion = descripcion & " por " & vi_segmanusu.xnombrecompleto
            End If

            Dim lat As String = "10.498172"
            Dim log As String = "-66.846073"


            Dim aipinsfoto As New aipinsfoto
            With aipinsfoto
                .idaipinsfoto = 0
                .idaipinsenc = vi_aipinsenc.idaipinsenc
                .nsecinsfoto = nsecuenciaFoto
                .xrutainsfoto = xrutadefinitiva
                .xurlinsfoto = ""
                .xtituinsfoto = "" 'verificar
                .xnomarchinsfoto = xnomarchinsfoto
                .xextinsfoto = xextinsfoto
                .xlatcinsfoto = lat
                .xlonginsfoto = log
                .ioriginsfoto = "CARGADA POR LA WEB"
                .xdescinsfoto = descripcion
                '.xdescinsfoto = fecha
                .iestatinsfoto = "ACTIVA"
                .fcreaaipinsfoto = Date.Now
                '.fcreaaipinsfoto = Date.Now
                .idseglogreg = 0
            End With
            respopera = aipinsfotoController.insaipinsfoto(aipinsfoto)
            If (respopera.irespuesta = "1") Then
                respopera.xmsjusuario = "Su imagen se ha cargado correctamente."
            End If

            Return respopera
        End Function

        'intermediacion
        <HttpPost()> _
        Public Function ObtenerInspeccionesIntermediacion(petivi_intermediacionpaglist As petivi_intermediacionpaglist) As respvi_intermediacionpaglist
            Dim respvi_intermediacionpaglist As respvi_intermediacionpaglist
            Dim vi_intermediacionController As New vi_intermediacionController

            respvi_intermediacionpaglist = vi_intermediacionController.selvi_intermediacionxwheredinamicopag(petivi_intermediacionpaglist)
            Return respvi_intermediacionpaglist
        End Function

        <HttpPost()> _
        Public Function ObtenerInpeccionesIntermediacionPendiente(petivi_intermediacionpaglist As petivi_intermediacionpaglist) As respvi_intermediacionpaglist
            Dim respvi_intermediacionpaglist As respvi_intermediacionpaglist
            Dim vi_intermediacionController As New vi_intermediacionController
            respvi_intermediacionpaglist = vi_intermediacionController.selvi_intermediacionpendientepag(petivi_intermediacionpaglist)

            If respvi_intermediacionpaglist.lista_vi_intermediacion.Count > 0 Then
                For i As Integer = 0 To respvi_intermediacionpaglist.lista_vi_intermediacion.Count - 1
                    If respvi_intermediacionpaglist.lista_vi_intermediacion(i).siniestro > 0 Then
                        respvi_intermediacionpaglist.lista_vi_intermediacion(i).itipoinsenc = "SINIESTRO"
                        respvi_intermediacionpaglist.lista_vi_intermediacion(i).xnumsininsenc = respvi_intermediacionpaglist.lista_vi_intermediacion(i).siniestro 'este campo se trabaja como cotizacion o siniestro 
                    Else
                        respvi_intermediacionpaglist.lista_vi_intermediacion(i).itipoinsenc = "SUSCRIPCION"
                        respvi_intermediacionpaglist.lista_vi_intermediacion(i).xnumsininsenc = respvi_intermediacionpaglist.lista_vi_intermediacion(i).nu_cotiza 'este campo se trabaja como cotizacion o siniestro 
                    End If
                Next
            End If
            Return respvi_intermediacionpaglist
        End Function

        <HttpPost()> _
        Public Function ObtenerInpeccionesIntermediacionAsignada(petivi_intermediacionpaglist As petivi_intermediacionpaglist) As respvi_intermediacionpaglist
            Dim respvi_intermediacionpaglist As respvi_intermediacionpaglist
            Dim vi_intermediacionController As New vi_intermediacionController
            respvi_intermediacionpaglist = vi_intermediacionController.selvi_intermediacionasignadapag(petivi_intermediacionpaglist)

            If respvi_intermediacionpaglist.lista_vi_intermediacion.Count > 0 Then
                For i As Integer = 0 To respvi_intermediacionpaglist.lista_vi_intermediacion.Count - 1
                    If respvi_intermediacionpaglist.lista_vi_intermediacion(i).siniestro > 0 Then
                        respvi_intermediacionpaglist.lista_vi_intermediacion(i).itipoinsenc = "SINIESTRO"
                        respvi_intermediacionpaglist.lista_vi_intermediacion(i).xnumsininsenc = respvi_intermediacionpaglist.lista_vi_intermediacion(i).siniestro 'este campo se trabaja como cotizacion o siniestro 
                    Else
                        respvi_intermediacionpaglist.lista_vi_intermediacion(i).itipoinsenc = "SUSCRIPCION"
                        respvi_intermediacionpaglist.lista_vi_intermediacion(i).xnumsininsenc = respvi_intermediacionpaglist.lista_vi_intermediacion(i).nu_cotiza 'este campo se trabaja como cotizacion o siniestro 
                    End If
                Next
            End If
            Return respvi_intermediacionpaglist
        End Function

        <HttpPost()> _
        Public Function TotalInspeccionesIntermediacion() As aipinstotalpers
            Try
                Dim aipinstotalpers As New aipinstotalpers
                Dim vi_intermediacionController As New vi_intermediacionController
                aipinstotalpers.ninstotalpersasig = vi_intermediacionController.seltotalasig()
                aipinstotalpers.ninstotalperspend = vi_intermediacionController.seltotalpend()
                'nprecfininssinmobr = vi_aipinssinmobrController.selnprecfininssinmobrxidaipinssin(idaipinssin)
                Return aipinstotalpers
            Catch ex As Exception
                Dim aipinstotalpers As New aipinstotalpers
                aipinstotalpers.ninstotalpersasig = 0
                aipinstotalpers.ninstotalperspend = 0
                Return aipinstotalpers
            End Try
        End Function

        <HttpPost()> _
        Public Function ExisteInspeccionPorAgendar(idintermediacion As Decimal) As respopera
            Try
                Dim respopera As New respopera
                respopera.irespuesta = 1
                respopera.xmsjusuario = "OK"
                respopera.xmsjtecnico = "OK"

                Dim aipinstotalpers As New aipinstotalpers
                Dim vi_intermediacionController As New vi_intermediacionController
                Dim iexiste As Boolean = vi_intermediacionController.selexistepend(idintermediacion)
                If iexiste = False Then 'sino existe hay que sacarlo de la lista de pendientes
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "La inspección indicada ya está agendada por lo que se sacara de la lista de pendientes."
                    respopera.xmsjtecnico = "La inspección indicada ya está agendada por lo que se sacara de la lista de pendientes."

                End If

                Return respopera
            Catch ex As Exception
                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ExisteInspeccionPorAgendar ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ObtenerPlacasIntermediacionPendiente() As List(Of comunconfvalor)
            Dim lista_comunconfvalor As New List(Of comunconfvalor)
            Dim comunconfvalor As New comunconfvalor
            Dim lista_placas As List(Of String)
            Dim vi_intermediacionController As New vi_intermediacionController
            lista_placas = vi_intermediacionController.sellistaxplacapend()
            Dim nexiste As Integer = 0
            Dim xplaca As String = ""
            If lista_placas.Count > 0 Then
                For i As Integer = 0 To lista_placas.Count - 1
                    xplaca = lista_placas(i)
                    nexiste = (From p In lista_comunconfvalor Where p.xvalorcodigo = xplaca Select p).ToList().Count
                    If nexiste <= 0 Then
                        comunconfvalor = New comunconfvalor
                        comunconfvalor.xvalorcodigo = xplaca
                        comunconfvalor.xvalordescripcion = xplaca
                        comunconfvalor.idcomunconfvalor = i
                        lista_comunconfvalor.Add(comunconfvalor)
                    End If
                Next
            End If

            comunconfvalor = New comunconfvalor
            comunconfvalor.xvalorcodigo = ""
            comunconfvalor.xvalordescripcion = "SELECCIONE..."
            comunconfvalor.idcomunconfvalor = 0
            lista_comunconfvalor.Insert(0, comunconfvalor)

            Return lista_comunconfvalor
        End Function

        <HttpPost()> _
        Public Function ObtenerDatosInspeccionRector(idaipinsintext As Decimal) As vi_aipinsenc
            Dim respopera As New respopera
            Try

                Dim param1 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param1.OracleDbType = Client.OracleDbType.Varchar2
                param1.Size = 1
                param1.ParameterName = "p_irespuesta"
                param1.Direction = ParameterDirection.Output

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Varchar2
                param2.Size = 300
                param2.ParameterName = "p_xmsjusuario"
                param2.Direction = ParameterDirection.Output

                Dim param3 As New Client.OracleParameter
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 300
                param3.ParameterName = "p_xmsjtecnico"
                param3.Direction = ParameterDirection.Output

                'Paramestros
                Dim param4 As New Client.OracleParameter
                param4.OracleDbType = Client.OracleDbType.Decimal
                param4.Value = idaipinsintext
                param4.ParameterName = "p_idtabla"                

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Varchar2
                param5.Size = 50
                param5.ParameterName = "p_itipoinsenc"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Decimal
                param6.Precision = 18
                param6.ParameterName = "p_idaipinsmotiv"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Varchar2
                param7.Size = 20
                param7.ParameterName = "p_itipoperitinsenc"
                param7.Direction = ParameterDirection.Output

                Dim param8 As New Client.OracleParameter
                param8.OracleDbType = Client.OracleDbType.Varchar2
                param8.Size = 20
                param8.ParameterName = "p_xcedpropinsenc"
                param8.Direction = ParameterDirection.Output

                Dim param9 As New Client.OracleParameter
                param9.OracleDbType = Client.OracleDbType.Varchar2
                param9.Size = 100
                param9.ParameterName = "p_xnomcliactivperi"
                param9.Direction = ParameterDirection.Output

                Dim param10 As New Client.OracleParameter
                param10.OracleDbType = Client.OracleDbType.Varchar2
                param10.Size = 20
                param10.ParameterName = "p_xplacinsenc"
                param10.Direction = ParameterDirection.Output

                Dim param11 As New Client.OracleParameter
                param11.OracleDbType = Client.OracleDbType.Varchar2
                param11.Size = 30
                param11.ParameterName = "p_xsermotinsenc"
                param11.Direction = ParameterDirection.Output

                Dim param12 As New Client.OracleParameter
                param12.OracleDbType = Client.OracleDbType.Varchar2
                param12.Size = 30
                param12.ParameterName = "p_xsercarrinsenc"
                param12.Direction = ParameterDirection.Output

                Dim param13 As New Client.OracleParameter
                param13.OracleDbType = Client.OracleDbType.Varchar2
                param13.Size = 50
                param13.ParameterName = "p_xnumpolinsenc"
                param13.Direction = ParameterDirection.Output

                Dim param14 As New Client.OracleParameter
                param14.OracleDbType = Client.OracleDbType.Varchar2
                param14.Size = 50
                param14.ParameterName = "p_xnumsininsenc"
                param14.Direction = ParameterDirection.Output

                Dim param15 As New Client.OracleParameter
                param15.OracleDbType = Client.OracleDbType.Varchar2
                param15.Size = 50
                param15.ParameterName = "p_xnomprodinsenc"
                param15.Direction = ParameterDirection.Output

                Dim param16 As New Client.OracleParameter
                param16.OracleDbType = Client.OracleDbType.Varchar2
                param16.Size = 100
                param16.ParameterName = "p_xnomprodtorinsenc"
                param16.Direction = ParameterDirection.Output

                Dim param17 As New Client.OracleParameter
                param17.OracleDbType = Client.OracleDbType.Varchar2
                param17.Size = 100
                param17.ParameterName = "p_xnomramopolizinsenc"
                param17.Direction = ParameterDirection.Output

                Dim param18 As New Client.OracleParameter
                param18.OracleDbType = Client.OracleDbType.Varchar2
                param18.Size = 100
                param18.ParameterName = "p_xnomsucinsinsenc"
                param18.Direction = ParameterDirection.Output

                Dim param19 As New Client.OracleParameter
                param19.OracleDbType = Client.OracleDbType.Date
                param19.ParameterName = "p_fcreainsenc"
                param19.Direction = ParameterDirection.Output

                Dim param20 As New Client.OracleParameter
                param20.OracleDbType = Client.OracleDbType.Varchar2
                param20.Size = 50
                param20.ParameterName = "p_xcorrlecactivperi"
                param20.Direction = ParameterDirection.Output

                Dim param21 As New Client.OracleParameter
                param21.OracleDbType = Client.OracleDbType.Varchar2
                param21.Size = 20
                param21.ParameterName = "p_xtelfmovilactivperi"
                param21.Direction = ParameterDirection.Output

                Dim param22 As New Client.OracleParameter
                param22.OracleDbType = Client.OracleDbType.Varchar2
                param22.Size = 50
                param22.ParameterName = "p_xdireccionactivperi"
                param22.Direction = ParameterDirection.Output

                Dim param23 As New Client.OracleParameter
                param23.OracleDbType = Client.OracleDbType.Decimal
                param23.Precision = 18
                param23.ParameterName = "p_idcomunmanestado"
                param23.Direction = ParameterDirection.Output

                Dim param24 As New Client.OracleParameter
                param24.OracleDbType = Client.OracleDbType.Decimal
                param24.Precision = 18
                param24.ParameterName = "p_idcomunmanlocalid"
                param24.Direction = ParameterDirection.Output

                Dim xdeclare As String = "DECLARE v_p_irespuesta varchar2(32767);  v_p_xmsjusuario varchar2(32767);  v_p_xmsjtecnico varchar2(32767);  v_p_idtabla float;  v_p_itipoinsenc varchar2(32767);  v_p_idaipinsmotiv float;  v_p_itipoperitinsenc varchar2(32767);  v_p_xcedpropinsenc varchar2(32767);  v_p_xnomcliactivperi varchar2(32767);  v_p_xplacinsenc varchar2(32767);  v_p_xsermotinsenc varchar2(32767);  v_p_xsercarrinsenc varchar2(32767);  v_p_xnumpolinsenc varchar2(32767);  v_p_xnumsininsenc varchar2(32767);  v_p_xnomprodinsenc varchar2(32767);  v_p_xnomprodtorinsenc varchar2(32767);  v_p_xnomramopolizinsenc varchar2(32767);  v_p_xnomsucinsinsenc varchar2(32767);  v_p_fcreainsenc date;  v_p_xcorrlecactivperi varchar2(32767);  v_p_xtelfmovilactivperi varchar2(32767); v_p_xdireccionactivperi varchar2(32767); v_p_idcomunmanestado float;  v_p_idcomunmanlocalid float;"
                Dim xsp As String = "begin sp_rnObtenerDatosInspec(:v_p_irespuesta,  :v_p_xmsjusuario,  :v_p_xmsjtecnico,  :v_p_idtabla,  :v_p_itipoinsenc,  :v_p_idaipinsmotiv,  :v_p_itipoperitinsenc,  :v_p_xcedpropinsenc,  :v_p_xnomcliactivperi,  :v_p_xplacinsenc,  :v_p_xsermotinsenc,  :v_p_xsercarrinsenc,  :v_p_xnumpolinsenc,  :v_p_xnumsininsenc,  :v_p_xnomprodinsenc,  :v_p_xnomprodtorinsenc,  :v_p_xnomramopolizinsenc,  :v_p_xnomsucinsinsenc,  :v_p_fcreainsenc, :v_p_xcorrlecactivperi, :v_p_xtelfmovilactivperi, :v_p_xdireccionactivperi,  :v_p_idcomunmanestado,  :v_p_idcomunmanlocalid); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20, param21, param22, param23, param24)

                'Dim xdeclare As String = "DECLARE v_p_irespuesta varchar2(32767);  v_p_xmsjusuario varchar2(32767);  v_p_xmsjtecnico varchar2(32767);  v_p_idtabla number;"                
                'Dim xsp As String = "begin SP_RNOBTENERDATOSINSPEC(:v_p_irespuesta,  :v_p_xmsjusuario,  :v_p_xmsjtecnico,  :v_p_idtabla); end;"                
                'Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4)


                Dim vi_aipinsenc As New vi_aipinsenc

                vi_aipinsenc.itipoinsenc = param5.Value.ToString().Trim()
                vi_aipinsenc.idaipinsmotiv = param6.Value.ToString()
                vi_aipinsenc.itipoperitinsenc = param7.Value.ToString().Trim()
                vi_aipinsenc.xcedpropinsenc = param8.Value.ToString().Trim()
                vi_aipinsenc.xnomcliactivperi = param9.Value.ToString().Trim()
                vi_aipinsenc.xplacinsenc = param10.Value.ToString().Trim()
                vi_aipinsenc.xsermotinsenc = param11.Value.ToString().Trim()
                vi_aipinsenc.xsercarrinsenc = param12.Value.ToString().Trim()
                vi_aipinsenc.xnumpolinsenc = param13.Value.ToString().Trim()
                vi_aipinsenc.xnumsininsenc = param14.Value.ToString().Trim()
                vi_aipinsenc.xnomprodinsenc = param15.Value.ToString().Trim()
                vi_aipinsenc.xnomprodtorinsenc = param16.Value.ToString().Trim()
                vi_aipinsenc.xnomramopolizinsenc = param17.Value.ToString().Trim()
                vi_aipinsenc.xnomsucinsinsenc = param18.Value.ToString().Trim()
                vi_aipinsenc.fcreainsenc = param19.Value.ToString()
                vi_aipinsenc.xcorreoelectronicoactivperi = param20.Value.ToString().Trim()
                vi_aipinsenc.xtelfmovilactivperi = param21.Value.ToString().Trim()
                vi_aipinsenc.xdireccionactivperi = param22.Value.ToString().Trim()
                vi_aipinsenc.idcomunmanestado = param23.Value.ToString()
                vi_aipinsenc.idcomunmanlocalid = param24.Value.ToString()

                Return vi_aipinsenc
            Catch ex As Exception

                Dim vi_aipinsenc As New vi_aipinsenc
                Return vi_aipinsenc
            End Try

        End Function

        <HttpPost()> _
        Public Function ObtenerIdManRepuestoInternoPorIdExterno(idrepuext As Decimal) As Decimal            
            Try

                Dim param1 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param1.OracleDbType = Client.OracleDbType.Varchar2
                param1.Size = 1
                param1.ParameterName = "p_irespuesta"
                param1.Direction = ParameterDirection.Output

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Varchar2
                param2.Size = 300
                param2.ParameterName = "p_xmsjusuario"
                param2.Direction = ParameterDirection.Output

                Dim param3 As New Client.OracleParameter
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 300
                param3.ParameterName = "p_xmsjtecnico"
                param3.Direction = ParameterDirection.Output

                'Parametros
                Dim param4 As New Client.OracleParameter
                param4.OracleDbType = Client.OracleDbType.Decimal
                param4.Value = idrepuext
                param4.ParameterName = "p_cd_repuesto"

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Decimal
                param5.Precision = 18
                param5.ParameterName = "p_idaipmanrepu"
                param5.Direction = ParameterDirection.Output

                Dim xdeclare As String = "DECLARE v_p_irespuesta varchar2(32767);  v_p_xmsjusuario varchar2(32767);  v_p_xmsjtecnico varchar2(32767);  v_p_cd_repuesto float; v_p_idaipmanrepu float;"
                Dim xsp As String = "begin SP_RNOBTENERIDMANREPUINT(:v_p_irespuesta,  :v_p_xmsjusuario,  :v_p_xmsjtecnico,  :v_p_cd_repuesto,  :v_p_idaipmanrepu); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5)

                Return param5.Value.ToString()

            Catch ex As Exception
                Return 0
            End Try

        End Function

        <HttpPost()> _
        Public Function ObtenerIdExternoPorIdManRepuestoInterno(idaipmanrepu As Decimal) As Decimal            
            Try

                Dim param1 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param1.OracleDbType = Client.OracleDbType.Varchar2
                param1.Size = 1
                param1.ParameterName = "p_irespuesta"
                param1.Direction = ParameterDirection.Output

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Varchar2
                param2.Size = 300
                param2.ParameterName = "p_xmsjusuario"
                param2.Direction = ParameterDirection.Output

                Dim param3 As New Client.OracleParameter
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 300
                param3.ParameterName = "p_xmsjtecnico"
                param3.Direction = ParameterDirection.Output

                'Parametros
                Dim param4 As New Client.OracleParameter
                param4.OracleDbType = Client.OracleDbType.Decimal
                param4.Value = idaipmanrepu
                param4.ParameterName = "idaipmanrepu"

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Decimal
                param5.Precision = 18
                param5.ParameterName = "p_cd_repuesto"
                param5.Direction = ParameterDirection.Output

                Dim xdeclare As String = "DECLARE v_p_irespuesta varchar2(32767);  v_p_xmsjusuario varchar2(32767);  v_p_xmsjtecnico varchar2(32767);  v_p_idaipmanrepu float; v_p_cd_repuesto float;"
                Dim xsp As String = "begin SP_RNOBTENERIDMANREPUEXT(:v_p_irespuesta,  :v_p_xmsjusuario,  :v_p_xmsjtecnico,  :v_p_idaipmanrepu, :v_p_cd_repuesto); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5)

                Return param5.Value.ToString()

            Catch ex As Exception
                Return 0
            End Try

        End Function

        <HttpPost()> _
        Public Function ObtenerRepuestoPorIdExterno(idrepuext As Decimal) As aipmanrepu            
            Dim _aipmanrepu As New aipmanrepu
            If idrepuext > 0 Then
                _aipmanrepu.idaipmanrepu = ObtenerIdManRepuestoInternoPorIdExterno(idrepuext)

                Dim aipmanrepuController As New aipmanrepuController
                _aipmanrepu = aipmanrepuController.selaipmanrepuxid(_aipmanrepu.idaipmanrepu)
                _aipmanrepu.xnommanrepu = _aipmanrepu.xnommanrepu.Trim()
                _aipmanrepu.xdescmanrepu = _aipmanrepu.xdescmanrepu.Trim()
            Else
                _aipmanrepu.idaipmanrepu = 0
                _aipmanrepu.xnommanrepu = ""
                _aipmanrepu.xdescmanrepu = ""
            End If
            Return _aipmanrepu
        End Function
        'fin intermediacion


        <HttpPost()> _
        Public Function ObtenerInspeccionesXauditar(petivi_aipinsencpaglist As petivi_aipinsencpaglist) As respvi_aipinsencpaglist

            Dim vi_aipinsencController As New vi_aipinsencController
            Dim respvi_aipinsencpaglist As New respvi_aipinsencpaglist
            respvi_aipinsencpaglist = vi_aipinsencController.selvi_aipinsencxauditpag(petivi_aipinsencpaglist)

            Dim aiplogeveController As New aiplogeveController
            Dim lista_aiplogeve As New List(Of aiplogeve)
            Dim iamblogeve As String = ""
            Dim cantidad As Decimal = 0
            If (respvi_aipinsencpaglist.lista_vi_aipinsenc.Count > 0) Then
                'se realiza una recorrido de la lista para verificar si existe algun log de modificacion de placa o de serial carroceria
                For i As Integer = 0 To respvi_aipinsencpaglist.lista_vi_aipinsenc.Count - 1

                    iamblogeve = "MODDATINS-" & respvi_aipinsencpaglist.lista_vi_aipinsenc(i).idaipinsenc

                    ''se busca si existe alguna modificacion de planca o serial de carroceria
                    cantidad = aiplogeveController.ObtenerCantidadPorIamblogeve(iamblogeve)
                    ''si existe alguna modificacion guardada en el log por codigo unico se retorna una marca para pintar en el grid la linea
                    If (cantidad > 0) Then
                        respvi_aipinsencpaglist.lista_vi_aipinsenc(i).check = True
                    End If
                Next
            End If

            Return respvi_aipinsencpaglist

        End Function

        <HttpPost()> _
        Public Function ObtenerLogEvePorEnc(idaipinsenc As Decimal) As List(Of aiplogeve)

            Dim aiplogeveController As New aiplogeveController
            Dim lista_aiplogeve As New List(Of aiplogeve)
            Dim iamblogeve As String = ""

            iamblogeve = "MODDATINS-" & idaipinsenc
            lista_aiplogeve = aiplogeveController.ObtenerPorIamblogeve(iamblogeve)

            Return lista_aiplogeve
        End Function


        <HttpPost()> _
        Public Function ObtenerBaremoManoDeObra(idsegmanusu As Decimal, idaipinsenc As Decimal, idaipmanrepu As Decimal, itidainssinmobr As String) As respopera


            Dim respopera As New respopera
            If (idaipinsenc <= 0) Then
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "El identificador de encabezado no puede ser 0"
                respopera.xmsjtecnico = "El identificador de encabezado no puede ser 0"
                Return respopera
            End If

            If (idaipmanrepu <= 0) Then
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "El identificador del repuesto no puede ser 0"
                respopera.xmsjtecnico = "El identificador del repuesto no puede ser 0"
                Return respopera
            End If

            'If (itidainssinmobr <> "") Then
            '    respopera.irespuesta = "0"
            '    respopera.xmsjusuario = "El tipo de daño no puede ser vacio"
            '    respopera.xmsjtecnico = "El tipo de daño no puede ser vacio"
            '    Return respopera
            'End If

            respopera = Sp_ObtenerBaremoManoDeObra(idsegmanusu, idaipinsenc, idaipmanrepu, itidainssinmobr)
            Return respopera
        End Function

        <HttpPost()> _
        Public Function Sp_ObtenerBaremoManoDeObra(idsegmanusu As Decimal, idaipinsenc As Decimal, idaipmanrepu As Decimal, itidainssinmobr As String) As respopera

            Try

                Dim param1 As New Client.OracleParameter
                param1.OracleDbType = Client.OracleDbType.Decimal
                param1.Precision = 18
                param1.Scale = 0
                param1.Value = idsegmanusu
                param1.ParameterName = "p_idsegmanusuop"

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Varchar2
                param2.Size = 20
                param2.Value = "aipauto"
                param2.ParameterName = "p_xnombrecorto"


                Dim param3 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 1
                param3.ParameterName = "p_irespuesta"
                param3.Direction = ParameterDirection.Output

                Dim param4 As New Client.OracleParameter
                param4.OracleDbType = Client.OracleDbType.Varchar2
                param4.Size = 300
                param4.ParameterName = "p_xmsjusuario"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Varchar2
                param5.Size = 300
                param5.ParameterName = "p_xmsjtecnico"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Varchar2
                param6.Size = 300
                param6.ParameterName = "p_coderrorlog"
                param6.Direction = ParameterDirection.Output


                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Decimal
                param7.Precision = 18
                param7.Scale = 0
                param7.Value = idaipinsenc
                param7.ParameterName = "p_idaipinsenc"

                Dim param8 As New Client.OracleParameter
                param8.OracleDbType = Client.OracleDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = idaipmanrepu
                param8.ParameterName = "p_idaipmanrepu"

                Dim param9 As New Client.OracleParameter
                param9.OracleDbType = Client.OracleDbType.Varchar2
                param9.Size = 20
                If (itidainssinmobr Is Nothing Or itidainssinmobr = "") Then
                    param9.Value = "291200" 'leve por defecto
                Else
                    param9.Value = itidainssinmobr
                End If

                param9.ParameterName = "p_CD_DATO_DANO"


                Dim param10 As New Client.OracleParameter
                param10.OracleDbType = Client.OracleDbType.Decimal
                param10.Precision = 18
                param10.Scale = 0
                'param10.Value = 0
                param10.ParameterName = "p_MT_BAREMO"
                param10.Direction = ParameterDirection.Output




                Dim xdeclare As String = "DECLARE v_p_idsegmanusuop FLOAT; v_p_xnombrecorto VARCHAR2(32767); v_p_irespuesta VARCHAR2(32767); v_p_xmsjusuario VARCHAR2(32767); v_p_xmsjtecnico VARCHAR2(32767); v_p_coderrorlog VARCHAR2(32767); v_p_idaipinsenc FLOAT; v_p_idaipmanrepu NUMBER; v_p_CD_DATO_DANO VARCHAR2(32767); v_p_MT_BAREMO NUMBER;"
                Dim xsp As String = "begin SP_RNMONTOBAREMO (:v_p_idsegmanusuop,:v_p_xnombrecorto,:v_p_irespuesta,:v_p_xmsjusuario,:v_p_xmsjtecnico,:v_p_coderrorlog,:v_p_idaipinsenc,:v_p_idaipmanrepu,:v_p_CD_DATO_DANO,:v_p_MT_BAREMO); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10)

                Dim respopera As New respopera
                respopera.irespuesta = param3.Value.ToString()
                respopera.xmsjusuario = param4.Value.ToString()
                respopera.xmsjtecnico = param5.Value.ToString()
                If IsNumeric(param10.Value.ToString()) = True Then
                    respopera.id = Convert.ToDecimal(param10.Value.ToString())
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:Sp_ObtenerBaremoManoDeObra ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function GuardarManoObraConBaremo(aipinssinmobr As aipinssinmobr) As respopera

            Try
                Dim respopera As New respopera
                Dim aipinssinController As New aipinssinController
                Dim aipinssinmobrController As New aipinssinmobrController
                Dim aipinssin As aipinssin = aipinssinController.selaipinssinxid(aipinssinmobr.idaipinssin)
                Dim mbaremo As Decimal = 0
                If (aipinssin IsNot Nothing) Then

                    'segun reunion del dia viernes 11-11-2016 se debe quitar la validacion del monto mayor al baremo cuando
                    'itipomatinssinmobr sea (Salvar o Reparar)
                    If aipinssinmobr.itipomatinssinmobr.ToLower() <> "salvar" And aipinssinmobr.itipomatinssinmobr.ToLower() <> "reparar" Then
                        respopera = Sp_ObtenerBaremoManoDeObra(0, aipinssin.idaipinsenc, aipinssinmobr.idaipmanrepu, aipinssinmobr.itidainssinmobr)
                        mbaremo = respopera.id
                        If (respopera.irespuesta = "1") Then
                            'se realiza la verificacion si el baremo en mayor a cero esto es temporal para no detener el proceso cuando no exista un baremo
                            If (mbaremo > 0) Then
                                If (aipinssinmobr.nprecfininssinmobr > mbaremo) Then
                                    respopera.irespuesta = "0"
                                    respopera.xmsjusuario = "El monto no puede ser mayor a '" & mbaremo & "' (monto del baremo)"
                                    respopera.xmsjtecnico = "El monto enviado " & aipinssinmobr.nprecfininssinmobr & " es mayor al baremo '" & mbaremo & "' (monto del baremo)"
                                    Return respopera
                                End If
                            End If
                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "Ha ocurrido un error verificando el monto del baremo"
                            respopera.xmsjtecnico = "No se encontro el baremo. " & respopera.xmsjtecnico
                            Return respopera
                        End If
                    End If 'If aipinssinmobr.itipomatinssinmobr <> "Salvar" And aipinssinmobr.itipomatinssinmobr <> "Reparar" Then

                    respopera = aipinssinmobrController.insaipinssinmobr(aipinssinmobr)

                Else

                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "Ha ocurrido un error al guardar la mano de obra"
                    respopera.xmsjtecnico = "No se encontro el siniestro. " & aipinssinmobr.idaipinssin
                    Return respopera
                End If

                Return respopera

            Catch ex As Exception
                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:GuardarManoObraConBaremo ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function GuardarRepuestoConBaremo(aipinssinrepu As aipinssinrepu) As respopera

            Try
                Dim respopera As New respopera
                Dim aipinssinController As New aipinssinController
                Dim aipinssinrepuController As New aipinssinrepuController
                Dim aipinssin As aipinssin = aipinssinController.selaipinssinxid(aipinssinrepu.idaipinssin)
                Dim mbaremo As Decimal = 0
                If (aipinssin IsNot Nothing) Then

                    respopera = aipinssinrepuController.insaipinssinrepu(aipinssinrepu)

                    ''comentado por adecuacion 22/12/2016 que permita monto mayores al monto del baremo por Deivid peña 
                    ''Segun correo de soporte@sitfx.com 21/12/2016

                    'respopera = Sp_ObtenerBaremoManoDeObra(0, aipinssin.idaipinsenc, aipinssinrepu.idaipmanrepu, "")
                    'mbaremo = respopera.id
                    'If (respopera.irespuesta = "1") Then
                    '    'se realiza la verificacion si el baremo en mayor a cero esto es temporal para no detener el proceso cuando no exista un baremo
                    '    If (mbaremo > 0) Then
                    '        If (aipinssinrepu.nprecfininssinrepu > mbaremo) Then
                    '            respopera.irespuesta = "0"
                    '            respopera.xmsjusuario = "El monto no puede ser mayor a '" & mbaremo & "' (monto del baremo)"
                    '            respopera.xmsjtecnico = "El monto enviado " & aipinssinrepu.nprecfininssinrepu & " es mayor al baremo '" & mbaremo & "' (monto del baremo)"
                    '            Return respopera
                    '        End If
                    '    End If

                    '    respopera = aipinssinrepuController.insaipinssinrepu(aipinssinrepu)

                    'Else
                    '    respopera.irespuesta = "0"
                    '    respopera.xmsjusuario = "Ha ocurrido un error verificando el monto del baremo"
                    '    respopera.xmsjtecnico = "No se encontro el baremo. " & respopera.xmsjtecnico
                    '    Return respopera
                    'End If
                Else

                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "Ha ocurrido un error al guardar la mano de obra"
                    respopera.xmsjtecnico = "No se encontro el siniestro. " & aipinssinrepu.idaipinssin
                    Return respopera
                End If

                Return respopera

            Catch ex As Exception
                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:GuardarRepuestoConBaremo ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function Sp_TranferenciaCierreInspeccion(idsegmanusu As Decimal, IDTABLA As Decimal, itipoinsenc As String) As respopera

            Try

                Dim param1 As New Client.OracleParameter
                param1.OracleDbType = Client.OracleDbType.Decimal
                param1.Precision = 18
                param1.Scale = 0
                param1.Value = idsegmanusu
                param1.ParameterName = "p_idsegmanusuop"

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Varchar2
                param2.Size = 20
                param2.Value = "aipauto"
                param2.ParameterName = "p_xnombrecorto"


                Dim param3 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 1
                param3.ParameterName = "p_irespuesta"
                param3.Direction = ParameterDirection.Output

                Dim param4 As New Client.OracleParameter
                param4.OracleDbType = Client.OracleDbType.Varchar2
                param4.Size = 300
                param4.ParameterName = "p_xmsjusuario"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Varchar2
                param5.Size = 300
                param5.ParameterName = "p_xmsjtecnico"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Varchar2
                param6.Size = 300
                param6.ParameterName = "p_coderrorlog"
                param6.Direction = ParameterDirection.Output


                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Decimal
                param7.Precision = 18
                param7.Scale = 0
                param7.Value = IDTABLA
                param7.ParameterName = "p_IDTABLA"


                Dim param8 As New Client.OracleParameter
                param8.OracleDbType = Client.OracleDbType.Varchar2
                param8.Size = 20
                If (itipoinsenc = "") Then
                    param8.Value = " " 'leve por defecto
                Else
                    param8.Value = itipoinsenc
                End If
                param8.ParameterName = "p_itipoinsenc"


                Dim param9 As New Client.OracleParameter
                param9.OracleDbType = Client.OracleDbType.Varchar2
                param9.Size = 2
                param9.ParameterName = "p_OK"
                param9.Direction = ParameterDirection.Output




                Dim xdeclare As String = "DECLARE v_p_idsegmanusuop FLOAT; v_p_xnombrecorto VARCHAR2(32767); v_p_irespuesta VARCHAR2(32767); v_p_xmsjusuario VARCHAR2(32767); v_p_xmsjtecnico VARCHAR2(32767); v_p_coderrorlog VARCHAR2(32767); v_p_IDTABLA NUMBER; v_p_itipoinsenc VARCHAR2(32767); v_p_OK VARCHAR2(32767);"
                Dim xsp As String = "begin SP_RNTRANSFENCIAINTINSP (:v_p_idsegmanusuop,:v_p_xnombrecorto,:v_p_irespuesta,:v_p_xmsjusuario,:v_p_xmsjtecnico,:v_p_coderrorlog,:v_p_IDTABLA,:v_p_itipoinsenc,:v_p_OK); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7, param8, param9)

                Dim respopera As New respopera
                respopera.irespuesta = param3.Value.ToString()
                respopera.xmsjusuario = param4.Value.ToString()
                respopera.xmsjtecnico = param5.Value.ToString()

                If (respopera.irespuesta = "1") Then
                    If param9.Value.ToString() = "S" Then
                        respopera.xmsjusuario = "El proceso de transferencia se realizo satisfactoriamente."
                        respopera.xmsjtecnico = "El proceso de transferencia al sistema SIR se realizo satisfactoriamente."
                    Else
                        respopera.irespuesta = "0"
                        'respopera.xmsjusuario = "Ha ocurrido un error en el proceso de transferencia del sistemas."
                        'respopera.xmsjtecnico = "Ha ocurrido un error en el proceso de transferencia del sistemas SIR."
                    End If
                Else
                    respopera.irespuesta = "0"
                    'respopera.xmsjusuario = "Ha ocurrido un error en el proceso de transferencia del sistemas."
                    'respopera.xmsjtecnico = "Ha ocurrido un error en el proceso de transferencia del sistemas SIR."
                End If



                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:Sp_TranferenciaCierreInspeccion ", ex)
                Return respopera
            End Try
        End Function

        Public Function ObtenerNombreColorPorCod(xcodcolor As String) As String

            Try
                Dim respopera As New respopera
                Dim comunconfvalorController As New comunconfvalorController
                Dim comunconfvalor As New comunconfvalor
                Dim xnombre As String = ""

                comunconfvalor = comunconfvalorController.selcomunconfvalorxconceptoYxvalorcodigo("ICOLORMANVEH", xcodcolor)

                If (comunconfvalor IsNot Nothing) Then
                    xnombre = comunconfvalor.xvalordescripcion
                End If

                Return xnombre
            Catch ex As Exception
                AgregarLogErrores("Metodo:ObtenerNombreColorPorCod ", ex)
                Return ""
            End Try

        End Function

        <HttpPost()> _
        Public Function Sp_ObtenerDatosDeclaracion(idsegmanusu As Decimal, idaipinsenc As Decimal) As peraipdatosdeclara

            Try

                Dim param1 As New Client.OracleParameter
                param1.OracleDbType = Client.OracleDbType.Decimal
                param1.Precision = 18
                param1.Scale = 0
                param1.Value = idsegmanusu
                param1.ParameterName = "p_idsegmanusuop"

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Varchar2
                param2.Size = 20
                param2.Value = "aipauto"
                param2.ParameterName = "p_xnombrecorto"


                Dim param3 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 1
                param3.ParameterName = "p_irespuesta"
                param3.Direction = ParameterDirection.Output

                Dim param4 As New Client.OracleParameter
                param4.OracleDbType = Client.OracleDbType.Varchar2
                param4.Size = 300
                param4.ParameterName = "p_xmsjusuario"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Varchar2
                param5.Size = 300
                param5.ParameterName = "p_xmsjtecnico"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Varchar2
                param6.Size = 300
                param6.ParameterName = "p_coderrorlog"
                param6.Direction = ParameterDirection.Output


                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Decimal
                param7.Precision = 18
                param7.Scale = 0
                param7.Value = idaipinsenc
                param7.ParameterName = "p_idaipinsenc"

                Dim param8 As New Client.OracleParameter
                param8.OracleDbType = Client.OracleDbType.Varchar2
                param8.Size = 4000
                param8.ParameterName = "p_xdessiniestro"
                param8.Direction = ParameterDirection.Output

                Dim param9 As New Client.OracleParameter
                param9.OracleDbType = Client.OracleDbType.Long
                param9.Size = 32767
                param9.ParameterName = "p_xdesobservacion"
                param9.Direction = ParameterDirection.Output

                Dim xdeclare As String = "DECLARE v_p_idsegmanusuop FLOAT; v_p_xnombrecorto VARCHAR2(32767); v_p_irespuesta VARCHAR2(32767); v_p_xmsjusuario VARCHAR2(32767); v_p_xmsjtecnico VARCHAR2(32767); v_p_coderrorlog VARCHAR2(32767); v_p_idaipinsenc FLOAT; v_p_xdessiniestro VARCHAR2(32767); v_p_xdesobservacion LONG;"
                Dim xsp As String = "begin SP_RN_OBT_DATOS_DECLARA (:v_p_idsegmanusuop,:v_p_xnombrecorto,:v_p_irespuesta,:v_p_xmsjusuario,:v_p_xmsjtecnico,:v_p_coderrorlog,:v_p_idaipinsenc,:v_p_xdessiniestro,:v_p_xdesobservacion); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7, param8, param9)

                Dim peraipdatosdeclara As New peraipdatosdeclara
                peraipdatosdeclara.xdessiniestro = param8.Value.ToString()
                peraipdatosdeclara.xdesobservacion = param9.Value.ToString()

                Return peraipdatosdeclara

            Catch ex As Exception

                Dim peraipdatosdeclara As New peraipdatosdeclara
                peraipdatosdeclara.xdessiniestro = ""
                peraipdatosdeclara.xdesobservacion = ""
                AgregarLogErrores("Metodo:Sp_ObtenerDatosDeclaracion ", ex)
                Return peraipdatosdeclara
            End Try
        End Function

        <HttpPost()> _
        Public Function GuardarSiniestro(persaipinssini As persaipinssini) As respopera
            Dim respopera As New respopera
            Dim xmsj As String = ""
            Try
                'lo primero a realizar es las validaciones de campos requeridos
                ' todos los datos son requeridos
                If persaipinssini.idsegmanorg = 0 Then
                    xmsj = "<li> La Sucursal es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssini.idsegmanusuperit = 0 Then
                    xmsj = xmsj & "<li> El perito es Requerido </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssini.idcomunmanestado = 0 Then
                    xmsj = xmsj & "<li> El Estado es Requerido </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssini.idcomunmanlocalid = 0 Then
                    xmsj = xmsj & "<li> La Cuiudad es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssini.itipoinsinssini = "" Then
                    xmsj = xmsj & "<li> El tipo de Inspección es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssini.xnacioninssini = "" Then
                    xmsj = xmsj & "<li> La Nacionalidad es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssini.xcedpropinssini = "" Then
                    xmsj = xmsj & "<li> La Cédula es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssini.finicioinssini <= CDate("01-01-1900") Then
                    xmsj = xmsj & "<li> Fecha de inicio de la inspección es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssini.itipoinssini = "" Then
                    xmsj = xmsj & "<li> El Tipo de siniestro es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssini.ffininssini <= CDate("01-01-1900") Then
                    xmsj = xmsj & "<li> Fecha de fin de la inspección es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssini.icausainssini = "" Then
                    xmsj = xmsj & "<li> La Causa de siniestro es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssini.focurrinssini <= CDate("01-01-1900") Then
                    xmsj = xmsj & "<li> Fecha de ocurrencia es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssini.fdeclarinssini <= CDate("01-01-1900") Then
                    'xmsj = xmsj & "<li> Fecha de declaración es Requerida </li>"
                    'respopera.irespuesta = "0"
                    persaipinssini.fdeclarinssini = Date.Now
                End If
                If persaipinssini.fnotifinssini <= CDate("01-01-1900") Then
                    persaipinssini.fnotifinssini = Date.Now
                End If
                'If persaipinssini.xnuminssini = 0 Then

                'End If
                If persaipinssini.xdireccioninssini = "" Then
                    xmsj = xmsj & "<li> La dirección de la inspección es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssini.xdescinssini = "" Then
                    xmsj = xmsj & "<li> La descripción del siniestro es Requerida </li>"
                    respopera.irespuesta = "0"
                End If

                If persaipinssini.xplacainssini = "" Then
                    xmsj = xmsj & "<li> La placa del siniestro es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                respopera.xmsjtecnico = xmsj
                respopera.xmsjusuario = xmsj

                '

                If respopera.irespuesta <> "0" Then
                    Dim param1 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                    param1.OracleDbType = Client.OracleDbType.Varchar2
                    param1.Size = 1
                    param1.ParameterName = "p_irespuesta"
                    param1.Direction = ParameterDirection.Output

                    Dim param2 As New Client.OracleParameter
                    param2.OracleDbType = Client.OracleDbType.Varchar2
                    param2.Size = 300
                    param2.ParameterName = "p_xmsjusuario"
                    param2.Direction = ParameterDirection.Output

                    Dim param3 As New Client.OracleParameter
                    param3.OracleDbType = Client.OracleDbType.Varchar2
                    param3.Size = 300
                    param3.ParameterName = "p_xmsjtecnico"
                    param3.Direction = ParameterDirection.Output

                    'Paramestros
                    Dim param4 As New Client.OracleParameter
                    param4.OracleDbType = Client.OracleDbType.Decimal
                    param4.Value = persaipinssini.idsegmanorg
                    param4.ParameterName = "p_idsegmanorg"

                    Dim param5 As New Client.OracleParameter
                    param5.OracleDbType = Client.OracleDbType.Decimal
                    param5.Value = persaipinssini.idsegmanusuperit
                    param5.ParameterName = "p_idsegmanusuperit"

                    Dim param6 As New Client.OracleParameter
                    param6.OracleDbType = Client.OracleDbType.Decimal
                    param6.Value = persaipinssini.idcomunmanestado
                    param6.ParameterName = "p_idcomunmanestado"

                    Dim param7 As New Client.OracleParameter
                    param7.OracleDbType = Client.OracleDbType.Decimal
                    param7.Value = persaipinssini.idcomunmanlocalid
                    param7.ParameterName = "p_idcomunmanlocalid"

                    Dim param8 As New Client.OracleParameter
                    param8.OracleDbType = Client.OracleDbType.Varchar2
                    param8.Size = 20
                    param8.Value = persaipinssini.itipoinsinssini
                    param8.ParameterName = "p_itipoinsinssini"

                    Dim param9 As New Client.OracleParameter
                    param9.OracleDbType = Client.OracleDbType.Varchar2
                    param9.Size = 10
                    param9.Value = persaipinssini.xnacioninssini
                    param9.ParameterName = "p_xnacioninssini"

                    Dim param10 As New Client.OracleParameter
                    param10.OracleDbType = Client.OracleDbType.Varchar2
                    param10.Size = 30
                    param10.Value = persaipinssini.xcedpropinssini
                    param10.ParameterName = "p_xcedpropinssini"

                    Dim param11 As New Client.OracleParameter
                    param11.OracleDbType = Client.OracleDbType.Date
                    param11.Value = persaipinssini.finicioinssini
                    param11.ParameterName = "p_finicioinssini"

                    Dim param12 As New Client.OracleParameter
                    param12.OracleDbType = Client.OracleDbType.Varchar2
                    param12.Size = 30
                    param12.Value = persaipinssini.itipoinssini
                    param12.ParameterName = "p_itipoinssini"

                    Dim param13 As New Client.OracleParameter
                    param13.OracleDbType = Client.OracleDbType.Date
                    param13.Value = persaipinssini.ffininssini
                    param13.ParameterName = "p_ffininssini"

                    Dim param14 As New Client.OracleParameter
                    param14.OracleDbType = Client.OracleDbType.Varchar2
                    param14.Size = 30
                    param14.Value = persaipinssini.icausainssini
                    param14.ParameterName = "p_icausainssini"

                    Dim param15 As New Client.OracleParameter
                    param15.OracleDbType = Client.OracleDbType.Date
                    param15.Value = persaipinssini.focurrinssini
                    param15.ParameterName = "p_focurrinssini"

                    Dim param16 As New Client.OracleParameter
                    param16.OracleDbType = Client.OracleDbType.Date
                    param16.Value = persaipinssini.fdeclarinssini
                    param16.ParameterName = "p_fdeclarinssini"

                    Dim param17 As New Client.OracleParameter
                    param17.OracleDbType = Client.OracleDbType.Date
                    param17.Value = persaipinssini.fnotifinssini
                    param17.ParameterName = "p_fnotifinssini"

                    Dim param18 As New Client.OracleParameter
                    param18.OracleDbType = Client.OracleDbType.Varchar2
                    param18.Size = 30
                    param18.Value = " " 'persaipinssini.xnuminssini
                    param18.ParameterName = "p_xnuminssini"
                    param18.Direction = ParameterDirection.InputOutput

                    Dim param19 As New Client.OracleParameter
                    param19.OracleDbType = Client.OracleDbType.Varchar2
                    param19.Size = 100
                    param19.Value = persaipinssini.xdireccioninssini
                    param19.ParameterName = "p_xdireccioninssini"

                    Dim param20 As New Client.OracleParameter
                    param20.OracleDbType = Client.OracleDbType.Varchar2
                    param20.Size = 500
                    param20.Value = persaipinssini.xdescinssini
                    param20.ParameterName = "p_xdescinssini"

                    Dim param21 As New Client.OracleParameter
                    param21.OracleDbType = Client.OracleDbType.Varchar2
                    param21.Size = 10
                    param21.Value = persaipinssini.xplacainssini
                    param21.ParameterName = "p_xplacainssini"

                    Dim xdeclare As String = "DECLARE v_p_irespuesta varchar2(32767); v_p_xmsjusuario varchar2(32767); v_p_xmsjtecnico varchar2(32767); v_p_idsegmanorg float;  v_p_idsegmanusuperit float; v_p_idcomunmanestado float;  v_p_idcomunmanlocalid float; v_p_itipoinsinssini varchar2(32767); v_p_xnacioninssini varchar2(32767);  v_p_xcedpropinssini varchar2(32767); v_p_finicioinssini date; v_p_itipoinssini varchar2(32767); v_p_ffininssini date; v_p_icausainssini varchar2(32767); v_p_focurrinssini date; v_p_fdeclarinssini date; v_p_fnotifinssini date; v_p_xnuminssini varchar2(32767); v_p_xdireccioninssini varchar2(32767); v_p_xdescinssini varchar2(32767); v_p_xplacainssini  varchar2(32767);"
                    Dim xsp As String = "begin SP_RNGENERARSINIESTRO(:v_p_irespuesta, :v_p_xmsjusuario, :v_p_xmsjtecnico, :v_p_idsegmanorg, :v_p_idsegmanusuperit, :v_p_idcomunmanestado, :v_p_idcomunmanlocalid, :v_p_itipoinsinssini, :v_p_xnacioninssini, :v_p_xcedpropinssini, :v_p_finicioinssini, :v_p_itipoinssini, :v_p_ffininssini, :v_p_icausainssini, :v_p_focurrinssini, :v_p_fdeclarinssini, :v_p_fnotifinssini, :v_p_xnuminssini, :v_p_xdireccioninssini, :v_p_xdescinssin, :v_p_xplacainssini); end;"
                    Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20, param21)
                    respopera.irespuesta = param1.Value.ToString()
                    respopera.xmsjusuario = param2.Value.ToString()
                    respopera.xmsjtecnico = param3.Value.ToString()
                End If

                Return respopera

            Catch ex As Exception
                respopera.irespuesta = "0"
                respopera.xmsjtecnico = ex.Message
                respopera.xmsjusuario = "Error en el proceso, Comuníquese con sistemas"
                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function GuardarSiniestroSuscripcion(persaipinssinicotiz As persaipinssinicotiz) As respopera
            Dim respopera As New respopera
            Dim xmsj As String = ""
            Try
                'lo primero a realizar es las validaciones de campos requeridos
                ' todos los datos son requeridos
                If persaipinssinicotiz.itipoinsinssinicotiz = "" Then
                    xmsj = xmsj & "<li> El tipo de Inspección es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssinicotiz.idsegmanorg = 0 Then
                    xmsj = "<li> La Sucursal es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssinicotiz.idsegmanusuperit = 0 Then
                    xmsj = xmsj & "<li> El perito es Requerido </li>"
                    respopera.irespuesta = "0"
                End If

                'solo para siniestro
                If persaipinssinicotiz.itipoinsinssinicotiz = "SINIESTRO" Then
                    If persaipinssinicotiz.idcomunmanestado = 0 Then
                        xmsj = xmsj & "<li> El Estado es Requerido </li>"
                        respopera.irespuesta = "0"
                    End If
                    If persaipinssinicotiz.idcomunmanlocalid = 0 Then
                        xmsj = xmsj & "<li> La Cuiudad es Requerida </li>"
                        respopera.irespuesta = "0"
                    End If
                    If persaipinssinicotiz.itipoinssinicotiz = "" Then
                        xmsj = xmsj & "<li> El Tipo de siniestro es Requerida </li>"
                        respopera.irespuesta = "0"
                    End If
                    If persaipinssinicotiz.icausainssinicotiz = "" Then
                        xmsj = xmsj & "<li> La Causa de siniestro es Requerida </li>"
                        respopera.irespuesta = "0"
                    End If
                    If persaipinssinicotiz.focurrinssinicotiz <= CDate("01-01-1900") Then
                        xmsj = xmsj & "<li> Fecha de ocurrencia es Requerida </li>"
                        respopera.irespuesta = "0"
                    End If
                    If persaipinssinicotiz.xdireccioninssinicotiz = "" Then
                        xmsj = xmsj & "<li> La dirección de la inspección es Requerida </li>"
                        respopera.irespuesta = "0"
                    End If
                End If

                If persaipinssinicotiz.xnacioninssinicotiz = "" Then
                    xmsj = xmsj & "<li> La Nacionalidad es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssinicotiz.xcedpropinssinicotiz = "" Then
                    xmsj = xmsj & "<li> La Cédula es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssinicotiz.finicioinssinicotiz <= CDate("01-01-1900") Then
                    xmsj = xmsj & "<li> Fecha de inicio de la inspección es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssinicotiz.ffininssinicotiz <= CDate("01-01-1900") Then
                    xmsj = xmsj & "<li> Fecha de fin de la inspección es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                If persaipinssinicotiz.fdeclarinssinicotiz <= CDate("01-01-1900") Then
                    'xmsj = xmsj & "<li> Fecha de declaración es Requerida </li>"
                    'respopera.irespuesta = "0"
                    persaipinssinicotiz.fdeclarinssinicotiz = Date.Now
                End If
                If persaipinssinicotiz.fnotifinssinicotiz <= CDate("01-01-1900") Then
                    persaipinssinicotiz.fnotifinssinicotiz = Date.Now
                End If
                'If persaipinssinicotiz.xnuminssinicotiz = 0 Then

                'End If
                If persaipinssinicotiz.xdescinssinicotiz = "" Then
                    xmsj = xmsj & "<li> La descripción del siniestro es Requerida </li>"
                    respopera.irespuesta = "0"
                End If

                If persaipinssinicotiz.xplacainssinicotiz = "" Then
                    xmsj = xmsj & "<li> La placa del siniestro es Requerida </li>"
                    respopera.irespuesta = "0"
                End If
                respopera.xmsjtecnico = xmsj
                respopera.xmsjusuario = xmsj

                '

                If respopera.irespuesta <> "0" Then
                    If persaipinssinicotiz.itipoinsinssinicotiz = "SINIESTRO" Then
                        respopera = GenerarSiniestro2(persaipinssinicotiz)
                    Else
                        respopera = GenerarSuscripcion(persaipinssinicotiz)
                    End If
                End If

                Return respopera

            Catch ex As Exception
                respopera.irespuesta = "0"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:GuardarSiniestroSuscripcion ", ex)
                respopera.xmsjusuario = "Error en el proceso, Comuníquese con sistemas"
                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function GenerarSiniestro2(persaipinssinicotiz As persaipinssinicotiz) As respopera
            Dim respopera As New respopera
            Dim xmsj As String = ""
            Try

                Dim param1 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param1.OracleDbType = Client.OracleDbType.Varchar2
                param1.Size = 1
                param1.ParameterName = "p_irespuesta"
                param1.Direction = ParameterDirection.Output

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Varchar2
                param2.Size = 300
                param2.ParameterName = "p_xmsjusuario"
                param2.Direction = ParameterDirection.Output

                Dim param3 As New Client.OracleParameter
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 300
                param3.ParameterName = "p_xmsjtecnico"
                param3.Direction = ParameterDirection.Output

                'Paramestros
                Dim param4 As New Client.OracleParameter
                param4.OracleDbType = Client.OracleDbType.Decimal
                param4.Value = persaipinssinicotiz.idsegmanorg
                param4.ParameterName = "p_idsegmanorg"

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Decimal
                param5.Value = persaipinssinicotiz.idsegmanusuperit
                param5.ParameterName = "p_idsegmanusuperit"

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Decimal
                param6.Value = persaipinssinicotiz.idcomunmanestado
                param6.ParameterName = "p_idcomunmanestado"

                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Decimal
                param7.Value = persaipinssinicotiz.idcomunmanlocalid
                param7.ParameterName = "p_idcomunmanlocalid"

                Dim param8 As New Client.OracleParameter
                param8.OracleDbType = Client.OracleDbType.Varchar2
                param8.Size = 20
                param8.Value = persaipinssinicotiz.itipoinsinssinicotiz
                param8.ParameterName = "p_itipoinsinssini"

                Dim param9 As New Client.OracleParameter
                param9.OracleDbType = Client.OracleDbType.Varchar2
                param9.Size = 10
                param9.Value = persaipinssinicotiz.xnacioninssinicotiz
                param9.ParameterName = "p_xnacioninssini"

                Dim param10 As New Client.OracleParameter
                param10.OracleDbType = Client.OracleDbType.Varchar2
                param10.Size = 30
                param10.Value = persaipinssinicotiz.xcedpropinssinicotiz
                param10.ParameterName = "p_xcedpropinssini"

                Dim param11 As New Client.OracleParameter
                param11.OracleDbType = Client.OracleDbType.Date
                param11.Value = persaipinssinicotiz.finicioinssinicotiz
                param11.ParameterName = "p_finicioinssini"

                Dim param12 As New Client.OracleParameter
                param12.OracleDbType = Client.OracleDbType.Varchar2
                param12.Size = 30
                param12.Value = persaipinssinicotiz.itipoinssinicotiz
                param12.ParameterName = "p_itipoinssini"

                Dim param13 As New Client.OracleParameter
                param13.OracleDbType = Client.OracleDbType.Date
                param13.Value = persaipinssinicotiz.ffininssinicotiz
                param13.ParameterName = "p_ffininssini"

                Dim param14 As New Client.OracleParameter
                param14.OracleDbType = Client.OracleDbType.Varchar2
                param14.Size = 30
                param14.Value = persaipinssinicotiz.icausainssinicotiz
                param14.ParameterName = "p_icausainssini"

                Dim param15 As New Client.OracleParameter
                param15.OracleDbType = Client.OracleDbType.Date
                param15.Value = persaipinssinicotiz.focurrinssinicotiz
                param15.ParameterName = "p_focurrinssini"

                Dim param16 As New Client.OracleParameter
                param16.OracleDbType = Client.OracleDbType.Date
                param16.Value = persaipinssinicotiz.fdeclarinssinicotiz
                param16.ParameterName = "p_fdeclarinssini"

                Dim param17 As New Client.OracleParameter
                param17.OracleDbType = Client.OracleDbType.Date
                param17.Value = persaipinssinicotiz.fnotifinssinicotiz
                param17.ParameterName = "p_fnotifinssini"

                Dim param18 As New Client.OracleParameter
                param18.OracleDbType = Client.OracleDbType.Varchar2
                param18.Size = 30
                param18.Value = " " 'persaipinssinicotiz.xnuminssinicotiz
                param18.ParameterName = "p_xnuminssini"
                param18.Direction = ParameterDirection.InputOutput

                Dim param19 As New Client.OracleParameter
                param19.OracleDbType = Client.OracleDbType.Varchar2
                param19.Size = 100
                param19.Value = persaipinssinicotiz.xdireccioninssinicotiz
                param19.ParameterName = "p_xdireccioninssini"

                Dim param20 As New Client.OracleParameter
                param20.OracleDbType = Client.OracleDbType.Varchar2
                param20.Size = 500
                param20.Value = persaipinssinicotiz.xdescinssinicotiz
                param20.ParameterName = "p_xdescinssini"

                Dim param21 As New Client.OracleParameter
                param21.OracleDbType = Client.OracleDbType.Varchar2
                param21.Size = 10
                param21.Value = persaipinssinicotiz.xplacainssinicotiz
                param21.ParameterName = "p_xplacainssini"

                Dim xdeclare As String = "DECLARE v_p_irespuesta varchar2(32767); v_p_xmsjusuario varchar2(32767); v_p_xmsjtecnico varchar2(32767); v_p_idsegmanorg float;  v_p_idsegmanusuperit float; v_p_idcomunmanestado float;  v_p_idcomunmanlocalid float; v_p_itipoinsinssini varchar2(32767); v_p_xnacioninssini varchar2(32767);  v_p_xcedpropinssini varchar2(32767); v_p_finicioinssini date; v_p_itipoinssini varchar2(32767); v_p_ffininssini date; v_p_icausainssini varchar2(32767); v_p_focurrinssini date; v_p_fdeclarinssini date; v_p_fnotifinssini date; v_p_xnuminssini varchar2(32767); v_p_xdireccioninssini varchar2(32767); v_p_xdescinssini varchar2(32767); v_p_xplacainssini  varchar2(32767);"
                Dim xsp As String = "begin SP_RNGENERARSINIESTRO(:v_p_irespuesta, :v_p_xmsjusuario, :v_p_xmsjtecnico, :v_p_idsegmanorg, :v_p_idsegmanusuperit, :v_p_idcomunmanestado, :v_p_idcomunmanlocalid, :v_p_itipoinsinssini, :v_p_xnacioninssini, :v_p_xcedpropinssini, :v_p_finicioinssini, :v_p_itipoinssini, :v_p_ffininssini, :v_p_icausainssini, :v_p_focurrinssini, :v_p_fdeclarinssini, :v_p_fnotifinssini, :v_p_xnuminssini, :v_p_xdireccioninssini, :v_p_xdescinssin, :v_p_xplacainssini); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20, param21)
                respopera.irespuesta = param1.Value.ToString()
                respopera.xmsjusuario = param2.Value.ToString()
                respopera.xmsjtecnico = param3.Value.ToString()

                Return respopera

            Catch ex As Exception
                respopera.irespuesta = "0"
                respopera.xmsjtecnico = ex.Message
                respopera.xmsjusuario = "Error en el proceso, Comuníquese con sistemas"
                AgregarLogErrores("Metodo:GenerarSiniestro ", ex)
                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function GenerarSuscripcion(persaipinssinicotiz As persaipinssinicotiz) As respopera
            Dim respopera As New respopera
            Dim xmsj As String = ""
            Try

                Dim param1 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param1.OracleDbType = Client.OracleDbType.Varchar2
                param1.Size = 1
                param1.ParameterName = "p_irespuesta"
                param1.Direction = ParameterDirection.Output

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Varchar2
                param2.Size = 300
                param2.ParameterName = "p_xmsjusuario"
                param2.Direction = ParameterDirection.Output

                Dim param3 As New Client.OracleParameter
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 300
                param3.ParameterName = "p_xmsjtecnico"
                param3.Direction = ParameterDirection.Output

                'Paramestros
                Dim param4 As New Client.OracleParameter
                param4.OracleDbType = Client.OracleDbType.Decimal
                param4.Value = persaipinssinicotiz.idsegmanorg
                param4.ParameterName = "p_idsegmanorg"

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Decimal
                param5.Value = persaipinssinicotiz.idsegmanusuperit
                param5.ParameterName = "p_idsegmanusuperit"

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Decimal
                param6.Value = persaipinssinicotiz.idcomunmanestado
                param6.ParameterName = "p_idcomunmanestado"

                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Decimal
                param7.Value = persaipinssinicotiz.idcomunmanlocalid
                param7.ParameterName = "p_idcomunmanlocalid"

                Dim param8 As New Client.OracleParameter
                param8.OracleDbType = Client.OracleDbType.Varchar2
                param8.Size = 20
                param8.Value = persaipinssinicotiz.itipoinsinssinicotiz
                param8.ParameterName = "p_itipoinsinscotiz"

                Dim param9 As New Client.OracleParameter
                param9.OracleDbType = Client.OracleDbType.Varchar2
                param9.Size = 10
                param9.Value = persaipinssinicotiz.xnacioninssinicotiz
                param9.ParameterName = "p_xnacioninscotiz"

                Dim param10 As New Client.OracleParameter
                param10.OracleDbType = Client.OracleDbType.Varchar2
                param10.Size = 30
                param10.Value = persaipinssinicotiz.xcedpropinssinicotiz
                param10.ParameterName = "p_xcedpropinscotiz"

                Dim param11 As New Client.OracleParameter
                param11.OracleDbType = Client.OracleDbType.Date
                param11.Value = persaipinssinicotiz.finicioinssinicotiz
                param11.ParameterName = "p_finicioinscotiz"

                Dim param12 As New Client.OracleParameter
                param12.OracleDbType = Client.OracleDbType.Varchar2
                param12.Size = 30
                param12.Value = persaipinssinicotiz.itipoinssinicotiz
                param12.ParameterName = "p_itipoinscotiz"

                Dim param13 As New Client.OracleParameter
                param13.OracleDbType = Client.OracleDbType.Date
                param13.Value = persaipinssinicotiz.ffininssinicotiz
                param13.ParameterName = "p_ffininscotiz"

                Dim param14 As New Client.OracleParameter
                param14.OracleDbType = Client.OracleDbType.Varchar2
                param14.Size = 30
                param14.Value = persaipinssinicotiz.icausainssinicotiz
                param14.ParameterName = "p_icausainscotiz"

                Dim param15 As New Client.OracleParameter
                param15.OracleDbType = Client.OracleDbType.Date
                param15.Value = persaipinssinicotiz.focurrinssinicotiz
                param15.ParameterName = "p_focurrinscotiz"

                Dim param16 As New Client.OracleParameter
                param16.OracleDbType = Client.OracleDbType.Date
                param16.Value = persaipinssinicotiz.fdeclarinssinicotiz
                param16.ParameterName = "p_fdeclarinscotiz"

                Dim param17 As New Client.OracleParameter
                param17.OracleDbType = Client.OracleDbType.Date
                param17.Value = persaipinssinicotiz.fnotifinssinicotiz
                param17.ParameterName = "p_fnotifinscotiz"

                Dim param18 As New Client.OracleParameter
                param18.OracleDbType = Client.OracleDbType.Varchar2
                param18.Size = 30
                param18.Value = " " 'persaipinssinicotiz.xnuminssinicotiz
                param18.ParameterName = "p_xnuminscotiz"
                param18.Direction = ParameterDirection.InputOutput

                Dim param19 As New Client.OracleParameter
                param19.OracleDbType = Client.OracleDbType.Varchar2
                param19.Size = 100
                param19.Value = persaipinssinicotiz.xdireccioninssinicotiz
                param19.ParameterName = "p_xdireccioninscotiz"

                Dim param20 As New Client.OracleParameter
                param20.OracleDbType = Client.OracleDbType.Varchar2
                param20.Size = 500
                param20.Value = persaipinssinicotiz.xdescinssinicotiz
                param20.ParameterName = "p_xdescinscotiz"

                Dim param21 As New Client.OracleParameter
                param21.OracleDbType = Client.OracleDbType.Varchar2
                param21.Size = 10
                param21.Value = persaipinssinicotiz.xplacainssinicotiz
                param21.ParameterName = "p_xplacainscotiz"

                Dim xdeclare As String = "DECLARE v_p_irespuesta varchar2(32767); v_p_xmsjusuario varchar2(32767); v_p_xmsjtecnico varchar2(32767); v_p_idsegmanorg float;  v_p_idsegmanusuperit float; v_p_idcomunmanestado float;  v_p_idcomunmanlocalid float; v_p_itipoinsinscotiz varchar2(32767); v_p_xnacioninscotiz varchar2(32767);  v_p_xcedpropinscotiz varchar2(32767); v_p_finicioinscotiz date; v_p_itipoinscotiz varchar2(32767); v_p_ffininscotiz date; v_p_icausainscotiz varchar2(32767); v_p_focurrinscotiz date; v_p_fdeclarinscotiz date; v_p_fnotifinscotiz date; v_p_xnuminscotiz varchar2(32767); v_p_xdireccioninscotiz varchar2(32767); v_p_xdescinscotiz varchar2(32767); v_p_xplacainscotiz  varchar2(32767);"
                Dim xsp As String = "begin SP_RNGENERARSUSCRIPCION(:v_p_irespuesta, :v_p_xmsjusuario, :v_p_xmsjtecnico, :v_p_idsegmanorg, :v_p_idsegmanusuperit, :v_p_idcomunmanestado, :v_p_idcomunmanlocalid, :v_p_itipoinsinscotiz, :v_p_xnacioninscotiz, :v_p_xcedpropinscotiz, :v_p_finicioinscotiz, :v_p_itipoinscotiz, :v_p_ffininscotiz, :v_p_icausainscotiz, :v_p_focurrinscotiz, :v_p_fdeclarinscotiz, :v_p_fnotifinscotiz, :v_p_xnuminscotiz, :v_p_xdireccioninscotiz, :v_p_xdescinssin, :v_p_xplacainscotiz); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20, param21)
                respopera.irespuesta = param1.Value.ToString()
                respopera.xmsjusuario = param2.Value.ToString()
                respopera.xmsjtecnico = param3.Value.ToString()

                Return respopera

            Catch ex As Exception
                respopera.irespuesta = "0"
                respopera.xmsjtecnico = ex.Message
                respopera.xmsjusuario = "Error en el proceso, Comuníquese con sistemas"
                AgregarLogErrores("Metodo:GenerarSuscripcion ", ex)
                Return respopera
            End Try

        End Function


        <HttpPost()> _
        Public Function ObtenerVideosPorIdEnc(idaipinsenc As Decimal) As List(Of datosfoto)
            Dim respopera As New respopera
            Dim xmsj As String = ""
            Dim lista_datosfoto As New List(Of datosfoto)

            Try
                Dim datosfoto As New datosfoto
                Dim rutaVideos As String = HttpContext.Current.Server.MapPath("~/Videos")
                Dim xrutaVideosPub As String = ConfigurationManager.AppSettings("xrutaPubVideo")

                Dim di As DirectoryInfo = New DirectoryInfo(rutaVideos)

                ''se obtienen todos los archivos desde la ruta de inicio
                Dim fi As FileInfo() = di.GetFiles()

                ''se recorren todos los archivos a procesar
                For i As Integer = 0 To fi.Count - 1
                    datosfoto = New datosfoto
                    datosfoto.nombre = fi(i).Name
                    datosfoto.ruta = xrutaVideosPub & fi(i).Name
                    lista_datosfoto.Add(datosfoto)
                Next

                Return lista_datosfoto

            Catch ex As Exception
                Return lista_datosfoto
                AgregarLogErrores("Metodo:ObtenerVideosPorIdEnc ", ex)
            End Try

        End Function

        <HttpGet()> _
        <HttpPost()> _
        Public Function ObtenerInspeccionArchivoPorInsEncYTipo(idaipinsenc As Decimal, itipoinsarch As String) As List(Of vi_aipinsarch)

            Dim lista_vi_aipinsarch As New List(Of vi_aipinsarch)

            If (itipoinsarch = "") Then
                Return lista_vi_aipinsarch
            End If

            Dim vi_aipinsarchController As New vi_aipinsarchController
            lista_vi_aipinsarch = vi_aipinsarchController.ObtenerListaPorEncYTipoActivos(idaipinsenc, itipoinsarch)

            Return lista_vi_aipinsarch

        End Function

        <HttpPost()> _
        <HttpGet()> _
        Public Function ObtenerInspeccionArchivoPorid(idaipinsarch As Decimal) As vi_aipinsarch

            Dim vi_aipinsarch As New vi_aipinsarch


            Dim vi_aipinsarchController As New vi_aipinsarchController
            vi_aipinsarch = vi_aipinsarchController.selvi_aipinsarchxid(idaipinsarch)

            Return vi_aipinsarch

        End Function

        <HttpPost()> _
       <HttpGet()> _
        Public Function EliminarArchivoPoridArch(idaipinsarch As Decimal) As respopera


            Dim respopera As New respopera
            Try

           
                Dim aipinsarchController As New aipinsarchController
                Dim aipinsarch As aipinsarch = aipinsarchController.selaipinsarchxid(idaipinsarch)

                If (aipinsarch IsNot Nothing) Then
                    respopera = aipinsarchController.eliaipinsarch(idaipinsarch)
                    If (respopera.irespuesta = "1") Then
                        Dim xruta As String = aipinsarch.xrutainsarch & aipinsarch.xnominsarch

                        If (File.Exists(xruta)) Then
                            File.Delete(xruta)
                        End If
                        If (aipinsarch.itipoinsarch = "AUDIO") Then
                            respopera.xmsjusuario = "Su nota de voz fue eliminada satisfactoriamente."
                        Else
                            respopera.xmsjusuario = "Su video fue eliminado satisfactoriamente."
                        End If
                        Return respopera
                    End If
                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "ERR-NO01: Ha ocurrido un error al intentar eliminar su archivo."
                    respopera.xmsjusuario = "No se encontro el archivo " & idaipinsarch
                End If


                Return respopera
            Catch ex As Exception
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "ERR-EX01: Ha ocurrido un error al intentar eliminar su archivo."
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:EliminarArchivoPoridArch ", ex)
                Return respopera
            End Try
        End Function


        <HttpGet()> _
        Public Function ObtenerArchivoAipinsarchPorid(idaipinsarch As Decimal) As DownloadFilesResult

            Dim vi_aipinsarch As New vi_aipinsarch

            Dim DownloadFilesResult As New DownloadFilesResult
            Dim vi_aipinsarchController As New vi_aipinsarchController
            vi_aipinsarch = vi_aipinsarchController.selvi_aipinsarchxid(idaipinsarch)

            If (vi_aipinsarch IsNot Nothing) Then
                Dim xrutaarc As String = vi_aipinsarch.xrutainsarch & vi_aipinsarch.xnominsarch
                If File.Exists(xrutaarc) Then
                    DownloadFilesResult.ArchivoByte = File.ReadAllBytes(xrutaarc)
                    DownloadFilesResult.Name = vi_aipinsarch.xnominsarch
                    DownloadFilesResult.Type = System.IO.Path.GetExtension(xrutaarc)
                Else
                    DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                    DownloadFilesResult.Name = ""
                    DownloadFilesResult.Type = ""
                End If

            Else
                DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                DownloadFilesResult.Name = ""
                DownloadFilesResult.Type = ""
            End If


            Return DownloadFilesResult

        End Function


        <HttpGet()> _
        Public Function ObtenerInspecionAudioPorEnc(idaipinsenc As Decimal) As List(Of DownloadFilesResult)

            Dim lista_DownloadFilesResult As New List(Of DownloadFilesResult)
            Try

                '                 idaipinsenc As Decimal, nsecinsfoto As Short
                'Dim idaipinsenc As Decimal = 3
                'Dim nsecinsfoto As Short = 1

                Dim vi_aipinsarchController As New vi_aipinsarchController
                Dim lista_vi_aipinsarch As List(Of vi_aipinsarch) = vi_aipinsarchController.ObtenerListaPorEncYTipoActivos(idaipinsenc, "AUDIO")
                Dim DownloadFilesResult As New DownloadFilesResult


                If lista_vi_aipinsarch.Count > 0 Then

                    For Each vi_aipinsarch As vi_aipinsarch In lista_vi_aipinsarch
                        Dim xrutaarc As String = vi_aipinsarch.xrutainsarch & vi_aipinsarch.xnominsarch
                        If File.Exists(xrutaarc) Then
                            DownloadFilesResult.ArchivoByte = File.ReadAllBytes(xrutaarc)
                            DownloadFilesResult.Name = vi_aipinsarch.xnominsarch
                            DownloadFilesResult.Type = System.IO.Path.GetExtension(xrutaarc)
                        Else
                            DownloadFilesResult.ArchivoByte = Convert.FromBase64String("")
                            DownloadFilesResult.Name = ""
                            DownloadFilesResult.Type = ""
                        End If

                        lista_DownloadFilesResult.Add(DownloadFilesResult)
                    Next

                End If

                Return lista_DownloadFilesResult

            Catch ex As Exception
                Return lista_DownloadFilesResult
            End Try
        End Function

        <HttpPost()> _
        Public Function ObtenerInspEncMovil(idaipinsenc As Decimal) As agendamovil
            Dim fecha_start As New Date(Date.Now.Year, Date.Now.Month, Date.Now.Day, 0, 0, 0)
            '
            Dim vi_aipinsencController As New vi_aipinsencController

            Dim vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(idaipinsenc)
            Dim agendamovil As New agendamovil
            If (vi_aipinsenc IsNot Nothing) Then

                With agendamovil
                    .idaipinsenc = vi_aipinsenc.idaipinsenc
                    .fejecactivperi = vi_aipinsenc.fejecactivperi
                    .itipoinsenc = vi_aipinsenc.itipoinsenc.Trim()
                    .xcedpropinsenc = vi_aipinsenc.xcedpropinsenc.Trim()
                    .xcedsidoinsenc = vi_aipinsenc.xcedsidoinsenc.Trim()
                    .xsermotinsenc = vi_aipinsenc.xsermotinsenc
                    .xsercarrinsenc = vi_aipinsenc.xsercarrinsenc
                    .xplacinsenc = vi_aipinsenc.xplacinsenc.Trim()
                    .xnomcliactivperi = remover_caracteres_especiales(vi_aipinsenc.xnomcliactivperi.Trim())
                    .xnumpolinsenc = vi_aipinsenc.xnumpolinsenc.Trim()
                    .xnumsininsenc = vi_aipinsenc.xnumsininsenc.Trim()
                    .xtelfmovilactivperi = vi_aipinsenc.xtelfmovilactivperi.Trim()

                    ''lo hago asi dado que no se utiliza aqui, asi pesa menos en el movil
                    .xdescactivperi = "des" 'remover_caracteres_especiales(lista_vi_aipinsenc(i).xdescactivperi.Trim())
                    .xfechahora = FormatoFechaHora(vi_aipinsenc.fejecactivperi)

                    .xnuminspinsenc = vi_aipinsenc.xnuminspinsenc
                    .fcreainsenc = FormatoFechaHora(vi_aipinsenc.fcreainsenc)
                    .xnomsucinsinsenc = vi_aipinsenc.xnomsucinsinsenc
                    .xnomramopolizinsenc = vi_aipinsenc.xnomramopolizinsenc
                    .xnombrecomercialperit = vi_aipinsenc.xnombrecomercialperit
                    .itipoperitinsenc = vi_aipinsenc.itipoperitinsenc

                End With
            End If
            agendamovil.xnomcliactivperi = remover_caracteres_especiales(vi_aipinsenc.xnomcliactivperi)
            agendamovil.xdescactivperi = remover_caracteres_especiales(vi_aipinsenc.xdescactivperi)


            '
            Return agendamovil
        End Function

        <HttpPost()> _
        Public Function ObtenerInspSinVehMovilPorIdEnc(idaipinsenc As Decimal) As sinmanvehmovil
            Dim fecha_start As New Date(Date.Now.Year, Date.Now.Month, Date.Now.Day, 0, 0, 0)
            '

            Dim vi_aipinssinController As New vi_aipinssinController
            Dim comunconfvalorController As New comunconfvalorController

            Dim vi_aipinssin As vi_aipinssin = vi_aipinssinController.selvi_aipinssinxidinsenc(idaipinsenc)
            Dim sinmanvehmovil As New sinmanvehmovil
            Dim comunconfvalor As comunconfvalor
            If (vi_aipinssin IsNot Nothing) Then

                ''se busca el mantenimiento de vehiculo por siniestro
                Dim vi_aipmanvehController As New vi_aipmanvehController
                Dim vi_aipmanveh As vi_aipmanveh = vi_aipmanvehController.selvi_aipmanvehxid(vi_aipinssin.idaipmanveh)



                With sinmanvehmovil

                    .idaipinssin = vi_aipinssin.idaipinssin
                    .idaipinsmotiv = vi_aipinssin.idaipinsmotiv
                    .xnominsmotiv = vi_aipinssin.xnominsmotiv
                    .nkiloinssin = vi_aipinssin.nkiloinssin
                    If (vi_aipinssin.xdescinssin.Trim() <> "") Then
                        .xdescinssin = vi_aipinssin.xdescinssin.Trim()
                    Else
                        .xdescinssin = vi_aipinssin.xdescinssin.Trim()
                    End If

                    


                    If (vi_aipmanveh IsNot Nothing) Then
                        .xnommanvehmar = vi_aipmanveh.xnommanvehmar
                        .xnommanvehmod = vi_aipmanveh.xnommanvehmod
                        .xnommanvehver = vi_aipmanveh.xnommanvehver
                        .naniomanveh = vi_aipmanveh.naniomanveh
                        .iclasemanveh = vi_aipmanveh.iclasemanveh
                        .icolormanveh = vi_aipmanveh.icolormanveh
                        comunconfvalor = comunconfvalorController.selcomunconfvalorxconceptoYxvalorcodigo("ICOLORMANVEH", vi_aipmanveh.icolormanveh)
                        If (comunconfvalor IsNot Nothing) Then
                            .xnomcolor = comunconfvalor.xvalordescripcion
                        End If

                        .xplacamanveh = vi_aipmanveh.xplacamanveh
                        .xsercarrmanveh = vi_aipmanveh.xsercarrmanveh
                        .xsermotmanveh = vi_aipmanveh.xsermotmanveh
                    End If
                    


                End With
            End If
            '
            Return sinmanvehmovil
        End Function


        <HttpPost()> _
        Public Function ActualizarSinYMantVehiculo(idaipinssin As Decimal, xnombreusuario As String, xplacamanveh As String, xsercarrmanveh As String, nkiloinssin As String, idaipinssinmotiv As String) As respopera
            Dim respopera As New respopera
            Try
                Dim sb As New StringBuilder
                Dim aipmanvehController As New aipmanvehController
                Dim aipinssinController As New aipinssinController
                Dim MantenimientoController As New MantenimientoController

                ''se realiza esta adecuacion para guardar un espacio para evitar en guardar los casos con valores vacios
                If (xplacamanveh = "") Then
                    xplacamanveh = " "
                End If
                If (xsercarrmanveh = "") Then
                    xsercarrmanveh = " "
                End If

                Dim aipmanveh As New aipmanveh
                Dim idsegmanusu As Decimal = 0
                Dim vi_segmanusuController As New vi_segmanusuController
                Dim vi_segmanusu As vi_segmanusu = vi_segmanusuController.selvi_segmanusuxnomusu(xnombreusuario)

                If (vi_segmanusu IsNot Nothing) Then
                    idsegmanusu = vi_segmanusu.idsegmanusu
                End If

                ''se busca el siniestro a modificar
                Dim aipinssin As aipinssin = aipinssinController.selaipinssinxid(idaipinssin)

                If (aipinssin IsNot Nothing) Then
                    ''se busca los datos del vihiculo para asignar los enviados y realizar la modificacion
                    aipmanveh = aipmanvehController.selaipmanvehxid(aipinssin.idaipmanveh)

                    ''se asignan los valores a modificar del vehiculo
                    If aipmanveh IsNot Nothing Then
                        aipmanveh.xplacamanveh = xplacamanveh
                        aipmanveh.xsercarrmanveh = xsercarrmanveh

                        ''se realiza la modificacion
                        respopera = MantenimientoController.ActualizarMantVehiculoYLog(aipinssin.idaipinsenc, idsegmanusu, aipmanveh)
                        ''si es correcta la modificacion
                        If (respopera.irespuesta = "1") Then
                            ''se realiza la modificacion del siniestro para el kilometraje
                            aipinssin.nkiloinssin = nkiloinssin
                            respopera = aipinssinController.modaipinssin(aipinssin)
                            If (respopera.irespuesta = "1") Then
                                ''se realiza la modificacion del motivo, se buscan po id de siniestro
                                ''idaipinssinmotiv

                                ''ActualizarInspeccionSinMotivos
                                Dim vi_aipinssinmotivController As New vi_aipinssinmotivController
                                Dim lista_vi_aipinssinmotiv As List(Of vi_aipinssinmotiv) = vi_aipinssinmotivController.selvi_aipinssinmotivxidaipinssin(idaipinssin)

                                If (lista_vi_aipinssinmotiv.Count > 0) Then
                                    For i As Integer = 0 To lista_vi_aipinssinmotiv.Count - 1

                                        If (lista_vi_aipinssinmotiv(i).idaipinssinmotiv = idaipinssinmotiv) Then
                                            lista_vi_aipinssinmotiv(i).itilinssinmotiv = True
                                        Else
                                            lista_vi_aipinssinmotiv(i).itilinssinmotiv = False
                                        End If
                                    Next
                                    respopera = ActualizarInspeccionSinMotivos(lista_vi_aipinssinmotiv)
                                    If (respopera.irespuesta = "1") Then
                                        respopera.xmsjusuario = "Sus datos se han guardado satisfactoriamente."
                                        respopera.xmsjtecnico = "Sus datos se han guardado satisfactoriamente."
                                        Return respopera
                                    Else
                                        respopera.irespuesta = "0"
                                        respopera.xmsjusuario = "ERR-MOT01: Algunos datos no fueron almacenados (Motivo)."
                                        respopera.xmsjtecnico = "ERR-MOT01: Algunos datos no fueron almacenados (Motivo)."
                                    End If

                                Else
                                    respopera.irespuesta = "0"
                                    respopera.xmsjusuario = "ERR-NMOT01: Algunos datos no fueron almacenados (Motivo)."
                                    respopera.xmsjtecnico = "ERR-NMOT01: Algunos datos no fueron almacenados (Motivo)."
                                End If

                               
                            Else
                                respopera.irespuesta = "0"
                                respopera.xmsjusuario = "ERR-MSI01: Ha ocurrido un error al guardar sus datos."
                                respopera.xmsjtecnico = "ERR-MSI01: Ha ocurrido un error al guardar sus datos."

                            End If
                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "ERR-MVE01: Ha ocurrido un error al guardar sus datos."
                            respopera.xmsjtecnico = "ERR-MVE01: Ha ocurrido un error al guardar sus datos."
                        End If
                    Else
                        respopera.irespuesta = "0"
                        respopera.xmsjusuario = "ERR-NOVE01: Ha ocurrido un error al guardar sus datos."
                        respopera.xmsjtecnico = "ERR-NOVE01: Ha ocurrido un error al guardar sus datos."
                    End If
                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "ERR-NOSI01: Ha ocurrido un error al guardar sus datos."
                    respopera.xmsjtecnico = "ERR-NOSI01: Ha ocurrido un error al guardar sus datos."
                End If

                Return respopera

            Catch ex As Exception
                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta")
                log_errores(ex.Message & " - ActualizarSinYMantVehiculo", xrutaraiz)
                AgregarLogErrores("Metodo:ActualizarSinYMantVehiculo ", ex)
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "ERR-SV01: Ha ocurrido un error al guardar sus datos."
                respopera.xmsjtecnico = ex.Message
                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function GuardarManoObraSinMovil(idaipinssin As Decimal, idaipmanrepu As Decimal, itidainssinmobr As String, itipomatinssinmobr As String, ncantinssinmobr As Integer, nprecfininssinmobr As Decimal)

            Dim respopera As New respopera
            respopera.irespuesta = "0"
            Try
                
                Dim _msj As String = ""
                Dim _count_error As String = 0
                If (idaipinssin = 0) Then
                    _count_error = _count_error + 1
                    _msj = "Siniestro"
                End If

                If (idaipmanrepu = 0) Then
                    If (_msj.Length > 0) Then
                        _msj = _msj & ", "
                    End If
                    _msj = " Respuesto"
                    _count_error = _count_error + 1
                End If

                If (itidainssinmobr = "") Then
                    If (_msj.Length > 0) Then
                        _msj = _msj & ", "
                    End If
                    _msj = "Tipo de daño"
                    _count_error = _count_error + 1

                End If

                If (itipomatinssinmobr = "") Then
                    If (_msj.Length > 0) Then
                        _msj = _msj & ", "
                    End If
                    _msj = "Tipo de material"
                    _count_error = _count_error + 1

                End If

                If (ncantinssinmobr <= 0) Then
                    If (_msj.Length > 0) Then
                        _msj = _msj & ", "
                    End If
                    _msj = "Cantidad"
                    _count_error = _count_error + 1

                End If

                If (itipomatinssinmobr = "") Then
                    If (_msj.Length > 0) Then
                        _msj = _msj & ", "
                    End If
                    _msj = "Precio"
                    _count_error = _count_error + 1

                End If

                If (_count_error > 0) Then
                    respopera.xmsjusuario = "ERRVAL01: Los siguientes campos son obligatorios: " + _msj
                    respopera.xmsjtecnico = "ERRVAL01: Los siguientes campos son obligatorios: " + _msj
                    Return respopera
                End If

                Dim aipinssinmobr As New aipinssinmobr
                aipinssinmobr.idaipinssin = idaipinssin
                aipinssinmobr.idaipmanrepu = idaipmanrepu
                aipinssinmobr.itidainssinmobr = itidainssinmobr
                aipinssinmobr.itipomatinssinmobr = itipomatinssinmobr
                aipinssinmobr.ncantinssinmobr = ncantinssinmobr
                aipinssinmobr.nprecfininssinmobr = nprecfininssinmobr
                aipinssinmobr.iestatinssinmobr = "ACTIVO"

                respopera = GuardarManoObraConBaremo(aipinssinmobr)

                If (respopera.irespuesta = "1") Then
                    respopera.xmsjusuario = "Su mano de obra fue guardada satisfactoriamente."
                    respopera.xmsjtecnico = "Su mano de obra fue guardada satisfactoriamente."
                End If

                Return respopera
            Catch ex As Exception
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "ERR-EX01: Ha ocurrido un error al guardar la mano de obra."
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:GuardarManoObraSinMovil ", ex)
                Return respopera
            End Try


        End Function




        <HttpPost()> _
        Public Function ObtenerRepuestosMovil() As List(Of aipgenobj)

            Dim lista_aipgenobj = New List(Of aipgenobj)
            Try

                Dim _aipgenobj = New aipgenobj
                'Dim lista_aipmanrepu = New List(Of aipmanrepu)

                Dim aipmanrepuController As New aipmanrepuController
                lista_aipgenobj = aipmanrepuController.SeleccionarRepuestosConCodigoExterno()
                'If (lista_aipmanrepu.Count > 0) Then
                '    For i As Integer = 0 To lista_aipmanrepu.Count - 1
                '        If (lista_aipmanrepu(i).idaipmanrepu > 0) Then
                '            _aipgenobj = New aipgenobj
                '            _aipgenobj.id = lista_aipmanrepu(i).idaipmanrepu
                '            '_aipgenobj.id2 = ObtenerIdExternoPorIdManRepuestoInterno(lista_aipmanrepu(i).idaipmanrepu) ''identificador externo
                '            _aipgenobj.id2 = 0
                '            _aipgenobj.xnombre = lista_aipmanrepu(i).xnommanrepu

                '            lista_aipgenobj.Add(_aipgenobj)
                '        End If
                '    Next
                'End If

                Return lista_aipgenobj
            Catch ex As Exception

                Return lista_aipgenobj
            End Try


        End Function




        <HttpPost()> _
        Public Function ObtenerBaremoPorTipoMovil(idaipinsenc As Decimal, idaipmanrepu As Decimal, itidainssinmobr As String, xnombreusuario As String) As respopera
            Dim respopera As New respopera
            Try
                Dim idsegmanusu As Decimal = 0
                Dim vi_segmanusuController As New vi_segmanusuController
                Dim vi_segmanusu As vi_segmanusu = vi_segmanusuController.selvi_segmanusuxnomusu(xnombreusuario)

                If (vi_segmanusu IsNot Nothing) Then
                    idsegmanusu = vi_segmanusu.idsegmanusu
                End If


                respopera = ObtenerBaremoManoDeObra(idsegmanusu, idaipinsenc, idaipmanrepu, itidainssinmobr)

                Return respopera
            Catch ex As Exception
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "ERR-EX01: Ha ocurrido un error al obtener el baremo."
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:ObtenerBaremoPorTipoMovil ", ex)
                Return respopera
            End Try

        End Function


        <HttpPost()> _
        Public Function ObtenerMobrSiniestroMovil(idaipinssin As Decimal) As List(Of vi_aipinssinmobr)

            Dim vi_aipinssinmobrController As New vi_aipinssinmobrController
            Dim comunconfvalorController As New comunconfvalorController
            Dim lista_vi_aipinssinmobr As List(Of vi_aipinssinmobr) = vi_aipinssinmobrController.selvi_aipinssinmobrxidaipinssin(idaipinssin)
            Dim comunconfvalor As comunconfvalor
            For i As Integer = 0 To lista_vi_aipinssinmobr.Count - 1
                comunconfvalor = comunconfvalorController.selcomunconfvalorxconceptoYxvalorcodigo("ITIDAINSSINMOBR", lista_vi_aipinssinmobr(i).itidainssinmobr)
                If (comunconfvalor IsNot Nothing) Then
                    lista_vi_aipinssinmobr(i).itidainssinmobr = comunconfvalor.xvalordescripcion
                End If
            Next

            If (lista_vi_aipinssinmobr.Count > 0) Then

                Dim vi_aipinssinmobr As New vi_aipinssinmobr

                ''se agregar la cantidad y totales como ultima fila
                vi_aipinssinmobr.itipomatinssinmobr = "Totales:"
                vi_aipinssinmobr.xnommanrepu = ""
                vi_aipinssinmobr.itidainssinmobr = ""
                vi_aipinssinmobr.nprecfininssinmobr = TotalPrecioManoObraSinistroPorIdSin(idaipinssin)
                vi_aipinssinmobr.ncantinssinmobr = TotalCantidadManoObraSinistroPorIdSin(idaipinssin)
                lista_vi_aipinssinmobr.Add(vi_aipinssinmobr)
            End If

            Return lista_vi_aipinssinmobr

        End Function

        <HttpPost()> _
        Public Function ObtenerRepuestosSiniestroMovil(idaipinssin As Decimal) As List(Of vi_aipinssinrepu)


            Dim vi_aipinssinrepuController As New vi_aipinssinrepuController
            Dim lista_vi_aipinssinrepu As List(Of vi_aipinssinrepu) = vi_aipinssinrepuController.selvi_aipinssinrepuxidaipinssin(idaipinssin)
            Dim comunconfvalorController As New comunconfvalorController

            Dim comunconfvalor As comunconfvalor
            For i As Integer = 0 To lista_vi_aipinssinrepu.Count - 1
                comunconfvalor = comunconfvalorController.selcomunconfvalorxconceptoYxvalorcodigo("IORIGBAREREPU", lista_vi_aipinssinrepu(i).iorigrepuinssinrepu)
                If (comunconfvalor IsNot Nothing) Then
                    lista_vi_aipinssinrepu(i).iorigrepuinssinrepu = comunconfvalor.xvalordescripcion
                End If
            Next

            If (lista_vi_aipinssinrepu.Count > 0) Then
                Dim vi_aipinssinrepu As New vi_aipinssinrepu
                ''se agregar la cantidad y totales como ultima fila
                vi_aipinssinrepu.iorigrepuinssinrepu = "Totales:"
                vi_aipinssinrepu.xnommanrepu = ""
                vi_aipinssinrepu.nprecfininssinrepu = TotalPrecioRepuestoSinistroPorIdSin(idaipinssin)
                vi_aipinssinrepu.ncantinssinrepu = TotalCantidadRepuestoSinistroPorIdSin(idaipinssin)
                lista_vi_aipinssinrepu.Add(vi_aipinssinrepu)
            End If
            
            Return lista_vi_aipinssinrepu

        End Function

        <HttpPost()> _
        Public Function ActualizarManoObraSiniestroMovil(vi_aipinssinmobr As vi_aipinssinmobr) As respopera
            Try
                Dim respopera As New respopera
                Dim canterror As Integer = 0
                Dim cantsuccess As Integer = 0

                If (vi_aipinssinmobr Is Nothing) Then
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "Ha ocurrido un error con los datos enviados."
                    respopera.xmsjtecnico = "El objeto vi_aipinssinmobr esta llegando null"
                    Return respopera
                End If

                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
                Dim lugar As String = "ActualizarRepuestosSiniestroMovil: " & vi_aipinssinmobr.idaipinssin
                log_errores(lugar, xrutaraiz)

                


                Dim respopera2 As respopera
                respopera2 = ActualizarManoObraSiniestroNuevo(vi_aipinssinmobr)

                If (respopera2.irespuesta = "0") Then
                    Return respopera2
                End If

                respopera.irespuesta = "1"
                respopera.xmsjusuario = "Su Mano de obra fue modificada satisfactoriamente."

                Return respopera

            Catch ex As Exception

                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
                Dim lugar As String = "ActualizarManoObraSiniestroMovil: " & ex.Message
                AgregarLogErrores("Metodo:ActualizarManoObraSiniestroMovil ", ex)
                log_errores(lugar, xrutaraiz)

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error al modificar su Mano de obra."
                respopera.xmsjtecnico = ex.Message
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarManoObraCantPrecioSiniestroMovil(idaipinssinmobr As Decimal, idaipinssin As Decimal, ncantinssinmobr As Int16, nprecfininssinmobr As Decimal) As respopera
            Try
                Dim respopera As New respopera
                Dim canterror As Integer = 0
                Dim cantsuccess As Integer = 0

                If (idaipinssinmobr <= 0) Then
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "ERR-VA01: Ha ocurrido un error con los datos enviados."
                    respopera.xmsjtecnico = "Valor llego vacio"
                    Return respopera
                End If


                If (idaipinssin <= 0) Then
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "ERR-VA02: Ha ocurrido un error con los datos enviados."
                    respopera.xmsjtecnico = "Valor llego vacio"
                    Return respopera
                End If

                If (ncantinssinmobr <= 0) Then
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "ERR-VA03: Ha ocurrido un error con los datos enviados."
                    respopera.xmsjtecnico = "Valor llego vacio"
                    Return respopera
                End If

                If (nprecfininssinmobr <= 0) Then
                    respopera.irespuesta = 0
                    respopera.xmsjusuario = "ERR-VA04: Ha ocurrido un error con los datos enviados."
                    respopera.xmsjtecnico = "Valor llego vacio"
                    Return respopera
                End If

                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
                Dim lugar As String = "ActualizarRepuestosSiniestroMovil: " & idaipinssin
                log_errores(lugar, xrutaraiz)


                Dim vi_aipinssinmobrController As New vi_aipinssinmobrController
                Dim vi_aipinssinmobr As vi_aipinssinmobr = vi_aipinssinmobrController.selvi_aipinssinmobrxid(idaipinssinmobr)

                vi_aipinssinmobr.nprecfininssinmobr = nprecfininssinmobr
                vi_aipinssinmobr.ncantinssinmobr = ncantinssinmobr

                Dim respopera2 As respopera
                respopera2 = ActualizarManoObraSiniestroNuevo(vi_aipinssinmobr)

                If (respopera2.irespuesta = "0") Then
                    Return respopera2
                End If

                respopera.irespuesta = "1"
                respopera.xmsjusuario = "Su Mano de obra fue modificada satisfactoriamente."

                Return respopera

            Catch ex As Exception

                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
                Dim lugar As String = "ActualizarManoObraSiniestroMovil: " & ex.Message
                log_errores(lugar, xrutaraiz)
                AgregarLogErrores("Metodo:ActualizarManoObraSiniestroMovil ", ex)

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error al modificar su Mano de obra."
                respopera.xmsjtecnico = ex.Message
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarRepuestosSiniestroMovil(vi_aipinssinrepu As vi_aipinssinrepu) As respopera
            Try

                
                Dim respopera As New respopera
                Dim canterror As Integer = 0
                Dim cantsuccess As Integer = 0
                Dim respopera2 As respopera

                respopera2 = ActualizarRespuestoSiniestroNuevo(vi_aipinssinrepu)

                If (respopera2.irespuesta = "0") Then
                    Return respopera2
                End If

                respopera.irespuesta = "1"
                respopera.xmsjusuario = "Su Repuesto fue modificado satisfactoriamente."

                Return respopera

            Catch ex As Exception

                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
                Dim lugar As String = "ActualizarRepuestosSiniestroMovil: " & ex.Message
                log_errores(lugar, xrutaraiz)
                AgregarLogErrores("Metodo:ActualizarRepuestosSiniestroMovil ", ex)

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error al modificar su Repuesto."
                respopera.xmsjtecnico = ex.Message
                Return respopera
            End Try
        End Function


        ''suscripcion MOVIL
        <HttpPost()> _
        Public Function ObtenerInspSusVehMovilPorIdEnc(idaipinsenc As Decimal) As susmanvehmovil

            Try

            
            '
            Dim vi_aipinssusController As New vi_aipinssusController
            Dim comunconfvalorController As New comunconfvalorController

            Dim vi_aipinssus As vi_aipinssus = vi_aipinssusController.selvi_aipinssusxidinsenc(idaipinsenc)
            Dim susmanvehmovil As New susmanvehmovil
            Dim comunconfvalor As comunconfvalor
            If (vi_aipinssus IsNot Nothing) Then

                ''se busca el mantenimiento de vehiculo por suscripcion
                Dim vi_aipmanvehController As New vi_aipmanvehController
                Dim vi_aipmanveh As vi_aipmanveh = vi_aipmanvehController.selvi_aipmanvehxid(vi_aipinssus.idaipmanveh)



                With susmanvehmovil

                    .idaipinssus = vi_aipinssus.idaipinssus
                    .idaipinsmotiv = vi_aipinssus.idaipinsmotiv
                    .xnominsmotiv = vi_aipinssus.xnominsmotiv
                    .nkiloinssus = vi_aipinssus.nkiloinssus
                    If (vi_aipinssus.xdescinssus.Trim() <> "") Then
                        .xdescinssus = vi_aipinssus.xdescinssus.Trim()
                    Else
                        .xdescinssus = vi_aipinssus.xdescinssus.Trim()
                    End If

                    If (vi_aipinssus.xdictinssus.Trim() <> "") Then
                        .xdictinssus = vi_aipinssus.xdictinssus.Trim()
                    Else
                        .xdictinssus = vi_aipinssus.xdictinssus.Trim()
                    End If

                    If (vi_aipmanveh IsNot Nothing) Then
                        .xnommanvehmar = vi_aipmanveh.xnommanvehmar
                        .xnommanvehmod = vi_aipmanveh.xnommanvehmod
                        .xnommanvehver = vi_aipmanveh.xnommanvehver
                        .naniomanveh = vi_aipmanveh.naniomanveh
                        .iclasemanveh = vi_aipmanveh.iclasemanveh
                        .icolormanveh = vi_aipmanveh.icolormanveh
                        comunconfvalor = comunconfvalorController.selcomunconfvalorxconceptoYxvalorcodigo("ICOLORMANVEH", vi_aipmanveh.icolormanveh)
                        If (comunconfvalor IsNot Nothing) Then
                            .xnomcolor = comunconfvalor.xvalordescripcion
                        End If

                        .xplacamanveh = vi_aipmanveh.xplacamanveh
                        .xsercarrmanveh = vi_aipmanveh.xsercarrmanveh
                        .xsermotmanveh = vi_aipmanveh.xsermotmanveh
                    End If



                End With
            End If
            '
                Return susmanvehmovil

            Catch ex As Exception
                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
                Dim lugar As String = "ObtenerInspSusVehMovilPorIdEnc: " & ex.Message
                AgregarLogErrores("Metodo:ObtenerInspSusVehMovilPorIdEnc ", ex)
                log_errores(lugar, xrutaraiz)

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Al obtener los datos."
                respopera.xmsjtecnico = ex.Message
                Return Nothing
            End Try
        End Function

        <HttpPost()> _
        Public Function ActualizarSusYMantVehiculo(idaipinssus As Decimal, xnombreusuario As String, xplacamanveh As String, xsercarrmanveh As String, nkiloinssus As String, idaipinssusmotiv As String, icolormanveh As String) As respopera
            Dim respopera As New respopera
            Try
                Dim sb As New StringBuilder
                Dim aipmanvehController As New aipmanvehController
                Dim aipinssusController As New aipinssusController
                Dim MantenimientoController As New MantenimientoController

                ''se realiza esta adecuacion para guardar un espacio para evitar en guardar los casos con valores vacios
                If (xplacamanveh = "") Then
                    xplacamanveh = " "
                End If
                If (xsercarrmanveh = "") Then
                    xsercarrmanveh = " "
                End If


                Dim aipmanveh As New aipmanveh
                Dim idsegmanusu As Decimal = 0
                Dim vi_segmanusuController As New vi_segmanusuController
                Dim vi_segmanusu As vi_segmanusu = vi_segmanusuController.selvi_segmanusuxnomusu(xnombreusuario)

                If (vi_segmanusu IsNot Nothing) Then
                    idsegmanusu = vi_segmanusu.idsegmanusu
                End If

                ''se busca el suscripcion a modificar
                Dim aipinssus As aipinssus = aipinssusController.selaipinssusxid(idaipinssus)

                If (aipinssus IsNot Nothing) Then
                    ''se busca los datos del vihiculo para asignar los enviados y realizar la modificacion
                    aipmanveh = aipmanvehController.selaipmanvehxid(aipinssus.idaipmanveh)

                    ''se asignan los valores a modificar del vehiculo
                    If aipmanveh IsNot Nothing Then
                        aipmanveh.xplacamanveh = xplacamanveh
                        aipmanveh.xsercarrmanveh = xsercarrmanveh
                        aipmanveh.icolormanveh = icolormanveh

                        ''se realiza la modificacion
                        respopera = MantenimientoController.ActualizarMantVehiculoYLog(aipinssus.idaipinsenc, idsegmanusu, aipmanveh)
                        ''si es correcta la modificacion
                        If (respopera.irespuesta = "1") Then
                            ''se realiza la modificacion del susiestro para el kilometraje
                            aipinssus.nkiloinssus = nkiloinssus
                            respopera = aipinssusController.modaipinssus(aipinssus)
                            If (respopera.irespuesta = "1") Then
                                ''se realiza la modificacion del motivo, se buscan po id de susiestro
                                ''idaipinssusmotiv

                                ''ActualizarInspeccionSusMotivos
                                Dim vi_aipinssusmotivController As New vi_aipinssusmotivController
                                Dim lista_vi_aipinssusmotiv As List(Of vi_aipinssusmotiv) = vi_aipinssusmotivController.selvi_aipinssusmotivxidaipinssus(idaipinssus)

                                If (lista_vi_aipinssusmotiv.Count > 0) Then
                                    For i As Integer = 0 To lista_vi_aipinssusmotiv.Count - 1

                                        If (lista_vi_aipinssusmotiv(i).idaipinssusmotiv = idaipinssusmotiv) Then
                                            lista_vi_aipinssusmotiv(i).itilinssusmotiv = True
                                        Else
                                            lista_vi_aipinssusmotiv(i).itilinssusmotiv = False
                                        End If
                                    Next
                                    respopera = ActualizarInspeccionSusMotivos(lista_vi_aipinssusmotiv)
                                    If (respopera.irespuesta = "1") Then
                                        respopera.xmsjusuario = "Sus datos se han guardado satisfactoriamente."
                                        respopera.xmsjtecnico = "Sus datos se han guardado satisfactoriamente."
                                        Return respopera
                                    Else
                                        respopera.irespuesta = "0"
                                        respopera.xmsjusuario = "ERR-MOT01: Algunos datos no fueron almacenados (Motivo)."
                                        respopera.xmsjtecnico = "ERR-MOT01: Algunos datos no fueron almacenados (Motivo)."
                                    End If

                                Else
                                    respopera.irespuesta = "0"
                                    respopera.xmsjusuario = "ERR-NMOT01: Algunos datos no fueron almacenados (Motivo)."
                                    respopera.xmsjtecnico = "ERR-NMOT01: Algunos datos no fueron almacenados (Motivo)."
                                End If


                            Else
                                respopera.irespuesta = "0"
                                respopera.xmsjusuario = "ERR-MSI01: Ha ocurrido un error al guardar sus datos."
                                respopera.xmsjtecnico = "ERR-MSI01: Ha ocurrido un error al guardar sus datos."

                            End If
                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "ERR-MVE01: Ha ocurrido un error al guardar sus datos."
                            respopera.xmsjtecnico = "ERR-MVE01: Ha ocurrido un error al guardar sus datos."
                        End If
                    Else
                        respopera.irespuesta = "0"
                        respopera.xmsjusuario = "ERR-NOVE01: Ha ocurrido un error al guardar sus datos."
                        respopera.xmsjtecnico = "ERR-NOVE01: Ha ocurrido un error al guardar sus datos."
                    End If
                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "ERR-NOSU01: Ha ocurrido un error al guardar sus datos."
                    respopera.xmsjtecnico = "ERR-NOSU01: Ha ocurrido un error al guardar sus datos."
                End If

                Return respopera

            Catch ex As Exception
                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta")
                log_errores(ex.Message & " - ActualizarSusYMantVehiculo", xrutaraiz)
                AgregarLogErrores("Metodo:ActualizarSusYMantVehiculo ", ex)
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "ERR-SV01: Ha ocurrido un error al guardar sus datos."
                respopera.xmsjtecnico = ex.Message
                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function GuardarObservacionSuscripcionMovil(aipinssus As aipinssus) As respopera
            Dim respopera As New respopera
            Try
                If (aipinssus Is Nothing) Then
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "ERR-SUS01: Ha ocurrido un error con los datos."
                    respopera.xmsjtecnico = "El objeto de suscripción llegó nulo."
                    Return respopera
                End If

                Dim vi_aipinssusController As New vi_aipinssusController
                Dim _vi_aipinssus As vi_aipinssus = vi_aipinssusController.selvi_aipinssusxid(aipinssus.idaipinssus)

                If (_vi_aipinssus IsNot Nothing) Then
                    _vi_aipinssus.xdictinssus = aipinssus.xdictinssus

                    respopera = GuardarInspeccionSuscripcion(_vi_aipinssus)
                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "ERR-SUS02: Ha ocurrido un error con los datos."
                    respopera.xmsjtecnico = "El objeto de suscripción llegó nulo."
                    Return respopera
                End If

                Return respopera

            Catch ex As Exception
                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta")
                log_errores(ex.Message & " - GuardarObservacionSuscripcionMovil", xrutaraiz)
                AgregarLogErrores("Metodo:GuardarObservacionSuscripcionMovil ", ex)
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "ERR-EX01: Ha ocurrido un error al guardar sus datos."
                respopera.xmsjtecnico = ex.Message
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function GuardarObservacionSiniestroMovil(aipinssin As aipinssin) As respopera
            Dim respopera As New respopera
            Try
                If (aipinssin Is Nothing) Then
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "ERR-SIN01: Ha ocurrido un error con los datos."
                    respopera.xmsjtecnico = "El objeto de Siniestro llegó nulo."
                    Return respopera
                End If

                Dim vi_aipinssinController As New vi_aipinssinController
                Dim _vi_aipinssin As vi_aipinssin = vi_aipinssinController.selvi_aipinssinxid(aipinssin.idaipinssin)

                If (_vi_aipinssin IsNot Nothing) Then
                    _vi_aipinssin.xdescinssin = aipinssin.xdescinssin

                    respopera = GuardarInspeccionSiniestro(_vi_aipinssin)
                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "ERR-SIN02: Ha ocurrido un error con los datos."
                    respopera.xmsjtecnico = "El objeto de Siniestro llegó nulo."
                    Return respopera
                End If

                Return respopera

            Catch ex As Exception
                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta")
                log_errores(ex.Message & " - GuardarObservacionSiniestroMovil", xrutaraiz)
                AgregarLogErrores("Metodo:GuardarObservacionSiniestroMovil ", ex)
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "ERR-EX01: Ha ocurrido un error al guardar sus datos."
                respopera.xmsjtecnico = ex.Message
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ProcesarInspeccionSuscripcionMovil(aipinssus As aipinssus) As respopera
            Dim respopera As New respopera
            Try
                If (aipinssus Is Nothing) Then
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "ERR-SUS01: Ha ocurrido un error con los datos."
                    respopera.xmsjtecnico = "El objeto de suscripción llegó nulo."
                    Return respopera
                End If

                Dim vi_aipinssusController As New vi_aipinssusController
                Dim _vi_aipinssus As vi_aipinssus = vi_aipinssusController.selvi_aipinssusxid(aipinssus.idaipinssus)

                If (_vi_aipinssus IsNot Nothing) Then
                    _vi_aipinssus.xdictinssus = aipinssus.xdictinssus

                    respopera = GuardarInspeccionSuscripcion(_vi_aipinssus)
                    If (respopera.irespuesta = "1") Then
                        respopera = ProcesarInspeccionSuscripcion(_vi_aipinssus)
                        If (respopera.irespuesta = "1") Then
                            respopera.xmsjusuario = "Su inspección fue enviada satisfactoriamente."
                        End If
                    End If
                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "ERR-SUS02: Ha ocurrido un error con los datos."
                    respopera.xmsjtecnico = "El objeto de suscripción llegó nulo."
                    Return respopera
                End If

                Return respopera

            Catch ex As Exception
                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta")
                log_errores(ex.Message & " - ProcesarInspeccionSuscripcionMovil", xrutaraiz)
                AgregarLogErrores("Metodo:ProcesarInspeccionSiniestroMovil ", ex)
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "ERR-EX01: Ha ocurrido un error al guardar sus datos."
                respopera.xmsjtecnico = ex.Message
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function ProcesarInspeccionSiniestroMovil(aipinssin As aipinssin) As respopera
            Dim respopera As New respopera
            Try
                If (aipinssin Is Nothing) Then
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "ERR-SIN01: Ha ocurrido un error con los datos."
                    respopera.xmsjtecnico = "El objeto de Siniestro llegó nulo."
                    Return respopera
                End If

                Dim vi_aipinssinController As New vi_aipinssinController
                Dim _vi_aipinssin As vi_aipinssin = vi_aipinssinController.selvi_aipinssinxid(aipinssin.idaipinssin)

                If (_vi_aipinssin IsNot Nothing) Then
                    _vi_aipinssin.xdescinssin = aipinssin.xdescinssin

                    respopera = GuardarInspeccionSiniestro(_vi_aipinssin)
                    If (respopera.irespuesta = "1") Then
                        respopera = ProcesarInspeccionSiniestro(_vi_aipinssin)
                        If (respopera.irespuesta = "1") Then
                            respopera.xmsjusuario = "Su inspección fue enviada satisfactoriamente."
                        End If
                    End If
                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "ERR-SIN02: Ha ocurrido un error con los datos."
                    respopera.xmsjtecnico = "El objeto de Siniestro llegó nulo."
                    Return respopera
                End If

                Return respopera

            Catch ex As Exception
                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta")
                log_errores(ex.Message & " - ProcesarInspeccionSiniestroMovil", xrutaraiz)
                AgregarLogErrores("Metodo:ProcesarInspeccionSiniestroMovil ", ex)
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "ERR-EX01: Ha ocurrido un error al guardar sus datos."
                respopera.xmsjtecnico = ex.Message
                Return respopera
            End Try
        End Function



        <HttpPost()> _
        Public Function ObtenerRepuestosSuscripcionEstadGenPorColum(idaipinssus As Decimal, numColum As Integer) As List(Of vi_aipinssusrepuest)

            Dim vi_aipinssusrepuestController As New vi_aipinssusrepuestController
            Dim _lista_vi_aipinssusrepuestFinal As New List(Of vi_aipinssusrepuest)
            Dim lista_vi_aipinssusrepuest As List(Of vi_aipinssusrepuest) = vi_aipinssusrepuestController.selvi_aipinssusrepuestxidaipinssus(idaipinssus)

            Dim total As Integer = lista_vi_aipinssusrepuest.Count
            Dim Mitad As Integer = redondear_al_mayor(total / numColum)

            'Dim redondeo As Integer = 0
            'Dim y As Double
            'Dim z As Double
            ''
            'y = Math.Round(total / 2)
            'z = y - total
            'If (z < 0) Then
            '    redondeo = y + 1
            'End If
            'If (z > 0) Then
            '    redondeo = y
            'End If
            'If (z = 0) Then
            '    redondeo = total
            'End If

            'Mitad = redondeo

            ''con el valor de la mitad de la lista se realiza la 
            Dim continuar As Boolean = True
            Dim vi_aipinssusrepuest As vi_aipinssusrepuest
            If (lista_vi_aipinssusrepuest.Count > 0) Then
                Dim i As Integer = 0
                Dim countColum As Integer = 0

                While continuar

                    ''se debe recorrer la lista e ir tomando los registros de ambas columna en este caso para movil seria 2 columnas
                    'se agrega el 1er registro de la primera columna
                    _lista_vi_aipinssusrepuestFinal.Add(lista_vi_aipinssusrepuest(i))


                    ''se realiza la suma del valor mitad al contador actual
                    countColum = i + Mitad
                    ''se verifica si el valor calculado es menor o igual al total menos uno de la lista
                    ''si no cumple la condicion no se continua el proceso ya que quiere decir que llego al ultimo valor y no existe un objeto en la posicion calculada
                    If (countColum <= (total - 1)) Then
                        _lista_vi_aipinssusrepuestFinal.Add(lista_vi_aipinssusrepuest(countColum))
                        'Else
                        '    continuar = False
                    
                    End If

                    If (numColum = 3) Then
                        countColum = countColum + Mitad
                        If (countColum <= (total - 1)) Then
                            _lista_vi_aipinssusrepuestFinal.Add(lista_vi_aipinssusrepuest(countColum))
                        Else
                            vi_aipinssusrepuest = New vi_aipinssusrepuest
                            vi_aipinssusrepuest.idaipmanrepu = 0
                            vi_aipinssusrepuest.xnommanrepu = ""
                            _lista_vi_aipinssusrepuestFinal.Add(vi_aipinssusrepuest)
                        End If

                    End If


                    If (i >= (Mitad - 1)) Then
                        continuar = False
                    End If


                    ''se incrementa el contador
                    i += 1

                End While

            End If


            Return _lista_vi_aipinssusrepuestFinal

        End Function

        <HttpPost()> _
        Public Function EnvioMasivoDeCasosPorPeritoMovil(xnombreusuario As String) As respopera
            Dim respopera As New respopera
            Try
                Dim idsegmanusuperit As Decimal = 0
                Dim _error As Boolean = False
                Dim _exito As Boolean = False
                Dim _countError As Integer = 0
                Dim _countExito As Integer = 0
                Dim _countTotal As Integer = 0
                Dim _msj As String = ""
                Dim _siniestros As String = ""
                Dim _suscripcion As String = ""
                Dim _lugar As String = ""
                ''se realiza la busqueda de todas las inspecciones en estatus "POR PROCESAR" para el usuario enviado

                '
                Dim vi_aipinsencController As New vi_aipinsencController
                Dim segmanusuController As New segmanusuController
                Dim segmanusu As segmanusu = segmanusuController.selsegmanusuxnombreusuario(xnombreusuario)
                If segmanusu IsNot Nothing Then
                    idsegmanusuperit = segmanusu.idsegmanusu
                End If

                If (idsegmanusuperit > 0) Then

                    Dim _lista_vi_aipinsenc As List(Of vi_aipinsenc) = vi_aipinsencController.ObtenerViAipinsencPorPeritoYEstatus(idsegmanusuperit, "POR PROCESAR")

                    If (_lista_vi_aipinsenc.Count > 0) Then

                        _countTotal = _lista_vi_aipinsenc.Count

                        ''se recorre la lista de casos para procesarlos
                        For i As Integer = 0 To _lista_vi_aipinsenc.Count - 1
                            If (_lista_vi_aipinsenc(i).itipoinsenc = "SUSCRIPCION") Then
                                ''se busca la suscripcion para realizar el proceso de envio
                                Dim vi_aipinssusController As New vi_aipinssusController
                                Dim _vi_aipinssus As vi_aipinssus = vi_aipinssusController.selvi_aipinssusxidinsenc(_lista_vi_aipinsenc(i).idaipinsenc)
                                If (_vi_aipinssus IsNot Nothing) Then
                                    respopera = ProcesarInspeccionSuscripcion(_vi_aipinssus)

                                    If (respopera.irespuesta = "1") Then
                                        _countExito = _countExito + 1
                                        _exito = True

                                        ''se alamacena el num de Suscripcion enviado
                                        If (_suscripcion.Length > 0) Then
                                            _suscripcion = _suscripcion + ", "
                                        End If
                                        _suscripcion = _suscripcion + _lista_vi_aipinsenc(i).xnumsininsenc

                                        _lugar = "La inspección: " & _lista_vi_aipinsenc(i).idaipinsenc & " se envió por proceso masivo desde la app Móvil."
                                        AgregarAipLogEve(_lugar, idsegmanusuperit, "MASIVO")

                                    Else
                                        _countError = _countError + 1
                                        _error = True

                                        _lugar = "Error al enviar la inspección: " & _lista_vi_aipinsenc(i).idaipinsenc & ". Msj: " & respopera.xmsjusuario
                                        AgregarAipLogEve(_lugar, idsegmanusuperit, "MASIVO")


                                    End If
                                End If

                            Else
                                ''se busca el siniestro para realizar el proceso de envio
                                Dim vi_aipinssinController As New vi_aipinssinController
                                Dim _vi_aipinssin As vi_aipinssin = vi_aipinssinController.selvi_aipinssinxidinsenc(_lista_vi_aipinsenc(i).idaipinsenc)
                                If (_vi_aipinssin IsNot Nothing) Then
                                    respopera = ProcesarInspeccionSiniestro(_vi_aipinssin)

                                    If (respopera.irespuesta = "1") Then
                                        _countExito = _countExito + 1
                                        _exito = True

                                        ''se alamacena el num de siniestro enviado
                                        If (_siniestros.Length > 0) Then
                                            _siniestros = _siniestros + ", "
                                        End If
                                        _siniestros = _siniestros + _lista_vi_aipinsenc(i).xnumsininsenc

                                        _lugar = "La inspección: " & _lista_vi_aipinsenc(i).idaipinsenc & " se envió por proceso masivo desde la app Móvil."
                                        AgregarAipLogEve(_lugar, idsegmanusuperit, "MASIVO")
                                    Else
                                        _countError = _countError + 1
                                        _error = True

                                        _lugar = "Error al enviar la inspección: " & _lista_vi_aipinsenc(i).idaipinsenc & ". Msj: " & respopera.xmsjusuario
                                        AgregarAipLogEve(_lugar, idsegmanusuperit, "MASIVO")
                                    End If
                                End If

                            End If
                        Next
                        ''si se envio alguno con exito
                        If (_exito) Then
                            _msj = "Cantidad de casos enviados satisfactoriamente: " & _countExito.ToString() & " de " & _countTotal & ". "

                            ''se verifica si existen datos en las cadenas de sus y sin
                            If (_suscripcion.Length > 0 Or _siniestros.Length > 0) Then
                                _msj = _msj + "Enviados: "

                                If (_suscripcion.Length > 0) Then
                                    _msj = _msj + "N° Suscripción(" & _suscripcion & "). "
                                End If

                                If (_siniestros.Length > 0) Then
                                    _msj = _msj + "N° Siniestros(" & _siniestros & "). "
                                End If
                            End If

                            respopera.irespuesta = "1"
                            respopera.xmsjusuario = _msj
                            respopera.xmsjtecnico = ""

                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "No se envió ningún caso, verifique que todos los datos técnicos esten correctos y cargados en su totalidad."
                            respopera.xmsjtecnico = "No existen envios exitosos."
                        End If

                    Else
                        respopera.irespuesta = "0"
                        respopera.xmsjusuario = "No existen casos pendientes para enviar."
                        respopera.xmsjtecnico = "La lista de casos esta vacia."
                    End If
                Else
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "ERR-US01: Ha ocurrido un error con la información del usuario."
                    respopera.xmsjtecnico = "No existe el usuario por el nombre: " & xnombreusuario

                End If

                Return respopera

            Catch ex As Exception
                Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta")
                log_errores(ex.Message & " - EnvioMasivoDeCasosPorPeritoMovil", xrutaraiz)
                AgregarLogErrores("Metodo:EnvioMasivoDeCasosPorPeritoMovil ", ex)
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "ERR-EX01: Ha ocurrido un error al enviar los datos técnicos."
                respopera.xmsjtecnico = ex.Message
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function GuardarUsuarioConfiguracion(idsegmanusu As Decimal, finisusmanusuconf As DateTime, ffinsusmanusuconf As DateTime, iestatmanusuconf As String) As respopera
            Try

                Dim param1 As New Client.OracleParameter
                param1.OracleDbType = Client.OracleDbType.Varchar2
                param1.Size = 20
                param1.Value = "directo"
                param1.ParameterName = "p_illamada"

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusuop"

                Dim param3 As New Client.OracleParameter
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecorto"

                Dim param4 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.OracleDbType = Client.OracleDbType.Varchar2
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Varchar2
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Varchar2
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Varchar2
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output

                'Paramestros de la tabla

                Dim param8 As New Client.OracleParameter
                param8.OracleDbType = Client.OracleDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = 0
                param8.ParameterName = "p_idaipmanusuconf"
                param8.Direction = ParameterDirection.InputOutput

                Dim param9 As New Client.OracleParameter
                param9.OracleDbType = Client.OracleDbType.Decimal
                param9.Precision = 18
                param9.Scale = 0
                param9.Value = idsegmanusu
                param9.ParameterName = "p_idsegmanusu"

                Dim param10 As New Client.OracleParameter
                param10.OracleDbType = Client.OracleDbType.Date
                If finisusmanusuconf > CDate("01-01-1900") Then
                    param10.Value = finisusmanusuconf
                Else
                    param10.Value = CDate("01-01-1900")
                End If
                param10.ParameterName = "p_finisusmanusuconf"

                Dim param11 As New Client.OracleParameter
                param11.OracleDbType = Client.OracleDbType.Date
                param11.Size = 50
                If ffinsusmanusuconf > CDate("01-01-1900") Then
                    param11.Value = ffinsusmanusuconf
                Else
                    param11.Value = CDate("01-01-1900")
                End If
                param11.ParameterName = "p_ffinsusmanusuconf"

                Dim param12 As New Client.OracleParameter
                param12.OracleDbType = Client.OracleDbType.Varchar2
                param12.Size = 20
                If iestatmanusuconf IsNot Nothing And iestatmanusuconf <> "" Then
                    param12.Value = iestatmanusuconf
                Else
                    param12.Value = " "
                End If
                param12.ParameterName = "p_aiestatmanusuconf"

                Dim param13 As New Client.OracleParameter
                param13.OracleDbType = Client.OracleDbType.Date
                param13.Value = Date.Now
                param13.ParameterName = "p_fcreamanusuconf"

                Dim param14 As New Client.OracleParameter
                param14.OracleDbType = Client.OracleDbType.Date
                param14.Value = Date.Now
                param14.ParameterName = "p_fmodmanusuconf"

                Dim param15 As New Client.OracleParameter
                param15.OracleDbType = Client.OracleDbType.Decimal
                param15.Precision = 18
                param15.Scale = 0
                param15.Value = 0
                param15.ParameterName = "p_idseglogreg"


                Dim xdeclare As String = "DECLARE v_p_illamada varchar2(32767); v_p_idsegmanusuop float; v_p_xnombrecorto varchar2(32767); v_p_irespuesta varchar2(32767); v_p_xmsjusuario varchar2(32767); v_p_xmsjtecnico varchar2(32767); v_p_coderrorlog varchar2(32767); v_p_idaipmanusuconf float; v_p_idsegmanusu float; v_p_finisusmanusuconf date; v_p_ffinsusmanusuconf date; v_p_iestatmanusuconf varchar2(32767); v_p_fcreamanusuconf date; v_p_fmodmanusuconf date; v_p_idseglogreg float;"
                Dim xsp As String = "begin sp_rnguardaraipusuario(:v_p_illamada, :v_p_idsegmanusuop, :v_p_xnombrecorto, :v_p_irespuesta, :v_p_xmsjusuario, :v_p_xmsjtecnico, :v_p_coderrorlog, :v_p_idaipmanusuconf, :v_p_idsegmanusu, :v_p_finisusmanusuconf, :v_p_ffinsusmanusuconf, :v_p_iestatmanusuconf, :v_p_fcreamanusuconf, :v_p_fmodmanusuconf, :v_p_idseglogreg); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value.ToString()
                respopera.xmsjusuario = param5.Value.ToString()
                respopera.xmsjtecnico = param6.Value.ToString()
                If IsNumeric(param8.Value.ToString()) = True Then
                    respopera.id = Int(param8.Value.ToString())
                End If

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:GuardarUsuarioConfiguracion ", ex)
                Return respopera
            End Try
        End Function

        <HttpPost()> _
        Public Function VerificarUsuarioSuspendidos() As respopera
            Try

                Dim param1 As New Client.OracleParameter
                param1.OracleDbType = Client.OracleDbType.Varchar2
                param1.Size = 20
                param1.Value = "directo"
                param1.ParameterName = "p_illamada"

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = 0
                param2.ParameterName = "p_idsegmanusuop"

                Dim param3 As New Client.OracleParameter
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecorto"

                Dim param4 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.OracleDbType = Client.OracleDbType.Varchar2
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Varchar2
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Varchar2
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Varchar2
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output


                Dim xdeclare As String = "DECLARE v_p_illamada varchar2(32767); v_p_idsegmanusuop float; v_p_xnombrecorto varchar2(32767); v_p_irespuesta varchar2(32767); v_p_xmsjusuario varchar2(32767); v_p_xmsjtecnico varchar2(32767); v_p_coderrorlog varchar2(32767);"
                Dim xsp As String = "begin sp_rnverificarusususpendidos(:v_p_illamada, :v_p_idsegmanusuop, :v_p_xnombrecorto, :v_p_irespuesta, :v_p_xmsjusuario, :v_p_xmsjtecnico, :v_p_coderrorlog); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7)

                Dim respopera As New respopera
                respopera.irespuesta = param4.Value.ToString()
                respopera.xmsjusuario = param5.Value.ToString()
                respopera.xmsjtecnico = param6.Value.ToString()

                Return respopera

            Catch ex As Exception

                Dim respopera As New respopera
                respopera.irespuesta = 0
                respopera.xmsjusuario = "Error Comuniquese con Sistemas"
                respopera.xmsjtecnico = ex.Message
                AgregarLogErrores("Metodo:VerificarUsuarioSuspendidos ", ex)
                Return respopera
            End Try
        End Function


        <HttpPost()> _
        Public Function EliminarInspeccionPorEnc(idaipinsenc As Decimal, idsegmanusu As Decimal) As respopera
            Dim respopera As New respopera
            Try

                Dim ActividadController As New ActividadController
                ''se debe verificar si es administrador para eliminar una inspeccion
                respopera = ActividadController.VerificarPermisosAdmin(idsegmanusu)

                If (respopera IsNot Nothing) Then
                    If (respopera.irespuesta = "0") Then
                        Return respopera
                    End If
                End If

                Dim vi_aipinsenc As New vi_aipinsenc
                Dim vi_aipinsencController As New vi_aipinsencController
                vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(idaipinsenc)


                If (vi_aipinsenc IsNot Nothing) Then

                    If (vi_aipinsenc.iestatinsenc <> "PROCEDENTE") Then

                        ''buscar todos los archivo para mantenerlos en memoria y si la respuesta del eliminar la inspeccion es 1 se eliminan los archivos fisicos
                        Dim aipinsarchController As New aipinsarchController
                        Dim _lista_aipinsarch As List(Of aipinsarch) = aipinsarchController.ObtenerTodosPorIdEnc(idaipinsenc)

                        ''buscar todas las fotos para mantenerlos en memoria y si la respuesta del eliminar la inspeccion es 1 se eliminan los archivos fisicos
                        Dim aipinsfotoController As New aipinsfotoController
                        Dim _lista_aipinsfoto As List(Of aipinsfoto) = aipinsfotoController.selaipinsfotoxidaipinsenc(idaipinsenc)



                        ''se realiza la llama al sp para eliminar la inspeccion

                        respopera = SpEliminarInspeccion(idaipinsenc, idsegmanusu)
                        Dim _xruta As String = ""
                        Dim _xrutaThum As String = ""
                        Dim _xrutaZoom As String = ""
                        If (respopera.irespuesta = "1") Then

                            respopera.xmsjusuario = "La inspección se ha eliminado satisfactoriamente."
                            Try
                                If (_lista_aipinsfoto.Count > 0) Then
                                    For i As Integer = 0 To _lista_aipinsfoto.Count - 1
                                        _xruta = _lista_aipinsfoto(i).xrutainsfoto & _lista_aipinsfoto(i).xnomarchinsfoto

                                        If (File.Exists(_xruta)) Then
                                            File.Delete(_xruta)
                                        End If
                                        _xrutaThum = _lista_aipinsfoto(i).xrutainsfoto & "thumbnail\" & _lista_aipinsfoto(i).xnomarchinsfoto
                                        If (File.Exists(_xrutaThum)) Then
                                            File.Delete(_xrutaThum)
                                        End If

                                        _xrutaZoom = _lista_aipinsfoto(i).xrutainsfoto & "zoom\" & _lista_aipinsfoto(i).xnomarchinsfoto
                                        If (File.Exists(_xrutaZoom)) Then
                                            File.Delete(_xrutaZoom)
                                        End If
                                    Next
                                End If
                            Catch ex As Exception
                                AgregarLogErrores("Metodo:EliminarInspeccionPorEnc -> EliminarFotos ", ex)
                            End Try

                            Try
                                If (_lista_aipinsarch.Count > 0) Then
                                    For i As Integer = 0 To _lista_aipinsarch.Count - 1
                                        _xruta = _lista_aipinsarch(i).xrutainsarch & _lista_aipinsarch(i).xnominsarch

                                        If (File.Exists(_xruta)) Then
                                            File.Delete(_xruta)
                                        End If

                                    Next
                                End If
                            Catch ex As Exception
                                AgregarLogErrores("Metodo:EliminarInspeccionPorEnc -> EliminarArchivos ", ex)
                            End Try
                        Else
                            respopera.irespuesta = "0"
                            respopera.xmsjusuario = "Ha ocurrido un error al intentar eliminar la actividad solicitada."
                        End If

                    Else
                        respopera.irespuesta = "0"
                        respopera.xmsjusuario = "No se puede eliminar una inspección en estatus Procedente."
                    End If
                End If




                Return respopera

            Catch ex As Exception
                AgregarLogErrores("Metodo:EliminarInspeccionPorEnc ", ex)
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar eliminar la actividad solicitada."

                Return respopera
            End Try

        End Function


        <HttpPost()> _
        Public Function SpEliminarInspeccion(idaipinsenc As Decimal, idsegmanusu As Decimal) As respopera
            Dim respopera As New respopera
            Try

                If ConfigurationManager.AppSettings("motoddb") = "sql" Then



                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "No disponible para este ambiente"
                    respopera.xmsjtecnico = "Actualmente para sql no existe el sp creado"

                Else
                    respopera = SpEliminarInspeccionoracle(idaipinsenc, idsegmanusu)
                End If
                Return respopera

            Catch ex As Exception

                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar modificar la actividad solicitada."

                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function SpEliminarInspeccionoracle(idaipinsenc As Decimal, idsegmanusu As Decimal) As respopera
            Dim respopera As New respopera
            Try


                Dim param1 As New Client.OracleParameter
                param1.OracleDbType = Client.OracleDbType.Varchar2
                param1.Size = 20
                param1.Value = "eliminar"
                param1.ParameterName = "p_illamada"

                Dim param2 As New Client.OracleParameter
                param2.OracleDbType = Client.OracleDbType.Decimal
                param2.Precision = 18
                param2.Scale = 0
                param2.Value = idsegmanusu
                param2.ParameterName = "p_idsegmanusu"

                Dim param3 As New Client.OracleParameter
                param3.OracleDbType = Client.OracleDbType.Varchar2
                param3.Size = 20
                param3.Value = "aipauto"
                param3.ParameterName = "p_xnombrecorto"

                Dim param4 As New Client.OracleParameter 'devuelve el estatus de la operacion 1=exitoso sino error en el proceso 0 =error en todo, 2 =error el algunos pasos
                param4.OracleDbType = Client.OracleDbType.Varchar2
                param4.Size = 1
                param4.ParameterName = "p_irespuesta"
                param4.Direction = ParameterDirection.Output

                Dim param5 As New Client.OracleParameter
                param5.OracleDbType = Client.OracleDbType.Varchar2
                param5.Size = 300
                param5.ParameterName = "p_xmsjusuario"
                param5.Direction = ParameterDirection.Output

                Dim param6 As New Client.OracleParameter
                param6.OracleDbType = Client.OracleDbType.Varchar2
                param6.Size = 300
                param6.ParameterName = "p_xmsjtecnico"
                param6.Direction = ParameterDirection.Output

                Dim param7 As New Client.OracleParameter
                param7.OracleDbType = Client.OracleDbType.Varchar2
                param7.Size = 300
                param7.ParameterName = "p_coderrorlog"
                param7.Direction = ParameterDirection.Output


                ''''----------------------------

                Dim param8 As New Client.OracleParameter
                param8.OracleDbType = Client.OracleDbType.Decimal
                param8.Precision = 18
                param8.Scale = 0
                param8.Value = idaipinsenc
                param8.ParameterName = "p_idaipinsenc"


                Dim xdeclare As String = "DECLARE v_p_illamada VARCHAR2(32767); v_p_idsegmanusu FLOAT; v_p_xnombrecorto VARCHAR2(32767); v_p_irespuesta VARCHAR2(32767); v_p_xmsjusuario VARCHAR2(32767); v_p_xmsjtecnico VARCHAR2(32767); v_p_coderrorlog VARCHAR2(32767); v_p_idaipinsenc FLOAT;"
                Dim xsp As String = "begin SP_RNELIMINARINSPECCION(:v_p_illamada,:v_p_idsegmanusu,:v_p_xnombrecorto,:v_p_irespuesta,:v_p_xmsjusuario,:v_p_xmsjtecnico,:v_p_coderrorlog,:v_p_idaipinsenc); end;"
                Dim f As Integer = _db.ExecuteStoreCommand(xdeclare & xsp, param1, param2, param3, param4, param5, param6, param7, param8)


                respopera.irespuesta = param4.Value.ToString()
                respopera.xmsjusuario = param5.Value.ToString()
                respopera.xmsjtecnico = param6.Value.ToString()
                If IsNumeric(param8.Value.ToString()) = True Then
                    respopera.id = Int(param8.Value.ToString())
                End If

                Return respopera

            Catch ex As Exception
                AgregarLogErrores("Metodo:SpEliminarInspeccionoracle ", ex)
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "Ha ocurrido un error al intentar eliminarla inspección."

                Return respopera
            End Try

        End Function

        <HttpPost()> _
        Public Function ObtenerListaDetallesSiniestro(idsegmanorgperit As Decimal, xnumsininsenc As String) As List(Of vi_aipextsintagenda)

            Dim vi_aipextsintagendaController As New vi_aipextsintagendaController
            Dim _lista_vi_aipextsintagenda As List(Of vi_aipextsintagenda) = vi_aipextsintagendaController.selvi_aipextsintagendaIdsegmanorgSini(idsegmanorgperit, xnumsininsenc)

            Return _lista_vi_aipextsintagenda

        End Function

        <HttpPost()> _
        Public Function ObtenerListaDetallesSiniestro2(idaipinsenc As Decimal) As List(Of vi_aipextsintagenda)

            Dim vi_aipinsencController As New vi_aipinsencController
            ''se debe verificar si es administrador para eliminar una inspeccion
            Dim _vi_aipinsenc As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(idaipinsenc)

            Dim _lista_vi_aipextsintagenda As List(Of vi_aipextsintagenda) = ObtenerListaDetallesSiniestro(_vi_aipinsenc.idsegmanorgperit, _vi_aipinsenc.xnumsininsenc)

            Return _lista_vi_aipextsintagenda

        End Function

        ''' <summary>
        ''' este metodo se creo con la finalidad de crear una inspeccion de tipo siniestro basado en una anterior del mismo numero de siniestro
        ''' </summary>
        ''' <param name="idaipinsencAnt"></param>
        ''' <param name="idsegmanorgperit"></param>
        ''' <param name="idaipinsmotiv"></param>
        ''' <param name="idsegmanusuperit"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        <HttpPost()> _
        Public Function CrearInspeccionPorAnexo(idsegmanusu As Decimal, idaipinsencAnt As Decimal, idsegmanorgperit As Decimal, idaipinsmotiv As Decimal, idsegmanusuperit As Decimal) As respopera

            Dim respopera As respopera
            Dim aipinsencController As New aipinsencController
            Dim aipactivperiController As New aipactivperiController
            Dim aipinssinController As New aipinssinController

            Dim aipinsencAnt As aipinsenc = aipinsencController.selaipinsencxid(idaipinsencAnt)
            Dim aipactivperiAnt As aipactivperi = aipactivperiController.selaipactivperixid(aipinsencAnt.idaipactivperi)
            Dim aipinssinAnt As aipinssin = aipinssinController.selaipinssinxidenc(idaipinsencAnt)


            Dim aipinsenc As New aipinsenc
            Dim aipactivperi As New aipactivperi
            Dim aipinssin As New aipinssin

            Dim idaipactivperi As Decimal = 0
            Dim idaipinsintext As Decimal = 0

            'Crear la tabla de intermediacion            
            respopera = CrearIntermediacionExterna(0, aipinsencAnt.xnumsininsenc, aipinsencAnt.xplacinsenc, aipinsencAnt.xsermotinsenc, "R", idsegmanusuperit, 0, aipinsencAnt.itipoinsenc, idsegmanorgperit)
            idaipinsintext = respopera.id


            'Crear la actividad
            aipactivperi.idaipactivperi = 0
            aipactivperi.idseglogreg = 0
            aipactivperi.fejecactivperi = FormatoFechaHora(Date.Now)
            aipactivperi.ffinejecactivperi = aipactivperi.fejecactivperi.AddHours(1)


            aipactivperi.idcomunmancont = aipactivperiAnt.idcomunmancont
            aipactivperi.idcomunmanpais = aipactivperiAnt.idcomunmanpais
            aipactivperi.idcomunmanestado = aipactivperiAnt.idcomunmanestado
            aipactivperi.idcomunmanlocalid = aipactivperiAnt.idcomunmanlocalid
            aipactivperi.xdireccionactivperi = aipactivperiAnt.xdireccionactivperi
            aipactivperi.xtelfmovilactivperi = aipactivperiAnt.xtelfmovilactivperi
            aipactivperi.xnomcliactivperi = aipactivperiAnt.xnomcliactivperi
            aipactivperi.xcorreoelectronicoactivperi = aipactivperiAnt.xcorreoelectronicoactivperi
            aipactivperi.xtituactivperi = aipactivperiAnt.xtituactivperi
            aipactivperi.xdescactivperi = aipactivperiAnt.xdescactivperi
            aipactivperi.ialcanactivperi = aipactivperiAnt.ialcanactivperi
            aipactivperi.iestatactivperi = aipactivperiAnt.iestatactivperi
            aipactivperi.idsegmanusucrea = aipactivperiAnt.idsegmanusucrea
            aipactivperi.fcrearegactivperi = aipactivperiAnt.fcrearegactivperi
            'insertar actividad
            respopera = aipactivperiController.insaipactivperi(aipactivperi)
            idaipactivperi = respopera.id

            ''Crear la inspeccion
            aipinsenc.idaipinsenc = 0
            aipinsenc.idaipactivperi = idaipactivperi
            aipinsenc.idaipinsintext = idaipinsintext
            aipinsenc.idaipinsmotiv = idaipinsmotiv
            aipinsenc.idsegmanusuperit = idsegmanusuperit
            aipinsenc.idsegmanusuaudit = idsegmanusuperit
            aipinsenc.xnuminspinsenc = ""
            aipinsenc.iorigeninsenc = "WEB"
            aipinsenc.facepinsenc = CDate("01-01-1900")
            aipinsenc.fcancinsenc = CDate("01-01-1900")
            aipinsenc.fultrechinsenc = CDate("01-01-1900")
            'aipinsenc.fcreainsenc = FormatDateTime(Date.Now, DateFormat.ShortDate)
            aipinsenc.fcreainsenc = Date.Now
            aipinsenc.fprocinsenc = CDate("01-01-1900")
            aipinsenc.faudinsenc = CDate("01-01-1900")
            aipinsenc.icerrarinsenc = 0
            aipinsenc.iestatinsenc = "POR PROCESAR"
            aipinsenc.idseglogreg = 0
            '
            aipinsenc.itipoinsenc = aipinsencAnt.itipoinsenc
            aipinsenc.itipoperitinsenc = aipinsencAnt.itipoperitinsenc
            aipinsenc.xcedpropinsenc = aipinsencAnt.xcedpropinsenc
            aipinsenc.xcedsidoinsenc = aipinsencAnt.xcedsidoinsenc
            aipinsenc.xplacinsenc = aipinsencAnt.xplacinsenc
            aipinsenc.xsermotinsenc = aipinsencAnt.xsermotinsenc
            aipinsenc.xsercarrinsenc = aipinsencAnt.xsercarrinsenc
            aipinsenc.xnumpolinsenc = aipinsencAnt.xnumpolinsenc
            aipinsenc.xnumsininsenc = aipinsencAnt.xnumsininsenc
            aipinsenc.xllavinsenc = aipinsencAnt.xllavinsenc
            aipinsenc.xnomprodinsenc = aipinsencAnt.xnomprodinsenc
            aipinsenc.xnomprodtorinsenc = aipinsencAnt.xnomprodtorinsenc
            aipinsenc.xnomramopolizinsenc = aipinsencAnt.xnomramopolizinsenc
            aipinsenc.xnomsucinsinsenc = aipinsencAnt.xnomsucinsinsenc
            aipinsenc.irechinsenc = aipinsencAnt.irechinsenc
            aipinsenc.xmotcrechinsenc = aipinsencAnt.xmotcrechinsenc
            aipinsenc.xdescinsenc = aipinsencAnt.xdescinsenc
            'insertar inspeccion
            aipinsenc.nanexoinsenc = NumeroAnexoInspeccion(aipinsenc.xnumsininsenc) + 1
            respopera = aipinsencController.insaipinsenc(aipinsenc)

            'Crear la inspeccion Sini
            aipinssin.idaipinssin = 0
            aipinssin.idseglogreg = 0
            aipinssin.idaipinsenc = respopera.id
            aipinssin.iestatinssin = "ACTIVO"
            '
            aipinssin.nfactinssin = aipinssinAnt.nfactinssin
            aipinssin.irepuinssin = aipinssinAnt.irepuinssin
            aipinssin.imobrinssin = aipinssinAnt.imobrinssin
            aipinssin.xnomaseginssin = aipinssinAnt.xnomaseginssin
            aipinssin.idaipmanveh = aipinssinAnt.idaipmanveh
            aipinssin.xsucuinssin = aipinssinAnt.xsucuinssin
            aipinssin.nkiloinssin = aipinssinAnt.nkiloinssin
            aipinssin.xdescinssin = aipinssinAnt.xdescinssin

            'insertar inspeccion Sini
            respopera = aipinssinController.insaipinssin(aipinssin)
            Dim idaipinssin As Decimal = respopera.id

            ''insertar los motivos de inssinmotiv
            Dim aipinssinmotivController As New aipinssinmotivController
            Dim lista_aipinssinmotivAnt As List(Of aipinssinmotiv) = aipinssinmotivController.selaipinssinmotivxidaipinssin(aipinssinAnt.idaipinssin)
            Dim aipinssinmotiv As aipinssinmotiv
            ''esto no deberia estar aqui sino en el modulo pero hay que cambiar el movil
            For i = 0 To lista_aipinssinmotivAnt.Count - 1

                aipinssinmotiv = New aipinssinmotiv

                aipinssinmotiv.idaipinssinmotiv = 0
                aipinssinmotiv.idaipinssin = idaipinssin
                aipinssinmotiv.idseglogreg = 0

                aipinssinmotiv.idaipinsmotiv = lista_aipinssinmotivAnt(i).idaipinsmotiv
                If lista_aipinssinmotivAnt(i).idaipinsmotiv = idaipinsmotiv Then
                    aipinssinmotiv.itilinssinmotiv = True
                Else
                    aipinssinmotiv.itilinssinmotiv = False
                End If

                aipinssinmotivController.insaipinssinmotiv(aipinssinmotiv)

            Next
            ''fin insertar los motivos de inssinmotiv


            ''dependiendo de lo que digan crear los respuestos

            ''dependiendo de lo que digan crear las manos de obras

            ''Transferir los fotos, videos, notas de voz de aplicar

            Return respopera

        End Function

        ''' <summary>
        ''' este metodo se creo con la finalidad de verificar si la inspeccion sobre la cual se quiere crear otra por anexo es la ultima por siniestro        
        ''' </summary>
        ''' <param name="idaipinsencComparar"></param>
        ''' <param name="xnumsininsenc"></param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        <HttpPost()> _
        Public Function VerificarSiEsUltimaInspeccionDelSiniestro(idaipinsencComparar As Decimal, xnumsininsenc As String) As respopera

            Dim respopera As New respopera
            respopera.id = 0
            respopera.irespuesta = "1"            
            respopera.xmsjusuario = "OK"
            respopera.xmsjtecnico = "OK"

            Dim aipinsencController As New aipinsencController
            Dim vi_aipinsencController As New vi_aipinsencController

            Dim idaipinsencMaxNumSini As Decimal = aipinsencController.ObtenerMaxIdPorNumSini(xnumsininsenc)
            Dim vi_aipinsencMaxNumSini As vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(idaipinsencMaxNumSini)

            'ya con el id max y su registro verifico dos cosas que se quiera crear el anexo heredado de la inspeccion mas actual asociada al numero de siniestro
            ' y que eda inspeccion este PROCEDENTE
            If vi_aipinsencMaxNumSini.iestatinsenc <> "PROCEDENTE" And vi_aipinsencMaxNumSini.iestatinsenc <> "CANCELADA" And vi_aipinsencMaxNumSini.iestatinsenc <> "APROBADA" And vi_aipinsencMaxNumSini.iestatinsenc <> "CANCELADO" And vi_aipinsencMaxNumSini.iestatinsenc <> "APROBADO" Then
                respopera.id = 0
                respopera.irespuesta = "0"
                respopera.xmsjusuario = "No se puede crear un anexo para la inspección indicada, dado que la última inspección creada asociada al número de siniestro " & xnumsininsenc & " no se encuentra finalizada, se encuentra en el proceso de inspección en la aplicación de peritaje"
                If (vi_aipinsencMaxNumSini.iestatinsenc = "POR PROCESAR") Then
                    respopera.xmsjusuario = respopera.xmsjusuario & ", es verificada por el perito " & vi_aipinsencMaxNumSini.xnombrecompletoperit
                Else
                    respopera.xmsjusuario = respopera.xmsjusuario & ", es verificada por el auditor " & vi_aipinsencMaxNumSini.xnombrecompletoaudit
                End If
                respopera.xmsjtecnico = respopera.xmsjusuario
            Else
                If vi_aipinsencMaxNumSini.idaipinsenc <> idaipinsencComparar Then
                    respopera.id = 0
                    respopera.irespuesta = "0"
                    respopera.xmsjusuario = "El anexo no se puede crear dado que la inspección seleccionada no es la más reciente asociada al número de siniestro " & xnumsininsenc
                    respopera.xmsjtecnico = "El anexo no se puede crear dado que la inspección seleccionada no es la más reciente asociada al número de siniestro " & xnumsininsenc
                End If
            End If

            Return respopera

        End Function

        <HttpPost()> _
        <HttpGet()> _
        Public Function ObtenerDatosCasosAlmacenadosAPP(nombres As String) As List(Of String)


            Dim nombresFotos As List(Of String) = nombres.Split("?").ToList()
            Dim xrutaraiz As String = ConfigurationManager.AppSettings("xruta") '
            Dim lugar As String = "inicio "
            'log_errores(lugar + nombres, xrutaraiz)
            'log_errores(nombresFotos.ToArray.ToString(), xrutaraiz)


            Dim lista_Id As List(Of Decimal) = New List(Of Decimal)
            Dim primeraParte As String = ""
            For Each nombre As String In nombresFotos
                lista_Id.Add(nombre.Split("#")(0).Split(".")(0))
                'log_errores(nombre.Split("#")(0).Split(".")(0), xrutaraiz)
            Next
            'Dim lista_IdUnico As List(Of Decimal)
            'lista_IdUnico = lista_Id.Distinct().ToList()            
            'log_errores("lugar2", xrutaraiz)

            Dim s As String = "{0}#{1}#{2}#{3}#{4}#{5}"
            Dim dato As String
            'Dim msg As String = String.Format(s, "Suresh", "Dasari", "Hyderabad", 32)
            Dim lista_Datos As List(Of String) = New List(Of String)

            Dim vi_aipinsencController As New vi_aipinsencController
            Dim _vi_aipinsenc As vi_aipinsenc = Nothing
            For Each id As Decimal In lista_Id.Distinct().ToList()
                _vi_aipinsenc = vi_aipinsencController.selvi_aipinsencxid(id)
                If _vi_aipinsenc IsNot Nothing Then

                    dato = String.Format(s, _vi_aipinsenc.idaipinsenc.ToString(), _vi_aipinsenc.itipoinsenc, _vi_aipinsenc.xcedpropinsenc, _vi_aipinsenc.xsermotinsenc, _vi_aipinsenc.xsercarrinsenc, _vi_aipinsenc.xnumpolinsenc)
                    lista_Datos.Add(dato)
                End If
            Next
            'log_errores("lugar3", xrutaraiz)
            'log_errores(lista_Datos.ToArray.ToString(), xrutaraiz)
            '
            Return lista_Datos
        End Function


    End Class
End Namespace